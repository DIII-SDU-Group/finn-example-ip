// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_ap_uint_1_1u_Identity_ap_uint_1_ap_uint_32_ap_uint_4_ThresholdsActivation_64u_4u_1u_ap_uint_11_ap_uint_1_0_less_equal_ap_uint_11_ap_resource_lut_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TDATA,
        in0_V_TVALID,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY,
        weights_V_TDATA,
        weights_V_TVALID,
        weights_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in0_V_TDATA;
input   in0_V_TVALID;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;
input  [127:0] weights_V_TDATA;
input   weights_V_TVALID;
output   weights_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] threshs_m_thresholds_V_0_0_address0;
reg    threshs_m_thresholds_V_0_0_ce0;
wire   [10:0] threshs_m_thresholds_V_0_0_q0;
wire   [5:0] threshs_m_thresholds_V_1_0_address0;
reg    threshs_m_thresholds_V_1_0_ce0;
wire   [10:0] threshs_m_thresholds_V_1_0_q0;
wire   [5:0] threshs_m_thresholds_V_2_0_address0;
reg    threshs_m_thresholds_V_2_0_ce0;
wire   [9:0] threshs_m_thresholds_V_2_0_q0;
wire   [5:0] threshs_m_thresholds_V_3_0_address0;
reg    threshs_m_thresholds_V_3_0_ce0;
wire   [10:0] threshs_m_thresholds_V_3_0_q0;
reg    in0_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_765_p2;
wire   [0:0] icmp_ln252_fu_774_p2;
reg    out_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln289_reg_6150;
reg    weights_V_TDATA_blk_n;
reg   [19:0] i_reg_623;
wire   [19:0] i_1_fu_759_p2;
reg    ap_predicate_op103_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] trunc_ln256_fu_974_p1;
wire   [10:0] accu_V_0_0_fu_2521_p2;
reg   [10:0] accu_V_0_0_reg_6130;
wire   [10:0] accu_V_0_1_fu_3585_p2;
reg   [10:0] accu_V_0_1_reg_6135;
wire   [10:0] accu_V_0_2_fu_4649_p2;
reg   [10:0] accu_V_0_2_reg_6140;
wire   [10:0] accu_V_0_3_fu_5713_p2;
reg   [10:0] accu_V_0_3_reg_6145;
wire   [0:0] icmp_ln289_fu_5725_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [31:0] ap_phi_mux_inElem_phi_fu_637_p74;
wire   [31:0] ap_phi_reg_pp0_iter0_inElem_reg_634;
wire   [31:0] tmp_2_fu_895_p38;
wire   [63:0] idxprom2_i_fu_5759_p1;
reg   [10:0] accu_V_0_0_1_fu_384;
reg   [10:0] accu_V_0_1_1_fu_388;
reg   [10:0] accu_V_0_2_1_fu_392;
reg   [10:0] accu_V_0_3_1_fu_396;
reg   [31:0] sf_fu_400;
wire   [31:0] sf_1_fu_5719_p2;
reg   [31:0] inputBuf_V_35_fu_404;
reg   [31:0] inputBuf_V_35_1_fu_408;
reg   [31:0] inputBuf_V_35_2_fu_412;
reg   [31:0] inputBuf_V_35_3_fu_416;
reg   [31:0] inputBuf_V_35_4_fu_420;
reg   [31:0] inputBuf_V_35_5_fu_424;
reg   [31:0] inputBuf_V_35_6_fu_428;
reg   [31:0] inputBuf_V_35_7_fu_432;
reg   [31:0] inputBuf_V_35_8_fu_436;
reg   [31:0] inputBuf_V_35_9_fu_440;
reg   [31:0] inputBuf_V_35_10_fu_444;
reg   [31:0] inputBuf_V_35_11_fu_448;
reg   [31:0] inputBuf_V_35_12_fu_452;
reg   [31:0] inputBuf_V_35_13_fu_456;
reg   [31:0] inputBuf_V_35_14_fu_460;
reg   [31:0] inputBuf_V_35_15_fu_464;
reg   [31:0] inputBuf_V_35_16_fu_468;
reg   [31:0] inputBuf_V_35_17_fu_472;
reg   [31:0] inputBuf_V_35_18_fu_476;
reg   [31:0] inputBuf_V_35_19_fu_480;
reg   [31:0] inputBuf_V_35_20_fu_484;
reg   [31:0] inputBuf_V_35_21_fu_488;
reg   [31:0] inputBuf_V_35_22_fu_492;
reg   [31:0] inputBuf_V_35_23_fu_496;
reg   [31:0] inputBuf_V_35_24_fu_500;
reg   [31:0] inputBuf_V_35_25_fu_504;
reg   [31:0] inputBuf_V_35_26_fu_508;
reg   [31:0] inputBuf_V_35_27_fu_512;
reg   [31:0] inputBuf_V_35_28_fu_516;
reg   [31:0] inputBuf_V_35_29_fu_520;
reg   [31:0] inputBuf_V_35_30_fu_524;
reg   [31:0] inputBuf_V_35_31_fu_528;
reg   [31:0] inputBuf_V_35_32_fu_532;
reg   [31:0] inputBuf_V_35_33_fu_536;
reg   [31:0] inputBuf_V_35_34_fu_540;
reg   [31:0] inputBuf_V_35_35_fu_544;
reg   [31:0] nf_2_fu_548;
wire   [31:0] select_ln301_fu_5779_p3;
reg    ap_block_pp0_stage0_01001;
wire   [5:0] tmp_2_fu_895_p37;
wire   [0:0] icmp_ln271_fu_1173_p2;
wire   [0:0] p_Result_1_fu_1463_p3;
wire   [0:0] trunc_ln674_fu_1211_p1;
wire   [0:0] xor_ln870_fu_1471_p2;
wire   [0:0] xor_ln870_1_fu_1477_p2;
wire   [0:0] p_Result_0_1_fu_1487_p3;
wire   [0:0] tmp_fu_1215_p3;
wire   [0:0] xor_ln870_2_fu_1495_p2;
wire   [0:0] xor_ln870_3_fu_1501_p2;
wire   [0:0] p_Result_0_2_fu_1511_p3;
wire   [0:0] tmp_1_fu_1223_p3;
wire   [0:0] xor_ln870_4_fu_1519_p2;
wire   [0:0] xor_ln870_5_fu_1525_p2;
wire   [0:0] p_Result_0_3_fu_1535_p3;
wire   [0:0] tmp_3_fu_1231_p3;
wire   [0:0] xor_ln870_6_fu_1543_p2;
wire   [0:0] xor_ln870_7_fu_1549_p2;
wire   [0:0] p_Result_0_4_fu_1559_p3;
wire   [0:0] tmp_4_fu_1239_p3;
wire   [0:0] xor_ln870_8_fu_1567_p2;
wire   [0:0] xor_ln870_9_fu_1573_p2;
wire   [0:0] p_Result_0_5_fu_1583_p3;
wire   [0:0] tmp_5_fu_1247_p3;
wire   [0:0] xor_ln870_10_fu_1591_p2;
wire   [0:0] xor_ln870_11_fu_1597_p2;
wire   [0:0] p_Result_0_6_fu_1607_p3;
wire   [0:0] tmp_6_fu_1255_p3;
wire   [0:0] xor_ln870_12_fu_1615_p2;
wire   [0:0] xor_ln870_13_fu_1621_p2;
wire   [0:0] p_Result_0_7_fu_1631_p3;
wire   [0:0] tmp_7_fu_1263_p3;
wire   [0:0] xor_ln870_14_fu_1639_p2;
wire   [0:0] xor_ln870_15_fu_1645_p2;
wire   [0:0] p_Result_0_8_fu_1655_p3;
wire   [0:0] tmp_8_fu_1271_p3;
wire   [0:0] xor_ln870_16_fu_1663_p2;
wire   [0:0] xor_ln870_17_fu_1669_p2;
wire   [0:0] p_Result_0_9_fu_1679_p3;
wire   [0:0] tmp_9_fu_1279_p3;
wire   [0:0] xor_ln870_18_fu_1687_p2;
wire   [0:0] xor_ln870_19_fu_1693_p2;
wire   [0:0] p_Result_0_s_fu_1703_p3;
wire   [0:0] tmp_10_fu_1287_p3;
wire   [0:0] xor_ln870_20_fu_1711_p2;
wire   [0:0] xor_ln870_21_fu_1717_p2;
wire   [0:0] p_Result_0_10_fu_1727_p3;
wire   [0:0] tmp_11_fu_1295_p3;
wire   [0:0] xor_ln870_22_fu_1735_p2;
wire   [0:0] xor_ln870_23_fu_1741_p2;
wire   [0:0] p_Result_0_11_fu_1751_p3;
wire   [0:0] tmp_12_fu_1303_p3;
wire   [0:0] xor_ln870_24_fu_1759_p2;
wire   [0:0] xor_ln870_25_fu_1765_p2;
wire   [0:0] p_Result_0_12_fu_1775_p3;
wire   [0:0] tmp_13_fu_1311_p3;
wire   [0:0] xor_ln870_26_fu_1783_p2;
wire   [0:0] xor_ln870_27_fu_1789_p2;
wire   [0:0] p_Result_0_13_fu_1799_p3;
wire   [0:0] tmp_14_fu_1319_p3;
wire   [0:0] xor_ln870_28_fu_1807_p2;
wire   [0:0] xor_ln870_29_fu_1813_p2;
wire   [0:0] p_Result_0_14_fu_1823_p3;
wire   [0:0] tmp_15_fu_1327_p3;
wire   [0:0] xor_ln870_30_fu_1831_p2;
wire   [0:0] xor_ln870_31_fu_1837_p2;
wire   [0:0] p_Result_0_15_fu_1847_p3;
wire   [0:0] tmp_16_fu_1335_p3;
wire   [0:0] xor_ln870_32_fu_1855_p2;
wire   [0:0] xor_ln870_33_fu_1861_p2;
wire   [0:0] p_Result_0_16_fu_1871_p3;
wire   [0:0] tmp_17_fu_1343_p3;
wire   [0:0] xor_ln870_34_fu_1879_p2;
wire   [0:0] xor_ln870_35_fu_1885_p2;
wire   [0:0] p_Result_0_17_fu_1895_p3;
wire   [0:0] tmp_18_fu_1351_p3;
wire   [0:0] xor_ln870_36_fu_1903_p2;
wire   [0:0] xor_ln870_37_fu_1909_p2;
wire   [0:0] p_Result_0_18_fu_1919_p3;
wire   [0:0] tmp_19_fu_1359_p3;
wire   [0:0] xor_ln870_38_fu_1927_p2;
wire   [0:0] xor_ln870_39_fu_1933_p2;
wire   [0:0] p_Result_0_19_fu_1943_p3;
wire   [0:0] tmp_20_fu_1367_p3;
wire   [0:0] xor_ln870_40_fu_1951_p2;
wire   [0:0] xor_ln870_41_fu_1957_p2;
wire   [0:0] p_Result_0_20_fu_1967_p3;
wire   [0:0] tmp_21_fu_1375_p3;
wire   [0:0] xor_ln870_42_fu_1975_p2;
wire   [0:0] xor_ln870_43_fu_1981_p2;
wire   [0:0] p_Result_0_21_fu_1991_p3;
wire   [0:0] tmp_22_fu_1383_p3;
wire   [0:0] xor_ln870_44_fu_1999_p2;
wire   [0:0] xor_ln870_45_fu_2005_p2;
wire   [0:0] p_Result_0_22_fu_2015_p3;
wire   [0:0] tmp_23_fu_1391_p3;
wire   [0:0] xor_ln870_46_fu_2023_p2;
wire   [0:0] xor_ln870_47_fu_2029_p2;
wire   [0:0] p_Result_0_23_fu_2039_p3;
wire   [0:0] tmp_24_fu_1399_p3;
wire   [0:0] xor_ln870_48_fu_2047_p2;
wire   [0:0] xor_ln870_49_fu_2053_p2;
wire   [0:0] p_Result_0_24_fu_2063_p3;
wire   [0:0] tmp_25_fu_1407_p3;
wire   [0:0] xor_ln870_50_fu_2071_p2;
wire   [0:0] xor_ln870_51_fu_2077_p2;
wire   [0:0] p_Result_0_25_fu_2087_p3;
wire   [0:0] tmp_26_fu_1415_p3;
wire   [0:0] xor_ln870_52_fu_2095_p2;
wire   [0:0] xor_ln870_53_fu_2101_p2;
wire   [0:0] p_Result_0_26_fu_2111_p3;
wire   [0:0] tmp_27_fu_1423_p3;
wire   [0:0] xor_ln870_54_fu_2119_p2;
wire   [0:0] xor_ln870_55_fu_2125_p2;
wire   [0:0] p_Result_0_27_fu_2135_p3;
wire   [0:0] tmp_28_fu_1431_p3;
wire   [0:0] xor_ln870_56_fu_2143_p2;
wire   [0:0] xor_ln870_57_fu_2149_p2;
wire   [0:0] p_Result_0_28_fu_2159_p3;
wire   [0:0] tmp_29_fu_1439_p3;
wire   [0:0] xor_ln870_58_fu_2167_p2;
wire   [0:0] xor_ln870_59_fu_2173_p2;
wire   [0:0] p_Result_0_29_fu_2183_p3;
wire   [0:0] tmp_30_fu_1447_p3;
wire   [0:0] xor_ln870_60_fu_2191_p2;
wire   [0:0] xor_ln870_61_fu_2197_p2;
wire   [0:0] p_Result_0_30_fu_2207_p3;
wire   [0:0] tmp_31_fu_1455_p3;
wire   [0:0] xor_ln870_62_fu_2215_p2;
wire   [0:0] xor_ln870_63_fu_2221_p2;
wire   [10:0] select_ln271_3_fu_1203_p3;
wire   [10:0] zext_ln691_fu_2179_p1;
wire   [1:0] zext_ln820_29_fu_2203_p1;
wire   [1:0] zext_ln820_28_fu_2155_p1;
wire   [1:0] add_ln691_1_fu_2237_p2;
wire   [10:0] zext_ln691_2_fu_2243_p1;
wire   [10:0] add_ln691_fu_2231_p2;
wire   [1:0] zext_ln820_27_fu_2131_p1;
wire   [1:0] zext_ln820_24_fu_2059_p1;
wire   [1:0] add_ln691_3_fu_2253_p2;
wire   [1:0] zext_ln820_23_fu_2035_p1;
wire   [1:0] zext_ln820_26_fu_2107_p1;
wire   [1:0] add_ln691_4_fu_2263_p2;
wire   [2:0] zext_ln691_4_fu_2269_p1;
wire   [2:0] zext_ln691_3_fu_2259_p1;
wire   [2:0] add_ln691_5_fu_2273_p2;
wire   [10:0] zext_ln691_5_fu_2279_p1;
wire   [10:0] add_ln691_2_fu_2247_p2;
wire   [1:0] zext_ln820_25_fu_2083_p1;
wire   [1:0] zext_ln820_16_fu_1867_p1;
wire   [1:0] add_ln691_7_fu_2289_p2;
wire   [1:0] zext_ln820_15_fu_1843_p1;
wire   [1:0] zext_ln820_18_fu_1915_p1;
wire   [1:0] add_ln691_8_fu_2299_p2;
wire   [2:0] zext_ln691_7_fu_2305_p1;
wire   [2:0] zext_ln691_6_fu_2295_p1;
wire   [2:0] add_ln691_9_fu_2309_p2;
wire   [1:0] zext_ln820_17_fu_1891_p1;
wire   [1:0] zext_ln820_20_fu_1963_p1;
wire   [1:0] add_ln691_10_fu_2319_p2;
wire   [1:0] zext_ln820_19_fu_1939_p1;
wire   [1:0] zext_ln820_22_fu_2011_p1;
wire   [1:0] add_ln691_11_fu_2329_p2;
wire   [2:0] zext_ln691_10_fu_2335_p1;
wire   [2:0] zext_ln691_9_fu_2325_p1;
wire   [2:0] add_ln691_12_fu_2339_p2;
wire   [3:0] zext_ln691_11_fu_2345_p1;
wire   [3:0] zext_ln691_8_fu_2315_p1;
wire   [3:0] add_ln691_13_fu_2349_p2;
wire   [10:0] zext_ln691_12_fu_2355_p1;
wire   [10:0] add_ln691_6_fu_2283_p2;
wire   [1:0] zext_ln820_21_fu_1987_p1;
wire   [1:0] zext_ln820_fu_1483_p1;
wire   [1:0] add_ln691_15_fu_2365_p2;
wire   [1:0] zext_ln820_2_fu_1531_p1;
wire   [1:0] zext_ln820_1_fu_1507_p1;
wire   [1:0] add_ln691_16_fu_2375_p2;
wire   [2:0] zext_ln691_14_fu_2381_p1;
wire   [2:0] zext_ln691_13_fu_2371_p1;
wire   [2:0] add_ln691_17_fu_2385_p2;
wire   [1:0] zext_ln820_4_fu_1579_p1;
wire   [1:0] zext_ln820_3_fu_1555_p1;
wire   [1:0] add_ln691_18_fu_2395_p2;
wire   [1:0] zext_ln820_6_fu_1627_p1;
wire   [1:0] zext_ln820_5_fu_1603_p1;
wire   [1:0] add_ln691_19_fu_2405_p2;
wire   [2:0] zext_ln691_17_fu_2411_p1;
wire   [2:0] zext_ln691_16_fu_2401_p1;
wire   [2:0] add_ln691_20_fu_2415_p2;
wire   [3:0] zext_ln691_18_fu_2421_p1;
wire   [3:0] zext_ln691_15_fu_2391_p1;
wire   [3:0] add_ln691_21_fu_2425_p2;
wire   [1:0] zext_ln820_8_fu_1675_p1;
wire   [1:0] zext_ln820_7_fu_1651_p1;
wire   [1:0] add_ln691_22_fu_2435_p2;
wire   [1:0] zext_ln820_10_fu_1723_p1;
wire   [1:0] zext_ln820_9_fu_1699_p1;
wire   [1:0] add_ln691_23_fu_2445_p2;
wire   [2:0] zext_ln691_21_fu_2451_p1;
wire   [2:0] zext_ln691_20_fu_2441_p1;
wire   [2:0] add_ln691_24_fu_2455_p2;
wire   [1:0] zext_ln820_12_fu_1771_p1;
wire   [1:0] zext_ln820_11_fu_1747_p1;
wire   [1:0] add_ln691_25_fu_2465_p2;
wire   [1:0] zext_ln820_13_fu_1795_p1;
wire   [1:0] zext_ln691_1_fu_2227_p1;
wire   [1:0] add_ln691_26_fu_2475_p2;
wire   [1:0] zext_ln820_14_fu_1819_p1;
wire   [1:0] add_ln691_27_fu_2481_p2;
wire   [2:0] zext_ln691_24_fu_2487_p1;
wire   [2:0] zext_ln691_23_fu_2471_p1;
wire   [2:0] add_ln691_28_fu_2491_p2;
wire   [3:0] zext_ln691_25_fu_2497_p1;
wire   [3:0] zext_ln691_22_fu_2461_p1;
wire   [3:0] add_ln691_29_fu_2501_p2;
wire   [4:0] zext_ln691_26_fu_2507_p1;
wire   [4:0] zext_ln691_19_fu_2431_p1;
wire   [4:0] add_ln691_30_fu_2511_p2;
wire   [10:0] zext_ln691_27_fu_2517_p1;
wire   [10:0] add_ln691_14_fu_2359_p2;
wire   [0:0] tmp_32_fu_2527_p3;
wire   [0:0] xor_ln870_64_fu_2783_p2;
wire   [0:0] xor_ln870_65_fu_2789_p2;
wire   [0:0] tmp_33_fu_2535_p3;
wire   [0:0] xor_ln870_66_fu_2799_p2;
wire   [0:0] xor_ln870_67_fu_2805_p2;
wire   [0:0] tmp_34_fu_2543_p3;
wire   [0:0] xor_ln870_68_fu_2815_p2;
wire   [0:0] xor_ln870_69_fu_2821_p2;
wire   [0:0] tmp_35_fu_2551_p3;
wire   [0:0] xor_ln870_70_fu_2831_p2;
wire   [0:0] xor_ln870_71_fu_2837_p2;
wire   [0:0] tmp_36_fu_2559_p3;
wire   [0:0] xor_ln870_72_fu_2847_p2;
wire   [0:0] xor_ln870_73_fu_2853_p2;
wire   [0:0] tmp_37_fu_2567_p3;
wire   [0:0] xor_ln870_74_fu_2863_p2;
wire   [0:0] xor_ln870_75_fu_2869_p2;
wire   [0:0] tmp_38_fu_2575_p3;
wire   [0:0] xor_ln870_76_fu_2879_p2;
wire   [0:0] xor_ln870_77_fu_2885_p2;
wire   [0:0] tmp_39_fu_2583_p3;
wire   [0:0] xor_ln870_78_fu_2895_p2;
wire   [0:0] xor_ln870_79_fu_2901_p2;
wire   [0:0] tmp_40_fu_2591_p3;
wire   [0:0] xor_ln870_80_fu_2911_p2;
wire   [0:0] xor_ln870_81_fu_2917_p2;
wire   [0:0] tmp_41_fu_2599_p3;
wire   [0:0] xor_ln870_82_fu_2927_p2;
wire   [0:0] xor_ln870_83_fu_2933_p2;
wire   [0:0] tmp_42_fu_2607_p3;
wire   [0:0] xor_ln870_84_fu_2943_p2;
wire   [0:0] xor_ln870_85_fu_2949_p2;
wire   [0:0] tmp_43_fu_2615_p3;
wire   [0:0] xor_ln870_86_fu_2959_p2;
wire   [0:0] xor_ln870_87_fu_2965_p2;
wire   [0:0] tmp_44_fu_2623_p3;
wire   [0:0] xor_ln870_88_fu_2975_p2;
wire   [0:0] xor_ln870_89_fu_2981_p2;
wire   [0:0] tmp_45_fu_2631_p3;
wire   [0:0] xor_ln870_90_fu_2991_p2;
wire   [0:0] xor_ln870_91_fu_2997_p2;
wire   [0:0] tmp_46_fu_2639_p3;
wire   [0:0] xor_ln870_92_fu_3007_p2;
wire   [0:0] xor_ln870_93_fu_3013_p2;
wire   [0:0] tmp_47_fu_2647_p3;
wire   [0:0] xor_ln870_94_fu_3023_p2;
wire   [0:0] xor_ln870_95_fu_3029_p2;
wire   [0:0] tmp_48_fu_2655_p3;
wire   [0:0] xor_ln870_96_fu_3039_p2;
wire   [0:0] xor_ln870_97_fu_3045_p2;
wire   [0:0] tmp_49_fu_2663_p3;
wire   [0:0] xor_ln870_98_fu_3055_p2;
wire   [0:0] xor_ln870_99_fu_3061_p2;
wire   [0:0] tmp_50_fu_2671_p3;
wire   [0:0] xor_ln870_100_fu_3071_p2;
wire   [0:0] xor_ln870_101_fu_3077_p2;
wire   [0:0] tmp_51_fu_2679_p3;
wire   [0:0] xor_ln870_102_fu_3087_p2;
wire   [0:0] xor_ln870_103_fu_3093_p2;
wire   [0:0] tmp_52_fu_2687_p3;
wire   [0:0] xor_ln870_104_fu_3103_p2;
wire   [0:0] xor_ln870_105_fu_3109_p2;
wire   [0:0] tmp_53_fu_2695_p3;
wire   [0:0] xor_ln870_106_fu_3119_p2;
wire   [0:0] xor_ln870_107_fu_3125_p2;
wire   [0:0] tmp_54_fu_2703_p3;
wire   [0:0] xor_ln870_108_fu_3135_p2;
wire   [0:0] xor_ln870_109_fu_3141_p2;
wire   [0:0] tmp_55_fu_2711_p3;
wire   [0:0] xor_ln870_110_fu_3151_p2;
wire   [0:0] xor_ln870_111_fu_3157_p2;
wire   [0:0] tmp_56_fu_2719_p3;
wire   [0:0] xor_ln870_112_fu_3167_p2;
wire   [0:0] xor_ln870_113_fu_3173_p2;
wire   [0:0] tmp_57_fu_2727_p3;
wire   [0:0] xor_ln870_114_fu_3183_p2;
wire   [0:0] xor_ln870_115_fu_3189_p2;
wire   [0:0] tmp_58_fu_2735_p3;
wire   [0:0] xor_ln870_116_fu_3199_p2;
wire   [0:0] xor_ln870_117_fu_3205_p2;
wire   [0:0] tmp_59_fu_2743_p3;
wire   [0:0] xor_ln870_118_fu_3215_p2;
wire   [0:0] xor_ln870_119_fu_3221_p2;
wire   [0:0] tmp_60_fu_2751_p3;
wire   [0:0] xor_ln870_120_fu_3231_p2;
wire   [0:0] xor_ln870_121_fu_3237_p2;
wire   [0:0] tmp_61_fu_2759_p3;
wire   [0:0] xor_ln870_122_fu_3247_p2;
wire   [0:0] xor_ln870_123_fu_3253_p2;
wire   [0:0] tmp_62_fu_2767_p3;
wire   [0:0] xor_ln870_124_fu_3263_p2;
wire   [0:0] xor_ln870_125_fu_3269_p2;
wire   [0:0] tmp_63_fu_2775_p3;
wire   [0:0] xor_ln870_126_fu_3279_p2;
wire   [0:0] xor_ln870_127_fu_3285_p2;
wire   [10:0] select_ln271_2_fu_1195_p3;
wire   [10:0] zext_ln691_28_fu_3259_p1;
wire   [1:0] zext_ln870_29_fu_3275_p1;
wire   [1:0] zext_ln870_28_fu_3243_p1;
wire   [1:0] add_ln691_33_fu_3301_p2;
wire   [10:0] zext_ln691_30_fu_3307_p1;
wire   [10:0] add_ln691_32_fu_3295_p2;
wire   [1:0] zext_ln870_27_fu_3227_p1;
wire   [1:0] zext_ln870_24_fu_3179_p1;
wire   [1:0] add_ln691_35_fu_3317_p2;
wire   [1:0] zext_ln870_23_fu_3163_p1;
wire   [1:0] zext_ln870_26_fu_3211_p1;
wire   [1:0] add_ln691_36_fu_3327_p2;
wire   [2:0] zext_ln691_32_fu_3333_p1;
wire   [2:0] zext_ln691_31_fu_3323_p1;
wire   [2:0] add_ln691_37_fu_3337_p2;
wire   [10:0] zext_ln691_33_fu_3343_p1;
wire   [10:0] add_ln691_34_fu_3311_p2;
wire   [1:0] zext_ln870_25_fu_3195_p1;
wire   [1:0] zext_ln870_16_fu_3051_p1;
wire   [1:0] add_ln691_39_fu_3353_p2;
wire   [1:0] zext_ln870_15_fu_3035_p1;
wire   [1:0] zext_ln870_18_fu_3083_p1;
wire   [1:0] add_ln691_40_fu_3363_p2;
wire   [2:0] zext_ln691_35_fu_3369_p1;
wire   [2:0] zext_ln691_34_fu_3359_p1;
wire   [2:0] add_ln691_41_fu_3373_p2;
wire   [1:0] zext_ln870_17_fu_3067_p1;
wire   [1:0] zext_ln870_20_fu_3115_p1;
wire   [1:0] add_ln691_42_fu_3383_p2;
wire   [1:0] zext_ln870_19_fu_3099_p1;
wire   [1:0] zext_ln870_22_fu_3147_p1;
wire   [1:0] add_ln691_43_fu_3393_p2;
wire   [2:0] zext_ln691_38_fu_3399_p1;
wire   [2:0] zext_ln691_37_fu_3389_p1;
wire   [2:0] add_ln691_44_fu_3403_p2;
wire   [3:0] zext_ln691_39_fu_3409_p1;
wire   [3:0] zext_ln691_36_fu_3379_p1;
wire   [3:0] add_ln691_45_fu_3413_p2;
wire   [10:0] zext_ln691_40_fu_3419_p1;
wire   [10:0] add_ln691_38_fu_3347_p2;
wire   [1:0] zext_ln870_21_fu_3131_p1;
wire   [1:0] zext_ln870_fu_2795_p1;
wire   [1:0] add_ln691_47_fu_3429_p2;
wire   [1:0] zext_ln870_2_fu_2827_p1;
wire   [1:0] zext_ln870_1_fu_2811_p1;
wire   [1:0] add_ln691_48_fu_3439_p2;
wire   [2:0] zext_ln691_42_fu_3445_p1;
wire   [2:0] zext_ln691_41_fu_3435_p1;
wire   [2:0] add_ln691_49_fu_3449_p2;
wire   [1:0] zext_ln870_4_fu_2859_p1;
wire   [1:0] zext_ln870_3_fu_2843_p1;
wire   [1:0] add_ln691_50_fu_3459_p2;
wire   [1:0] zext_ln870_6_fu_2891_p1;
wire   [1:0] zext_ln870_5_fu_2875_p1;
wire   [1:0] add_ln691_51_fu_3469_p2;
wire   [2:0] zext_ln691_45_fu_3475_p1;
wire   [2:0] zext_ln691_44_fu_3465_p1;
wire   [2:0] add_ln691_52_fu_3479_p2;
wire   [3:0] zext_ln691_46_fu_3485_p1;
wire   [3:0] zext_ln691_43_fu_3455_p1;
wire   [3:0] add_ln691_53_fu_3489_p2;
wire   [1:0] zext_ln870_8_fu_2923_p1;
wire   [1:0] zext_ln870_7_fu_2907_p1;
wire   [1:0] add_ln691_54_fu_3499_p2;
wire   [1:0] zext_ln870_10_fu_2955_p1;
wire   [1:0] zext_ln870_9_fu_2939_p1;
wire   [1:0] add_ln691_55_fu_3509_p2;
wire   [2:0] zext_ln691_49_fu_3515_p1;
wire   [2:0] zext_ln691_48_fu_3505_p1;
wire   [2:0] add_ln691_56_fu_3519_p2;
wire   [1:0] zext_ln870_12_fu_2987_p1;
wire   [1:0] zext_ln870_11_fu_2971_p1;
wire   [1:0] add_ln691_57_fu_3529_p2;
wire   [1:0] zext_ln870_13_fu_3003_p1;
wire   [1:0] zext_ln691_29_fu_3291_p1;
wire   [1:0] add_ln691_58_fu_3539_p2;
wire   [1:0] zext_ln870_14_fu_3019_p1;
wire   [1:0] add_ln691_59_fu_3545_p2;
wire   [2:0] zext_ln691_52_fu_3551_p1;
wire   [2:0] zext_ln691_51_fu_3535_p1;
wire   [2:0] add_ln691_60_fu_3555_p2;
wire   [3:0] zext_ln691_53_fu_3561_p1;
wire   [3:0] zext_ln691_50_fu_3525_p1;
wire   [3:0] add_ln691_61_fu_3565_p2;
wire   [4:0] zext_ln691_54_fu_3571_p1;
wire   [4:0] zext_ln691_47_fu_3495_p1;
wire   [4:0] add_ln691_62_fu_3575_p2;
wire   [10:0] zext_ln691_55_fu_3581_p1;
wire   [10:0] add_ln691_46_fu_3423_p2;
wire   [0:0] tmp_64_fu_3591_p3;
wire   [0:0] xor_ln870_128_fu_3847_p2;
wire   [0:0] xor_ln870_129_fu_3853_p2;
wire   [0:0] tmp_65_fu_3599_p3;
wire   [0:0] xor_ln870_130_fu_3863_p2;
wire   [0:0] xor_ln870_131_fu_3869_p2;
wire   [0:0] tmp_66_fu_3607_p3;
wire   [0:0] xor_ln870_132_fu_3879_p2;
wire   [0:0] xor_ln870_133_fu_3885_p2;
wire   [0:0] tmp_67_fu_3615_p3;
wire   [0:0] xor_ln870_134_fu_3895_p2;
wire   [0:0] xor_ln870_135_fu_3901_p2;
wire   [0:0] tmp_68_fu_3623_p3;
wire   [0:0] xor_ln870_136_fu_3911_p2;
wire   [0:0] xor_ln870_137_fu_3917_p2;
wire   [0:0] tmp_69_fu_3631_p3;
wire   [0:0] xor_ln870_138_fu_3927_p2;
wire   [0:0] xor_ln870_139_fu_3933_p2;
wire   [0:0] tmp_70_fu_3639_p3;
wire   [0:0] xor_ln870_140_fu_3943_p2;
wire   [0:0] xor_ln870_141_fu_3949_p2;
wire   [0:0] tmp_71_fu_3647_p3;
wire   [0:0] xor_ln870_142_fu_3959_p2;
wire   [0:0] xor_ln870_143_fu_3965_p2;
wire   [0:0] tmp_72_fu_3655_p3;
wire   [0:0] xor_ln870_144_fu_3975_p2;
wire   [0:0] xor_ln870_145_fu_3981_p2;
wire   [0:0] tmp_73_fu_3663_p3;
wire   [0:0] xor_ln870_146_fu_3991_p2;
wire   [0:0] xor_ln870_147_fu_3997_p2;
wire   [0:0] tmp_74_fu_3671_p3;
wire   [0:0] xor_ln870_148_fu_4007_p2;
wire   [0:0] xor_ln870_149_fu_4013_p2;
wire   [0:0] tmp_75_fu_3679_p3;
wire   [0:0] xor_ln870_150_fu_4023_p2;
wire   [0:0] xor_ln870_151_fu_4029_p2;
wire   [0:0] tmp_76_fu_3687_p3;
wire   [0:0] xor_ln870_152_fu_4039_p2;
wire   [0:0] xor_ln870_153_fu_4045_p2;
wire   [0:0] tmp_77_fu_3695_p3;
wire   [0:0] xor_ln870_154_fu_4055_p2;
wire   [0:0] xor_ln870_155_fu_4061_p2;
wire   [0:0] tmp_78_fu_3703_p3;
wire   [0:0] xor_ln870_156_fu_4071_p2;
wire   [0:0] xor_ln870_157_fu_4077_p2;
wire   [0:0] tmp_79_fu_3711_p3;
wire   [0:0] xor_ln870_158_fu_4087_p2;
wire   [0:0] xor_ln870_159_fu_4093_p2;
wire   [0:0] tmp_80_fu_3719_p3;
wire   [0:0] xor_ln870_160_fu_4103_p2;
wire   [0:0] xor_ln870_161_fu_4109_p2;
wire   [0:0] tmp_81_fu_3727_p3;
wire   [0:0] xor_ln870_162_fu_4119_p2;
wire   [0:0] xor_ln870_163_fu_4125_p2;
wire   [0:0] tmp_82_fu_3735_p3;
wire   [0:0] xor_ln870_164_fu_4135_p2;
wire   [0:0] xor_ln870_165_fu_4141_p2;
wire   [0:0] tmp_83_fu_3743_p3;
wire   [0:0] xor_ln870_166_fu_4151_p2;
wire   [0:0] xor_ln870_167_fu_4157_p2;
wire   [0:0] tmp_84_fu_3751_p3;
wire   [0:0] xor_ln870_168_fu_4167_p2;
wire   [0:0] xor_ln870_169_fu_4173_p2;
wire   [0:0] tmp_85_fu_3759_p3;
wire   [0:0] xor_ln870_170_fu_4183_p2;
wire   [0:0] xor_ln870_171_fu_4189_p2;
wire   [0:0] tmp_86_fu_3767_p3;
wire   [0:0] xor_ln870_172_fu_4199_p2;
wire   [0:0] xor_ln870_173_fu_4205_p2;
wire   [0:0] tmp_87_fu_3775_p3;
wire   [0:0] xor_ln870_174_fu_4215_p2;
wire   [0:0] xor_ln870_175_fu_4221_p2;
wire   [0:0] tmp_88_fu_3783_p3;
wire   [0:0] xor_ln870_176_fu_4231_p2;
wire   [0:0] xor_ln870_177_fu_4237_p2;
wire   [0:0] tmp_89_fu_3791_p3;
wire   [0:0] xor_ln870_178_fu_4247_p2;
wire   [0:0] xor_ln870_179_fu_4253_p2;
wire   [0:0] tmp_90_fu_3799_p3;
wire   [0:0] xor_ln870_180_fu_4263_p2;
wire   [0:0] xor_ln870_181_fu_4269_p2;
wire   [0:0] tmp_91_fu_3807_p3;
wire   [0:0] xor_ln870_182_fu_4279_p2;
wire   [0:0] xor_ln870_183_fu_4285_p2;
wire   [0:0] tmp_92_fu_3815_p3;
wire   [0:0] xor_ln870_184_fu_4295_p2;
wire   [0:0] xor_ln870_185_fu_4301_p2;
wire   [0:0] tmp_93_fu_3823_p3;
wire   [0:0] xor_ln870_186_fu_4311_p2;
wire   [0:0] xor_ln870_187_fu_4317_p2;
wire   [0:0] tmp_94_fu_3831_p3;
wire   [0:0] xor_ln870_188_fu_4327_p2;
wire   [0:0] xor_ln870_189_fu_4333_p2;
wire   [0:0] tmp_95_fu_3839_p3;
wire   [0:0] xor_ln870_190_fu_4343_p2;
wire   [0:0] xor_ln870_191_fu_4349_p2;
wire   [10:0] select_ln271_1_fu_1187_p3;
wire   [10:0] zext_ln691_56_fu_4323_p1;
wire   [1:0] zext_ln870_59_fu_4339_p1;
wire   [1:0] zext_ln870_58_fu_4307_p1;
wire   [1:0] add_ln691_65_fu_4365_p2;
wire   [10:0] zext_ln691_58_fu_4371_p1;
wire   [10:0] add_ln691_64_fu_4359_p2;
wire   [1:0] zext_ln870_57_fu_4291_p1;
wire   [1:0] zext_ln870_54_fu_4243_p1;
wire   [1:0] add_ln691_67_fu_4381_p2;
wire   [1:0] zext_ln870_53_fu_4227_p1;
wire   [1:0] zext_ln870_56_fu_4275_p1;
wire   [1:0] add_ln691_68_fu_4391_p2;
wire   [2:0] zext_ln691_60_fu_4397_p1;
wire   [2:0] zext_ln691_59_fu_4387_p1;
wire   [2:0] add_ln691_69_fu_4401_p2;
wire   [10:0] zext_ln691_61_fu_4407_p1;
wire   [10:0] add_ln691_66_fu_4375_p2;
wire   [1:0] zext_ln870_55_fu_4259_p1;
wire   [1:0] zext_ln870_46_fu_4115_p1;
wire   [1:0] add_ln691_71_fu_4417_p2;
wire   [1:0] zext_ln870_45_fu_4099_p1;
wire   [1:0] zext_ln870_48_fu_4147_p1;
wire   [1:0] add_ln691_72_fu_4427_p2;
wire   [2:0] zext_ln691_63_fu_4433_p1;
wire   [2:0] zext_ln691_62_fu_4423_p1;
wire   [2:0] add_ln691_73_fu_4437_p2;
wire   [1:0] zext_ln870_47_fu_4131_p1;
wire   [1:0] zext_ln870_50_fu_4179_p1;
wire   [1:0] add_ln691_74_fu_4447_p2;
wire   [1:0] zext_ln870_49_fu_4163_p1;
wire   [1:0] zext_ln870_52_fu_4211_p1;
wire   [1:0] add_ln691_75_fu_4457_p2;
wire   [2:0] zext_ln691_66_fu_4463_p1;
wire   [2:0] zext_ln691_65_fu_4453_p1;
wire   [2:0] add_ln691_76_fu_4467_p2;
wire   [3:0] zext_ln691_67_fu_4473_p1;
wire   [3:0] zext_ln691_64_fu_4443_p1;
wire   [3:0] add_ln691_77_fu_4477_p2;
wire   [10:0] zext_ln691_68_fu_4483_p1;
wire   [10:0] add_ln691_70_fu_4411_p2;
wire   [1:0] zext_ln870_51_fu_4195_p1;
wire   [1:0] zext_ln870_30_fu_3859_p1;
wire   [1:0] add_ln691_79_fu_4493_p2;
wire   [1:0] zext_ln870_32_fu_3891_p1;
wire   [1:0] zext_ln870_31_fu_3875_p1;
wire   [1:0] add_ln691_80_fu_4503_p2;
wire   [2:0] zext_ln691_70_fu_4509_p1;
wire   [2:0] zext_ln691_69_fu_4499_p1;
wire   [2:0] add_ln691_81_fu_4513_p2;
wire   [1:0] zext_ln870_34_fu_3923_p1;
wire   [1:0] zext_ln870_33_fu_3907_p1;
wire   [1:0] add_ln691_82_fu_4523_p2;
wire   [1:0] zext_ln870_36_fu_3955_p1;
wire   [1:0] zext_ln870_35_fu_3939_p1;
wire   [1:0] add_ln691_83_fu_4533_p2;
wire   [2:0] zext_ln691_73_fu_4539_p1;
wire   [2:0] zext_ln691_72_fu_4529_p1;
wire   [2:0] add_ln691_84_fu_4543_p2;
wire   [3:0] zext_ln691_74_fu_4549_p1;
wire   [3:0] zext_ln691_71_fu_4519_p1;
wire   [3:0] add_ln691_85_fu_4553_p2;
wire   [1:0] zext_ln870_38_fu_3987_p1;
wire   [1:0] zext_ln870_37_fu_3971_p1;
wire   [1:0] add_ln691_86_fu_4563_p2;
wire   [1:0] zext_ln870_40_fu_4019_p1;
wire   [1:0] zext_ln870_39_fu_4003_p1;
wire   [1:0] add_ln691_87_fu_4573_p2;
wire   [2:0] zext_ln691_77_fu_4579_p1;
wire   [2:0] zext_ln691_76_fu_4569_p1;
wire   [2:0] add_ln691_88_fu_4583_p2;
wire   [1:0] zext_ln870_42_fu_4051_p1;
wire   [1:0] zext_ln870_41_fu_4035_p1;
wire   [1:0] add_ln691_89_fu_4593_p2;
wire   [1:0] zext_ln870_43_fu_4067_p1;
wire   [1:0] zext_ln691_57_fu_4355_p1;
wire   [1:0] add_ln691_90_fu_4603_p2;
wire   [1:0] zext_ln870_44_fu_4083_p1;
wire   [1:0] add_ln691_91_fu_4609_p2;
wire   [2:0] zext_ln691_80_fu_4615_p1;
wire   [2:0] zext_ln691_79_fu_4599_p1;
wire   [2:0] add_ln691_92_fu_4619_p2;
wire   [3:0] zext_ln691_81_fu_4625_p1;
wire   [3:0] zext_ln691_78_fu_4589_p1;
wire   [3:0] add_ln691_93_fu_4629_p2;
wire   [4:0] zext_ln691_82_fu_4635_p1;
wire   [4:0] zext_ln691_75_fu_4559_p1;
wire   [4:0] add_ln691_94_fu_4639_p2;
wire   [10:0] zext_ln691_83_fu_4645_p1;
wire   [10:0] add_ln691_78_fu_4487_p2;
wire   [0:0] tmp_96_fu_4655_p3;
wire   [0:0] xor_ln870_192_fu_4911_p2;
wire   [0:0] xor_ln870_193_fu_4917_p2;
wire   [0:0] tmp_97_fu_4663_p3;
wire   [0:0] xor_ln870_194_fu_4927_p2;
wire   [0:0] xor_ln870_195_fu_4933_p2;
wire   [0:0] tmp_98_fu_4671_p3;
wire   [0:0] xor_ln870_196_fu_4943_p2;
wire   [0:0] xor_ln870_197_fu_4949_p2;
wire   [0:0] tmp_99_fu_4679_p3;
wire   [0:0] xor_ln870_198_fu_4959_p2;
wire   [0:0] xor_ln870_199_fu_4965_p2;
wire   [0:0] tmp_100_fu_4687_p3;
wire   [0:0] xor_ln870_200_fu_4975_p2;
wire   [0:0] xor_ln870_201_fu_4981_p2;
wire   [0:0] tmp_101_fu_4695_p3;
wire   [0:0] xor_ln870_202_fu_4991_p2;
wire   [0:0] xor_ln870_203_fu_4997_p2;
wire   [0:0] tmp_102_fu_4703_p3;
wire   [0:0] xor_ln870_204_fu_5007_p2;
wire   [0:0] xor_ln870_205_fu_5013_p2;
wire   [0:0] tmp_103_fu_4711_p3;
wire   [0:0] xor_ln870_206_fu_5023_p2;
wire   [0:0] xor_ln870_207_fu_5029_p2;
wire   [0:0] tmp_104_fu_4719_p3;
wire   [0:0] xor_ln870_208_fu_5039_p2;
wire   [0:0] xor_ln870_209_fu_5045_p2;
wire   [0:0] tmp_105_fu_4727_p3;
wire   [0:0] xor_ln870_210_fu_5055_p2;
wire   [0:0] xor_ln870_211_fu_5061_p2;
wire   [0:0] tmp_106_fu_4735_p3;
wire   [0:0] xor_ln870_212_fu_5071_p2;
wire   [0:0] xor_ln870_213_fu_5077_p2;
wire   [0:0] tmp_107_fu_4743_p3;
wire   [0:0] xor_ln870_214_fu_5087_p2;
wire   [0:0] xor_ln870_215_fu_5093_p2;
wire   [0:0] tmp_108_fu_4751_p3;
wire   [0:0] xor_ln870_216_fu_5103_p2;
wire   [0:0] xor_ln870_217_fu_5109_p2;
wire   [0:0] tmp_109_fu_4759_p3;
wire   [0:0] xor_ln870_218_fu_5119_p2;
wire   [0:0] xor_ln870_219_fu_5125_p2;
wire   [0:0] tmp_110_fu_4767_p3;
wire   [0:0] xor_ln870_220_fu_5135_p2;
wire   [0:0] xor_ln870_221_fu_5141_p2;
wire   [0:0] tmp_111_fu_4775_p3;
wire   [0:0] xor_ln870_222_fu_5151_p2;
wire   [0:0] xor_ln870_223_fu_5157_p2;
wire   [0:0] tmp_112_fu_4783_p3;
wire   [0:0] xor_ln870_224_fu_5167_p2;
wire   [0:0] xor_ln870_225_fu_5173_p2;
wire   [0:0] tmp_113_fu_4791_p3;
wire   [0:0] xor_ln870_226_fu_5183_p2;
wire   [0:0] xor_ln870_227_fu_5189_p2;
wire   [0:0] tmp_114_fu_4799_p3;
wire   [0:0] xor_ln870_228_fu_5199_p2;
wire   [0:0] xor_ln870_229_fu_5205_p2;
wire   [0:0] tmp_115_fu_4807_p3;
wire   [0:0] xor_ln870_230_fu_5215_p2;
wire   [0:0] xor_ln870_231_fu_5221_p2;
wire   [0:0] tmp_116_fu_4815_p3;
wire   [0:0] xor_ln870_232_fu_5231_p2;
wire   [0:0] xor_ln870_233_fu_5237_p2;
wire   [0:0] tmp_117_fu_4823_p3;
wire   [0:0] xor_ln870_234_fu_5247_p2;
wire   [0:0] xor_ln870_235_fu_5253_p2;
wire   [0:0] tmp_118_fu_4831_p3;
wire   [0:0] xor_ln870_236_fu_5263_p2;
wire   [0:0] xor_ln870_237_fu_5269_p2;
wire   [0:0] tmp_119_fu_4839_p3;
wire   [0:0] xor_ln870_238_fu_5279_p2;
wire   [0:0] xor_ln870_239_fu_5285_p2;
wire   [0:0] tmp_120_fu_4847_p3;
wire   [0:0] xor_ln870_240_fu_5295_p2;
wire   [0:0] xor_ln870_241_fu_5301_p2;
wire   [0:0] tmp_121_fu_4855_p3;
wire   [0:0] xor_ln870_242_fu_5311_p2;
wire   [0:0] xor_ln870_243_fu_5317_p2;
wire   [0:0] tmp_122_fu_4863_p3;
wire   [0:0] xor_ln870_244_fu_5327_p2;
wire   [0:0] xor_ln870_245_fu_5333_p2;
wire   [0:0] tmp_123_fu_4871_p3;
wire   [0:0] xor_ln870_246_fu_5343_p2;
wire   [0:0] xor_ln870_247_fu_5349_p2;
wire   [0:0] tmp_124_fu_4879_p3;
wire   [0:0] xor_ln870_248_fu_5359_p2;
wire   [0:0] xor_ln870_249_fu_5365_p2;
wire   [0:0] tmp_125_fu_4887_p3;
wire   [0:0] xor_ln870_250_fu_5375_p2;
wire   [0:0] xor_ln870_251_fu_5381_p2;
wire   [0:0] tmp_126_fu_4895_p3;
wire   [0:0] xor_ln870_252_fu_5391_p2;
wire   [0:0] xor_ln870_253_fu_5397_p2;
wire   [0:0] tmp_127_fu_4903_p3;
wire   [0:0] xor_ln870_254_fu_5407_p2;
wire   [0:0] xor_ln870_255_fu_5413_p2;
wire   [10:0] select_ln271_fu_1179_p3;
wire   [10:0] zext_ln691_84_fu_5387_p1;
wire   [1:0] zext_ln870_89_fu_5403_p1;
wire   [1:0] zext_ln870_88_fu_5371_p1;
wire   [1:0] add_ln691_97_fu_5429_p2;
wire   [10:0] zext_ln691_86_fu_5435_p1;
wire   [10:0] add_ln691_96_fu_5423_p2;
wire   [1:0] zext_ln870_87_fu_5355_p1;
wire   [1:0] zext_ln870_84_fu_5307_p1;
wire   [1:0] add_ln691_99_fu_5445_p2;
wire   [1:0] zext_ln870_83_fu_5291_p1;
wire   [1:0] zext_ln870_86_fu_5339_p1;
wire   [1:0] add_ln691_100_fu_5455_p2;
wire   [2:0] zext_ln691_88_fu_5461_p1;
wire   [2:0] zext_ln691_87_fu_5451_p1;
wire   [2:0] add_ln691_101_fu_5465_p2;
wire   [10:0] zext_ln691_89_fu_5471_p1;
wire   [10:0] add_ln691_98_fu_5439_p2;
wire   [1:0] zext_ln870_85_fu_5323_p1;
wire   [1:0] zext_ln870_76_fu_5179_p1;
wire   [1:0] add_ln691_103_fu_5481_p2;
wire   [1:0] zext_ln870_75_fu_5163_p1;
wire   [1:0] zext_ln870_78_fu_5211_p1;
wire   [1:0] add_ln691_104_fu_5491_p2;
wire   [2:0] zext_ln691_91_fu_5497_p1;
wire   [2:0] zext_ln691_90_fu_5487_p1;
wire   [2:0] add_ln691_105_fu_5501_p2;
wire   [1:0] zext_ln870_77_fu_5195_p1;
wire   [1:0] zext_ln870_80_fu_5243_p1;
wire   [1:0] add_ln691_106_fu_5511_p2;
wire   [1:0] zext_ln870_79_fu_5227_p1;
wire   [1:0] zext_ln870_82_fu_5275_p1;
wire   [1:0] add_ln691_107_fu_5521_p2;
wire   [2:0] zext_ln691_94_fu_5527_p1;
wire   [2:0] zext_ln691_93_fu_5517_p1;
wire   [2:0] add_ln691_108_fu_5531_p2;
wire   [3:0] zext_ln691_95_fu_5537_p1;
wire   [3:0] zext_ln691_92_fu_5507_p1;
wire   [3:0] add_ln691_109_fu_5541_p2;
wire   [10:0] zext_ln691_96_fu_5547_p1;
wire   [10:0] add_ln691_102_fu_5475_p2;
wire   [1:0] zext_ln870_81_fu_5259_p1;
wire   [1:0] zext_ln870_60_fu_4923_p1;
wire   [1:0] add_ln691_111_fu_5557_p2;
wire   [1:0] zext_ln870_62_fu_4955_p1;
wire   [1:0] zext_ln870_61_fu_4939_p1;
wire   [1:0] add_ln691_112_fu_5567_p2;
wire   [2:0] zext_ln691_98_fu_5573_p1;
wire   [2:0] zext_ln691_97_fu_5563_p1;
wire   [2:0] add_ln691_113_fu_5577_p2;
wire   [1:0] zext_ln870_64_fu_4987_p1;
wire   [1:0] zext_ln870_63_fu_4971_p1;
wire   [1:0] add_ln691_114_fu_5587_p2;
wire   [1:0] zext_ln870_66_fu_5019_p1;
wire   [1:0] zext_ln870_65_fu_5003_p1;
wire   [1:0] add_ln691_115_fu_5597_p2;
wire   [2:0] zext_ln691_101_fu_5603_p1;
wire   [2:0] zext_ln691_100_fu_5593_p1;
wire   [2:0] add_ln691_116_fu_5607_p2;
wire   [3:0] zext_ln691_102_fu_5613_p1;
wire   [3:0] zext_ln691_99_fu_5583_p1;
wire   [3:0] add_ln691_117_fu_5617_p2;
wire   [1:0] zext_ln870_68_fu_5051_p1;
wire   [1:0] zext_ln870_67_fu_5035_p1;
wire   [1:0] add_ln691_118_fu_5627_p2;
wire   [1:0] zext_ln870_70_fu_5083_p1;
wire   [1:0] zext_ln870_69_fu_5067_p1;
wire   [1:0] add_ln691_119_fu_5637_p2;
wire   [2:0] zext_ln691_105_fu_5643_p1;
wire   [2:0] zext_ln691_104_fu_5633_p1;
wire   [2:0] add_ln691_120_fu_5647_p2;
wire   [1:0] zext_ln870_72_fu_5115_p1;
wire   [1:0] zext_ln870_71_fu_5099_p1;
wire   [1:0] add_ln691_121_fu_5657_p2;
wire   [1:0] zext_ln870_73_fu_5131_p1;
wire   [1:0] zext_ln691_85_fu_5419_p1;
wire   [1:0] add_ln691_122_fu_5667_p2;
wire   [1:0] zext_ln870_74_fu_5147_p1;
wire   [1:0] add_ln691_123_fu_5673_p2;
wire   [2:0] zext_ln691_108_fu_5679_p1;
wire   [2:0] zext_ln691_107_fu_5663_p1;
wire   [2:0] add_ln691_124_fu_5683_p2;
wire   [3:0] zext_ln691_109_fu_5689_p1;
wire   [3:0] zext_ln691_106_fu_5653_p1;
wire   [3:0] add_ln691_125_fu_5693_p2;
wire   [4:0] zext_ln691_110_fu_5699_p1;
wire   [4:0] zext_ln691_103_fu_5623_p1;
wire   [4:0] add_ln691_126_fu_5703_p2;
wire   [10:0] zext_ln691_111_fu_5709_p1;
wire   [10:0] add_ln691_110_fu_5551_p2;
wire   [31:0] nf_fu_5767_p2;
wire   [0:0] icmp_ln301_fu_5773_p2;
wire   [0:0] icmp_ln890_fu_5792_p2;
wire   [0:0] icmp_ln890_1_fu_5803_p2;
wire   [10:0] zext_ln890_fu_5814_p1;
wire   [0:0] icmp_ln890_2_fu_5818_p2;
wire   [0:0] icmp_ln890_3_fu_5829_p2;
wire   [0:0] result_V_3_fu_5834_p2;
wire   [0:0] result_V_2_fu_5823_p2;
wire   [0:0] result_V_1_fu_5808_p2;
wire   [0:0] result_V_fu_5797_p2;
wire   [3:0] p_Result_s_fu_5840_p5;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_apbkb #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
threshs_m_thresholds_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_V_0_0_address0),
    .ce0(threshs_m_thresholds_V_0_0_ce0),
    .q0(threshs_m_thresholds_V_0_0_q0)
);

StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_apcud #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
threshs_m_thresholds_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_V_1_0_address0),
    .ce0(threshs_m_thresholds_V_1_0_ce0),
    .q0(threshs_m_thresholds_V_1_0_q0)
);

StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_apdEe #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
threshs_m_thresholds_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_V_2_0_address0),
    .ce0(threshs_m_thresholds_V_2_0_ce0),
    .q0(threshs_m_thresholds_V_2_0_q0)
);

StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_apeOg #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
threshs_m_thresholds_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_V_3_0_address0),
    .ce0(threshs_m_thresholds_V_3_0_ce0),
    .q0(threshs_m_thresholds_V_3_0_q0)
);

StreamingFCLayer_Batch_4_mux_366_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_366_32_1_1_U1(
    .din0(inputBuf_V_35_fu_404),
    .din1(inputBuf_V_35_1_fu_408),
    .din2(inputBuf_V_35_2_fu_412),
    .din3(inputBuf_V_35_3_fu_416),
    .din4(inputBuf_V_35_4_fu_420),
    .din5(inputBuf_V_35_5_fu_424),
    .din6(inputBuf_V_35_6_fu_428),
    .din7(inputBuf_V_35_7_fu_432),
    .din8(inputBuf_V_35_8_fu_436),
    .din9(inputBuf_V_35_9_fu_440),
    .din10(inputBuf_V_35_10_fu_444),
    .din11(inputBuf_V_35_11_fu_448),
    .din12(inputBuf_V_35_12_fu_452),
    .din13(inputBuf_V_35_13_fu_456),
    .din14(inputBuf_V_35_14_fu_460),
    .din15(inputBuf_V_35_15_fu_464),
    .din16(inputBuf_V_35_16_fu_468),
    .din17(inputBuf_V_35_17_fu_472),
    .din18(inputBuf_V_35_18_fu_476),
    .din19(inputBuf_V_35_19_fu_480),
    .din20(inputBuf_V_35_20_fu_484),
    .din21(inputBuf_V_35_21_fu_488),
    .din22(inputBuf_V_35_22_fu_492),
    .din23(inputBuf_V_35_23_fu_496),
    .din24(inputBuf_V_35_24_fu_500),
    .din25(inputBuf_V_35_25_fu_504),
    .din26(inputBuf_V_35_26_fu_508),
    .din27(inputBuf_V_35_27_fu_512),
    .din28(inputBuf_V_35_28_fu_516),
    .din29(inputBuf_V_35_29_fu_520),
    .din30(inputBuf_V_35_30_fu_524),
    .din31(inputBuf_V_35_31_fu_528),
    .din32(inputBuf_V_35_32_fu_532),
    .din33(inputBuf_V_35_33_fu_536),
    .din34(inputBuf_V_35_34_fu_540),
    .din35(inputBuf_V_35_35_fu_544),
    .din36(tmp_2_fu_895_p37),
    .dout(tmp_2_fu_895_p38)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_623 <= i_1_fu_759_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_623 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_2_fu_548 <= 32'd0;
    end else if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_5725_p2 == 1'd1))) begin
        nf_2_fu_548 <= select_ln301_fu_5779_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_5725_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_fu_400 <= 32'd0;
    end else if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_5725_p2 == 1'd0))) begin
        sf_fu_400 <= sf_1_fu_5719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accu_V_0_0_1_fu_384 <= accu_V_0_0_fu_2521_p2;
        accu_V_0_1_1_fu_388 <= accu_V_0_1_fu_3585_p2;
        accu_V_0_2_1_fu_392 <= accu_V_0_2_fu_4649_p2;
        accu_V_0_3_1_fu_396 <= accu_V_0_3_fu_5713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accu_V_0_0_reg_6130 <= accu_V_0_0_fu_2521_p2;
        accu_V_0_1_reg_6135 <= accu_V_0_1_fu_3585_p2;
        accu_V_0_2_reg_6140 <= accu_V_0_2_fu_4649_p2;
        accu_V_0_3_reg_6145 <= accu_V_0_3_fu_5713_p2;
        icmp_ln289_reg_6150 <= icmp_ln289_fu_5725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd10))) begin
        inputBuf_V_35_10_fu_444 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd11))) begin
        inputBuf_V_35_11_fu_448 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd12))) begin
        inputBuf_V_35_12_fu_452 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd13))) begin
        inputBuf_V_35_13_fu_456 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd14))) begin
        inputBuf_V_35_14_fu_460 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd15))) begin
        inputBuf_V_35_15_fu_464 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd16))) begin
        inputBuf_V_35_16_fu_468 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd17))) begin
        inputBuf_V_35_17_fu_472 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd18))) begin
        inputBuf_V_35_18_fu_476 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd19))) begin
        inputBuf_V_35_19_fu_480 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd1))) begin
        inputBuf_V_35_1_fu_408 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd20))) begin
        inputBuf_V_35_20_fu_484 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd21))) begin
        inputBuf_V_35_21_fu_488 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd22))) begin
        inputBuf_V_35_22_fu_492 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd23))) begin
        inputBuf_V_35_23_fu_496 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd24))) begin
        inputBuf_V_35_24_fu_500 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd25))) begin
        inputBuf_V_35_25_fu_504 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd26))) begin
        inputBuf_V_35_26_fu_508 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd27))) begin
        inputBuf_V_35_27_fu_512 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd28))) begin
        inputBuf_V_35_28_fu_516 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd29))) begin
        inputBuf_V_35_29_fu_520 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd2))) begin
        inputBuf_V_35_2_fu_412 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd30))) begin
        inputBuf_V_35_30_fu_524 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd31))) begin
        inputBuf_V_35_31_fu_528 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd32))) begin
        inputBuf_V_35_32_fu_532 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd33))) begin
        inputBuf_V_35_33_fu_536 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd34))) begin
        inputBuf_V_35_34_fu_540 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln256_fu_974_p1 == 6'd34) & ~(trunc_ln256_fu_974_p1 == 6'd33) & ~(trunc_ln256_fu_974_p1 == 6'd32) & ~(trunc_ln256_fu_974_p1 == 6'd31) & ~(trunc_ln256_fu_974_p1 == 6'd30) & ~(trunc_ln256_fu_974_p1 == 6'd29) & ~(trunc_ln256_fu_974_p1 == 6'd28) & ~(trunc_ln256_fu_974_p1 == 6'd27) & ~(trunc_ln256_fu_974_p1 == 6'd26) & ~(trunc_ln256_fu_974_p1 == 6'd25) & ~(trunc_ln256_fu_974_p1 == 6'd24) & ~(trunc_ln256_fu_974_p1 == 6'd23) & ~(trunc_ln256_fu_974_p1 == 6'd22) & ~(trunc_ln256_fu_974_p1 == 6'd21) & ~(trunc_ln256_fu_974_p1 == 6'd20) & ~(trunc_ln256_fu_974_p1 == 6'd19) & ~(trunc_ln256_fu_974_p1 == 6'd18) & ~(trunc_ln256_fu_974_p1 == 6'd17) & ~(trunc_ln256_fu_974_p1 == 6'd16) & ~(trunc_ln256_fu_974_p1 == 6'd15) & ~(trunc_ln256_fu_974_p1 == 6'd14) & ~(trunc_ln256_fu_974_p1 == 6'd13) & ~(trunc_ln256_fu_974_p1 == 6'd12) & ~(trunc_ln256_fu_974_p1 == 6'd11) & ~(trunc_ln256_fu_974_p1 == 6'd10) & ~(trunc_ln256_fu_974_p1 == 6'd9) & ~(trunc_ln256_fu_974_p1 == 6'd8) & ~(trunc_ln256_fu_974_p1 == 6'd7) & ~(trunc_ln256_fu_974_p1 == 6'd6) & ~(trunc_ln256_fu_974_p1 == 6'd5) & ~(trunc_ln256_fu_974_p1 == 6'd4) & ~(trunc_ln256_fu_974_p1 == 6'd3) & ~(trunc_ln256_fu_974_p1 == 6'd2) & ~(trunc_ln256_fu_974_p1 == 6'd1) & ~(trunc_ln256_fu_974_p1 == 6'd0) & (icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_V_35_35_fu_544 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd3))) begin
        inputBuf_V_35_3_fu_416 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd4))) begin
        inputBuf_V_35_4_fu_420 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd5))) begin
        inputBuf_V_35_5_fu_424 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd6))) begin
        inputBuf_V_35_6_fu_428 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd7))) begin
        inputBuf_V_35_7_fu_432 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd8))) begin
        inputBuf_V_35_8_fu_436 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd9))) begin
        inputBuf_V_35_9_fu_440 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_974_p1 == 6'd0))) begin
        inputBuf_V_35_fu_404 <= in0_V_TDATA;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_765_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_774_p2 == 1'd0) & (icmp_ln248_fu_765_p2 == 1'd0))) begin
        ap_phi_mux_inElem_phi_fu_637_p74 = tmp_2_fu_895_p38;
    end else if ((((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd34)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd33)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd32)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd31)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd30)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd29)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd28)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd27)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd26)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd25)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd24)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd23)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd22)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd21)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd20)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd19)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd18)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd17)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd16)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd15)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd14)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd13)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd12)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd11)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd10)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd9)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd8)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd7)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd6)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd5)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd4)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd3)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd2)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd1)) | ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (trunc_ln256_fu_974_p1 == 6'd0)) | (~(trunc_ln256_fu_974_p1 == 6'd34) & ~(trunc_ln256_fu_974_p1 == 6'd33) & ~(trunc_ln256_fu_974_p1 == 6'd32) & ~(trunc_ln256_fu_974_p1 == 6'd31) & ~(trunc_ln256_fu_974_p1 == 6'd30) & ~(trunc_ln256_fu_974_p1 == 6'd29) & ~(trunc_ln256_fu_974_p1 == 6'd28) & ~(trunc_ln256_fu_974_p1 == 6'd27) & ~(trunc_ln256_fu_974_p1 == 6'd26) & ~(trunc_ln256_fu_974_p1 == 6'd25) & ~(trunc_ln256_fu_974_p1 == 6'd24) & ~(trunc_ln256_fu_974_p1 == 6'd23) & ~(trunc_ln256_fu_974_p1 == 6'd22) & ~(trunc_ln256_fu_974_p1 == 6'd21) & ~(trunc_ln256_fu_974_p1 == 6'd20) & ~(trunc_ln256_fu_974_p1 == 6'd19) & ~(trunc_ln256_fu_974_p1 == 6'd18) & ~(trunc_ln256_fu_974_p1 == 6'd17) & ~(trunc_ln256_fu_974_p1 == 6'd16) & ~(trunc_ln256_fu_974_p1 == 6'd15) & ~(trunc_ln256_fu_974_p1 == 6'd14) & ~(trunc_ln256_fu_974_p1 == 6'd13) & ~(trunc_ln256_fu_974_p1 == 6'd12) & ~(trunc_ln256_fu_974_p1 == 6'd11) & ~(trunc_ln256_fu_974_p1 == 6'd10) & ~(trunc_ln256_fu_974_p1 == 6'd9) & ~(trunc_ln256_fu_974_p1 == 6'd8) & ~(trunc_ln256_fu_974_p1 == 6'd7) & ~(trunc_ln256_fu_974_p1 == 6'd6) & ~(trunc_ln256_fu_974_p1 == 6'd5) & ~(trunc_ln256_fu_974_p1 == 6'd4) & ~(trunc_ln256_fu_974_p1 == 6'd3) & ~(trunc_ln256_fu_974_p1 == 6'd2) & ~(trunc_ln256_fu_974_p1 == 6'd1) & ~(trunc_ln256_fu_974_p1 == 6'd0) & (icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0)))) begin
        ap_phi_mux_inElem_phi_fu_637_p74 = in0_V_TDATA;
    end else begin
        ap_phi_mux_inElem_phi_fu_637_p74 = ap_phi_reg_pp0_iter0_inElem_reg_634;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op103_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_6150 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_6150 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_V_0_0_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_V_1_0_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_V_2_0_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_V_3_0_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_765_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln248_fu_765_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln248_fu_765_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_V_0_0_fu_2521_p2 = (zext_ln691_27_fu_2517_p1 + add_ln691_14_fu_2359_p2);

assign accu_V_0_1_fu_3585_p2 = (zext_ln691_55_fu_3581_p1 + add_ln691_46_fu_3423_p2);

assign accu_V_0_2_fu_4649_p2 = (zext_ln691_83_fu_4645_p1 + add_ln691_78_fu_4487_p2);

assign accu_V_0_3_fu_5713_p2 = (zext_ln691_111_fu_5709_p1 + add_ln691_110_fu_5551_p2);

assign add_ln691_100_fu_5455_p2 = (zext_ln870_83_fu_5291_p1 + zext_ln870_86_fu_5339_p1);

assign add_ln691_101_fu_5465_p2 = (zext_ln691_88_fu_5461_p1 + zext_ln691_87_fu_5451_p1);

assign add_ln691_102_fu_5475_p2 = (zext_ln691_89_fu_5471_p1 + add_ln691_98_fu_5439_p2);

assign add_ln691_103_fu_5481_p2 = (zext_ln870_85_fu_5323_p1 + zext_ln870_76_fu_5179_p1);

assign add_ln691_104_fu_5491_p2 = (zext_ln870_75_fu_5163_p1 + zext_ln870_78_fu_5211_p1);

assign add_ln691_105_fu_5501_p2 = (zext_ln691_91_fu_5497_p1 + zext_ln691_90_fu_5487_p1);

assign add_ln691_106_fu_5511_p2 = (zext_ln870_77_fu_5195_p1 + zext_ln870_80_fu_5243_p1);

assign add_ln691_107_fu_5521_p2 = (zext_ln870_79_fu_5227_p1 + zext_ln870_82_fu_5275_p1);

assign add_ln691_108_fu_5531_p2 = (zext_ln691_94_fu_5527_p1 + zext_ln691_93_fu_5517_p1);

assign add_ln691_109_fu_5541_p2 = (zext_ln691_95_fu_5537_p1 + zext_ln691_92_fu_5507_p1);

assign add_ln691_10_fu_2319_p2 = (zext_ln820_17_fu_1891_p1 + zext_ln820_20_fu_1963_p1);

assign add_ln691_110_fu_5551_p2 = (zext_ln691_96_fu_5547_p1 + add_ln691_102_fu_5475_p2);

assign add_ln691_111_fu_5557_p2 = (zext_ln870_81_fu_5259_p1 + zext_ln870_60_fu_4923_p1);

assign add_ln691_112_fu_5567_p2 = (zext_ln870_62_fu_4955_p1 + zext_ln870_61_fu_4939_p1);

assign add_ln691_113_fu_5577_p2 = (zext_ln691_98_fu_5573_p1 + zext_ln691_97_fu_5563_p1);

assign add_ln691_114_fu_5587_p2 = (zext_ln870_64_fu_4987_p1 + zext_ln870_63_fu_4971_p1);

assign add_ln691_115_fu_5597_p2 = (zext_ln870_66_fu_5019_p1 + zext_ln870_65_fu_5003_p1);

assign add_ln691_116_fu_5607_p2 = (zext_ln691_101_fu_5603_p1 + zext_ln691_100_fu_5593_p1);

assign add_ln691_117_fu_5617_p2 = (zext_ln691_102_fu_5613_p1 + zext_ln691_99_fu_5583_p1);

assign add_ln691_118_fu_5627_p2 = (zext_ln870_68_fu_5051_p1 + zext_ln870_67_fu_5035_p1);

assign add_ln691_119_fu_5637_p2 = (zext_ln870_70_fu_5083_p1 + zext_ln870_69_fu_5067_p1);

assign add_ln691_11_fu_2329_p2 = (zext_ln820_19_fu_1939_p1 + zext_ln820_22_fu_2011_p1);

assign add_ln691_120_fu_5647_p2 = (zext_ln691_105_fu_5643_p1 + zext_ln691_104_fu_5633_p1);

assign add_ln691_121_fu_5657_p2 = (zext_ln870_72_fu_5115_p1 + zext_ln870_71_fu_5099_p1);

assign add_ln691_122_fu_5667_p2 = (zext_ln870_73_fu_5131_p1 + zext_ln691_85_fu_5419_p1);

assign add_ln691_123_fu_5673_p2 = (add_ln691_122_fu_5667_p2 + zext_ln870_74_fu_5147_p1);

assign add_ln691_124_fu_5683_p2 = (zext_ln691_108_fu_5679_p1 + zext_ln691_107_fu_5663_p1);

assign add_ln691_125_fu_5693_p2 = (zext_ln691_109_fu_5689_p1 + zext_ln691_106_fu_5653_p1);

assign add_ln691_126_fu_5703_p2 = (zext_ln691_110_fu_5699_p1 + zext_ln691_103_fu_5623_p1);

assign add_ln691_12_fu_2339_p2 = (zext_ln691_10_fu_2335_p1 + zext_ln691_9_fu_2325_p1);

assign add_ln691_13_fu_2349_p2 = (zext_ln691_11_fu_2345_p1 + zext_ln691_8_fu_2315_p1);

assign add_ln691_14_fu_2359_p2 = (zext_ln691_12_fu_2355_p1 + add_ln691_6_fu_2283_p2);

assign add_ln691_15_fu_2365_p2 = (zext_ln820_21_fu_1987_p1 + zext_ln820_fu_1483_p1);

assign add_ln691_16_fu_2375_p2 = (zext_ln820_2_fu_1531_p1 + zext_ln820_1_fu_1507_p1);

assign add_ln691_17_fu_2385_p2 = (zext_ln691_14_fu_2381_p1 + zext_ln691_13_fu_2371_p1);

assign add_ln691_18_fu_2395_p2 = (zext_ln820_4_fu_1579_p1 + zext_ln820_3_fu_1555_p1);

assign add_ln691_19_fu_2405_p2 = (zext_ln820_6_fu_1627_p1 + zext_ln820_5_fu_1603_p1);

assign add_ln691_1_fu_2237_p2 = (zext_ln820_29_fu_2203_p1 + zext_ln820_28_fu_2155_p1);

assign add_ln691_20_fu_2415_p2 = (zext_ln691_17_fu_2411_p1 + zext_ln691_16_fu_2401_p1);

assign add_ln691_21_fu_2425_p2 = (zext_ln691_18_fu_2421_p1 + zext_ln691_15_fu_2391_p1);

assign add_ln691_22_fu_2435_p2 = (zext_ln820_8_fu_1675_p1 + zext_ln820_7_fu_1651_p1);

assign add_ln691_23_fu_2445_p2 = (zext_ln820_10_fu_1723_p1 + zext_ln820_9_fu_1699_p1);

assign add_ln691_24_fu_2455_p2 = (zext_ln691_21_fu_2451_p1 + zext_ln691_20_fu_2441_p1);

assign add_ln691_25_fu_2465_p2 = (zext_ln820_12_fu_1771_p1 + zext_ln820_11_fu_1747_p1);

assign add_ln691_26_fu_2475_p2 = (zext_ln820_13_fu_1795_p1 + zext_ln691_1_fu_2227_p1);

assign add_ln691_27_fu_2481_p2 = (add_ln691_26_fu_2475_p2 + zext_ln820_14_fu_1819_p1);

assign add_ln691_28_fu_2491_p2 = (zext_ln691_24_fu_2487_p1 + zext_ln691_23_fu_2471_p1);

assign add_ln691_29_fu_2501_p2 = (zext_ln691_25_fu_2497_p1 + zext_ln691_22_fu_2461_p1);

assign add_ln691_2_fu_2247_p2 = (zext_ln691_2_fu_2243_p1 + add_ln691_fu_2231_p2);

assign add_ln691_30_fu_2511_p2 = (zext_ln691_26_fu_2507_p1 + zext_ln691_19_fu_2431_p1);

assign add_ln691_32_fu_3295_p2 = (select_ln271_2_fu_1195_p3 + zext_ln691_28_fu_3259_p1);

assign add_ln691_33_fu_3301_p2 = (zext_ln870_29_fu_3275_p1 + zext_ln870_28_fu_3243_p1);

assign add_ln691_34_fu_3311_p2 = (zext_ln691_30_fu_3307_p1 + add_ln691_32_fu_3295_p2);

assign add_ln691_35_fu_3317_p2 = (zext_ln870_27_fu_3227_p1 + zext_ln870_24_fu_3179_p1);

assign add_ln691_36_fu_3327_p2 = (zext_ln870_23_fu_3163_p1 + zext_ln870_26_fu_3211_p1);

assign add_ln691_37_fu_3337_p2 = (zext_ln691_32_fu_3333_p1 + zext_ln691_31_fu_3323_p1);

assign add_ln691_38_fu_3347_p2 = (zext_ln691_33_fu_3343_p1 + add_ln691_34_fu_3311_p2);

assign add_ln691_39_fu_3353_p2 = (zext_ln870_25_fu_3195_p1 + zext_ln870_16_fu_3051_p1);

assign add_ln691_3_fu_2253_p2 = (zext_ln820_27_fu_2131_p1 + zext_ln820_24_fu_2059_p1);

assign add_ln691_40_fu_3363_p2 = (zext_ln870_15_fu_3035_p1 + zext_ln870_18_fu_3083_p1);

assign add_ln691_41_fu_3373_p2 = (zext_ln691_35_fu_3369_p1 + zext_ln691_34_fu_3359_p1);

assign add_ln691_42_fu_3383_p2 = (zext_ln870_17_fu_3067_p1 + zext_ln870_20_fu_3115_p1);

assign add_ln691_43_fu_3393_p2 = (zext_ln870_19_fu_3099_p1 + zext_ln870_22_fu_3147_p1);

assign add_ln691_44_fu_3403_p2 = (zext_ln691_38_fu_3399_p1 + zext_ln691_37_fu_3389_p1);

assign add_ln691_45_fu_3413_p2 = (zext_ln691_39_fu_3409_p1 + zext_ln691_36_fu_3379_p1);

assign add_ln691_46_fu_3423_p2 = (zext_ln691_40_fu_3419_p1 + add_ln691_38_fu_3347_p2);

assign add_ln691_47_fu_3429_p2 = (zext_ln870_21_fu_3131_p1 + zext_ln870_fu_2795_p1);

assign add_ln691_48_fu_3439_p2 = (zext_ln870_2_fu_2827_p1 + zext_ln870_1_fu_2811_p1);

assign add_ln691_49_fu_3449_p2 = (zext_ln691_42_fu_3445_p1 + zext_ln691_41_fu_3435_p1);

assign add_ln691_4_fu_2263_p2 = (zext_ln820_23_fu_2035_p1 + zext_ln820_26_fu_2107_p1);

assign add_ln691_50_fu_3459_p2 = (zext_ln870_4_fu_2859_p1 + zext_ln870_3_fu_2843_p1);

assign add_ln691_51_fu_3469_p2 = (zext_ln870_6_fu_2891_p1 + zext_ln870_5_fu_2875_p1);

assign add_ln691_52_fu_3479_p2 = (zext_ln691_45_fu_3475_p1 + zext_ln691_44_fu_3465_p1);

assign add_ln691_53_fu_3489_p2 = (zext_ln691_46_fu_3485_p1 + zext_ln691_43_fu_3455_p1);

assign add_ln691_54_fu_3499_p2 = (zext_ln870_8_fu_2923_p1 + zext_ln870_7_fu_2907_p1);

assign add_ln691_55_fu_3509_p2 = (zext_ln870_10_fu_2955_p1 + zext_ln870_9_fu_2939_p1);

assign add_ln691_56_fu_3519_p2 = (zext_ln691_49_fu_3515_p1 + zext_ln691_48_fu_3505_p1);

assign add_ln691_57_fu_3529_p2 = (zext_ln870_12_fu_2987_p1 + zext_ln870_11_fu_2971_p1);

assign add_ln691_58_fu_3539_p2 = (zext_ln870_13_fu_3003_p1 + zext_ln691_29_fu_3291_p1);

assign add_ln691_59_fu_3545_p2 = (add_ln691_58_fu_3539_p2 + zext_ln870_14_fu_3019_p1);

assign add_ln691_5_fu_2273_p2 = (zext_ln691_4_fu_2269_p1 + zext_ln691_3_fu_2259_p1);

assign add_ln691_60_fu_3555_p2 = (zext_ln691_52_fu_3551_p1 + zext_ln691_51_fu_3535_p1);

assign add_ln691_61_fu_3565_p2 = (zext_ln691_53_fu_3561_p1 + zext_ln691_50_fu_3525_p1);

assign add_ln691_62_fu_3575_p2 = (zext_ln691_54_fu_3571_p1 + zext_ln691_47_fu_3495_p1);

assign add_ln691_64_fu_4359_p2 = (select_ln271_1_fu_1187_p3 + zext_ln691_56_fu_4323_p1);

assign add_ln691_65_fu_4365_p2 = (zext_ln870_59_fu_4339_p1 + zext_ln870_58_fu_4307_p1);

assign add_ln691_66_fu_4375_p2 = (zext_ln691_58_fu_4371_p1 + add_ln691_64_fu_4359_p2);

assign add_ln691_67_fu_4381_p2 = (zext_ln870_57_fu_4291_p1 + zext_ln870_54_fu_4243_p1);

assign add_ln691_68_fu_4391_p2 = (zext_ln870_53_fu_4227_p1 + zext_ln870_56_fu_4275_p1);

assign add_ln691_69_fu_4401_p2 = (zext_ln691_60_fu_4397_p1 + zext_ln691_59_fu_4387_p1);

assign add_ln691_6_fu_2283_p2 = (zext_ln691_5_fu_2279_p1 + add_ln691_2_fu_2247_p2);

assign add_ln691_70_fu_4411_p2 = (zext_ln691_61_fu_4407_p1 + add_ln691_66_fu_4375_p2);

assign add_ln691_71_fu_4417_p2 = (zext_ln870_55_fu_4259_p1 + zext_ln870_46_fu_4115_p1);

assign add_ln691_72_fu_4427_p2 = (zext_ln870_45_fu_4099_p1 + zext_ln870_48_fu_4147_p1);

assign add_ln691_73_fu_4437_p2 = (zext_ln691_63_fu_4433_p1 + zext_ln691_62_fu_4423_p1);

assign add_ln691_74_fu_4447_p2 = (zext_ln870_47_fu_4131_p1 + zext_ln870_50_fu_4179_p1);

assign add_ln691_75_fu_4457_p2 = (zext_ln870_49_fu_4163_p1 + zext_ln870_52_fu_4211_p1);

assign add_ln691_76_fu_4467_p2 = (zext_ln691_66_fu_4463_p1 + zext_ln691_65_fu_4453_p1);

assign add_ln691_77_fu_4477_p2 = (zext_ln691_67_fu_4473_p1 + zext_ln691_64_fu_4443_p1);

assign add_ln691_78_fu_4487_p2 = (zext_ln691_68_fu_4483_p1 + add_ln691_70_fu_4411_p2);

assign add_ln691_79_fu_4493_p2 = (zext_ln870_51_fu_4195_p1 + zext_ln870_30_fu_3859_p1);

assign add_ln691_7_fu_2289_p2 = (zext_ln820_25_fu_2083_p1 + zext_ln820_16_fu_1867_p1);

assign add_ln691_80_fu_4503_p2 = (zext_ln870_32_fu_3891_p1 + zext_ln870_31_fu_3875_p1);

assign add_ln691_81_fu_4513_p2 = (zext_ln691_70_fu_4509_p1 + zext_ln691_69_fu_4499_p1);

assign add_ln691_82_fu_4523_p2 = (zext_ln870_34_fu_3923_p1 + zext_ln870_33_fu_3907_p1);

assign add_ln691_83_fu_4533_p2 = (zext_ln870_36_fu_3955_p1 + zext_ln870_35_fu_3939_p1);

assign add_ln691_84_fu_4543_p2 = (zext_ln691_73_fu_4539_p1 + zext_ln691_72_fu_4529_p1);

assign add_ln691_85_fu_4553_p2 = (zext_ln691_74_fu_4549_p1 + zext_ln691_71_fu_4519_p1);

assign add_ln691_86_fu_4563_p2 = (zext_ln870_38_fu_3987_p1 + zext_ln870_37_fu_3971_p1);

assign add_ln691_87_fu_4573_p2 = (zext_ln870_40_fu_4019_p1 + zext_ln870_39_fu_4003_p1);

assign add_ln691_88_fu_4583_p2 = (zext_ln691_77_fu_4579_p1 + zext_ln691_76_fu_4569_p1);

assign add_ln691_89_fu_4593_p2 = (zext_ln870_42_fu_4051_p1 + zext_ln870_41_fu_4035_p1);

assign add_ln691_8_fu_2299_p2 = (zext_ln820_15_fu_1843_p1 + zext_ln820_18_fu_1915_p1);

assign add_ln691_90_fu_4603_p2 = (zext_ln870_43_fu_4067_p1 + zext_ln691_57_fu_4355_p1);

assign add_ln691_91_fu_4609_p2 = (add_ln691_90_fu_4603_p2 + zext_ln870_44_fu_4083_p1);

assign add_ln691_92_fu_4619_p2 = (zext_ln691_80_fu_4615_p1 + zext_ln691_79_fu_4599_p1);

assign add_ln691_93_fu_4629_p2 = (zext_ln691_81_fu_4625_p1 + zext_ln691_78_fu_4589_p1);

assign add_ln691_94_fu_4639_p2 = (zext_ln691_82_fu_4635_p1 + zext_ln691_75_fu_4559_p1);

assign add_ln691_96_fu_5423_p2 = (select_ln271_fu_1179_p3 + zext_ln691_84_fu_5387_p1);

assign add_ln691_97_fu_5429_p2 = (zext_ln870_89_fu_5403_p1 + zext_ln870_88_fu_5371_p1);

assign add_ln691_98_fu_5439_p2 = (zext_ln691_86_fu_5435_p1 + add_ln691_96_fu_5423_p2);

assign add_ln691_99_fu_5445_p2 = (zext_ln870_87_fu_5355_p1 + zext_ln870_84_fu_5307_p1);

assign add_ln691_9_fu_2309_p2 = (zext_ln691_7_fu_2305_p1 + zext_ln691_6_fu_2295_p1);

assign add_ln691_fu_2231_p2 = (select_ln271_3_fu_1203_p3 + zext_ln691_fu_2179_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln289_reg_6150 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln248_fu_765_p2 == 1'd0) & (weights_V_TVALID == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln289_reg_6150 == 1'd1) & (out_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln248_fu_765_p2 == 1'd0) & (weights_V_TVALID == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln289_reg_6150 == 1'd1) & (out_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln248_fu_765_p2 == 1'd0) & (weights_V_TVALID == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((icmp_ln248_fu_765_p2 == 1'd0) & (weights_V_TVALID == 1'b0)) | ((ap_predicate_op103_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln289_reg_6150 == 1'd1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln289_reg_6150 == 1'd1) & (out_V_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_inElem_reg_634 = 'bx;

always @ (*) begin
    ap_predicate_op103_read_state2 = ((icmp_ln252_fu_774_p2 == 1'd1) & (icmp_ln248_fu_765_p2 == 1'd0));
end

assign i_1_fu_759_p2 = (i_reg_623 + 20'd1);

assign icmp_ln248_fu_765_p2 = ((i_reg_623 == 20'd589824) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_774_p2 = ((nf_2_fu_548 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_1173_p2 = ((sf_fu_400 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_5725_p2 = ((sf_1_fu_5719_p2 == 32'd36) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_5773_p2 = ((nf_fu_5767_p2 == 32'd64) ? 1'b1 : 1'b0);

assign icmp_ln890_1_fu_5803_p2 = ((accu_V_0_1_reg_6135 < threshs_m_thresholds_V_1_0_q0) ? 1'b1 : 1'b0);

assign icmp_ln890_2_fu_5818_p2 = ((accu_V_0_2_reg_6140 < zext_ln890_fu_5814_p1) ? 1'b1 : 1'b0);

assign icmp_ln890_3_fu_5829_p2 = ((accu_V_0_3_reg_6145 < threshs_m_thresholds_V_3_0_q0) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_5792_p2 = ((accu_V_0_0_reg_6130 < threshs_m_thresholds_V_0_0_q0) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_5759_p1 = nf_2_fu_548;

assign nf_fu_5767_p2 = (nf_2_fu_548 + 32'd1);

assign out_V_TDATA = p_Result_s_fu_5840_p5;

assign p_Result_0_10_fu_1727_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd11];

assign p_Result_0_11_fu_1751_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd12];

assign p_Result_0_12_fu_1775_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd13];

assign p_Result_0_13_fu_1799_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd14];

assign p_Result_0_14_fu_1823_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd15];

assign p_Result_0_15_fu_1847_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd16];

assign p_Result_0_16_fu_1871_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd17];

assign p_Result_0_17_fu_1895_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd18];

assign p_Result_0_18_fu_1919_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd19];

assign p_Result_0_19_fu_1943_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd20];

assign p_Result_0_1_fu_1487_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd1];

assign p_Result_0_20_fu_1967_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd21];

assign p_Result_0_21_fu_1991_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd22];

assign p_Result_0_22_fu_2015_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd23];

assign p_Result_0_23_fu_2039_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd24];

assign p_Result_0_24_fu_2063_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd25];

assign p_Result_0_25_fu_2087_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd26];

assign p_Result_0_26_fu_2111_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd27];

assign p_Result_0_27_fu_2135_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd28];

assign p_Result_0_28_fu_2159_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd29];

assign p_Result_0_29_fu_2183_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd30];

assign p_Result_0_2_fu_1511_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd2];

assign p_Result_0_30_fu_2207_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd31];

assign p_Result_0_3_fu_1535_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd3];

assign p_Result_0_4_fu_1559_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd4];

assign p_Result_0_5_fu_1583_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd5];

assign p_Result_0_6_fu_1607_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd6];

assign p_Result_0_7_fu_1631_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd7];

assign p_Result_0_8_fu_1655_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd8];

assign p_Result_0_9_fu_1679_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd9];

assign p_Result_0_s_fu_1703_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd10];

assign p_Result_1_fu_1463_p3 = ap_phi_mux_inElem_phi_fu_637_p74[32'd0];

assign p_Result_s_fu_5840_p5 = {{{{result_V_3_fu_5834_p2}, {result_V_2_fu_5823_p2}}, {result_V_1_fu_5808_p2}}, {result_V_fu_5797_p2}};

assign result_V_1_fu_5808_p2 = (icmp_ln890_1_fu_5803_p2 ^ 1'd1);

assign result_V_2_fu_5823_p2 = (icmp_ln890_2_fu_5818_p2 ^ 1'd1);

assign result_V_3_fu_5834_p2 = (icmp_ln890_3_fu_5829_p2 ^ 1'd1);

assign result_V_fu_5797_p2 = (icmp_ln890_fu_5792_p2 ^ 1'd1);

assign select_ln271_1_fu_1187_p3 = ((icmp_ln271_fu_1173_p2[0:0] == 1'b1) ? 11'd0 : accu_V_0_2_1_fu_392);

assign select_ln271_2_fu_1195_p3 = ((icmp_ln271_fu_1173_p2[0:0] == 1'b1) ? 11'd0 : accu_V_0_1_1_fu_388);

assign select_ln271_3_fu_1203_p3 = ((icmp_ln271_fu_1173_p2[0:0] == 1'b1) ? 11'd0 : accu_V_0_0_1_fu_384);

assign select_ln271_fu_1179_p3 = ((icmp_ln271_fu_1173_p2[0:0] == 1'b1) ? 11'd0 : accu_V_0_3_1_fu_396);

assign select_ln301_fu_5779_p3 = ((icmp_ln301_fu_5773_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_5767_p2);

assign sf_1_fu_5719_p2 = (sf_fu_400 + 32'd1);

assign threshs_m_thresholds_V_0_0_address0 = idxprom2_i_fu_5759_p1;

assign threshs_m_thresholds_V_1_0_address0 = idxprom2_i_fu_5759_p1;

assign threshs_m_thresholds_V_2_0_address0 = idxprom2_i_fu_5759_p1;

assign threshs_m_thresholds_V_3_0_address0 = idxprom2_i_fu_5759_p1;

assign tmp_100_fu_4687_p3 = weights_V_TDATA[32'd100];

assign tmp_101_fu_4695_p3 = weights_V_TDATA[32'd101];

assign tmp_102_fu_4703_p3 = weights_V_TDATA[32'd102];

assign tmp_103_fu_4711_p3 = weights_V_TDATA[32'd103];

assign tmp_104_fu_4719_p3 = weights_V_TDATA[32'd104];

assign tmp_105_fu_4727_p3 = weights_V_TDATA[32'd105];

assign tmp_106_fu_4735_p3 = weights_V_TDATA[32'd106];

assign tmp_107_fu_4743_p3 = weights_V_TDATA[32'd107];

assign tmp_108_fu_4751_p3 = weights_V_TDATA[32'd108];

assign tmp_109_fu_4759_p3 = weights_V_TDATA[32'd109];

assign tmp_10_fu_1287_p3 = weights_V_TDATA[32'd10];

assign tmp_110_fu_4767_p3 = weights_V_TDATA[32'd110];

assign tmp_111_fu_4775_p3 = weights_V_TDATA[32'd111];

assign tmp_112_fu_4783_p3 = weights_V_TDATA[32'd112];

assign tmp_113_fu_4791_p3 = weights_V_TDATA[32'd113];

assign tmp_114_fu_4799_p3 = weights_V_TDATA[32'd114];

assign tmp_115_fu_4807_p3 = weights_V_TDATA[32'd115];

assign tmp_116_fu_4815_p3 = weights_V_TDATA[32'd116];

assign tmp_117_fu_4823_p3 = weights_V_TDATA[32'd117];

assign tmp_118_fu_4831_p3 = weights_V_TDATA[32'd118];

assign tmp_119_fu_4839_p3 = weights_V_TDATA[32'd119];

assign tmp_11_fu_1295_p3 = weights_V_TDATA[32'd11];

assign tmp_120_fu_4847_p3 = weights_V_TDATA[32'd120];

assign tmp_121_fu_4855_p3 = weights_V_TDATA[32'd121];

assign tmp_122_fu_4863_p3 = weights_V_TDATA[32'd122];

assign tmp_123_fu_4871_p3 = weights_V_TDATA[32'd123];

assign tmp_124_fu_4879_p3 = weights_V_TDATA[32'd124];

assign tmp_125_fu_4887_p3 = weights_V_TDATA[32'd125];

assign tmp_126_fu_4895_p3 = weights_V_TDATA[32'd126];

assign tmp_127_fu_4903_p3 = weights_V_TDATA[32'd127];

assign tmp_12_fu_1303_p3 = weights_V_TDATA[32'd12];

assign tmp_13_fu_1311_p3 = weights_V_TDATA[32'd13];

assign tmp_14_fu_1319_p3 = weights_V_TDATA[32'd14];

assign tmp_15_fu_1327_p3 = weights_V_TDATA[32'd15];

assign tmp_16_fu_1335_p3 = weights_V_TDATA[32'd16];

assign tmp_17_fu_1343_p3 = weights_V_TDATA[32'd17];

assign tmp_18_fu_1351_p3 = weights_V_TDATA[32'd18];

assign tmp_19_fu_1359_p3 = weights_V_TDATA[32'd19];

assign tmp_1_fu_1223_p3 = weights_V_TDATA[32'd2];

assign tmp_20_fu_1367_p3 = weights_V_TDATA[32'd20];

assign tmp_21_fu_1375_p3 = weights_V_TDATA[32'd21];

assign tmp_22_fu_1383_p3 = weights_V_TDATA[32'd22];

assign tmp_23_fu_1391_p3 = weights_V_TDATA[32'd23];

assign tmp_24_fu_1399_p3 = weights_V_TDATA[32'd24];

assign tmp_25_fu_1407_p3 = weights_V_TDATA[32'd25];

assign tmp_26_fu_1415_p3 = weights_V_TDATA[32'd26];

assign tmp_27_fu_1423_p3 = weights_V_TDATA[32'd27];

assign tmp_28_fu_1431_p3 = weights_V_TDATA[32'd28];

assign tmp_29_fu_1439_p3 = weights_V_TDATA[32'd29];

assign tmp_2_fu_895_p37 = sf_fu_400[5:0];

assign tmp_30_fu_1447_p3 = weights_V_TDATA[32'd30];

assign tmp_31_fu_1455_p3 = weights_V_TDATA[32'd31];

assign tmp_32_fu_2527_p3 = weights_V_TDATA[32'd32];

assign tmp_33_fu_2535_p3 = weights_V_TDATA[32'd33];

assign tmp_34_fu_2543_p3 = weights_V_TDATA[32'd34];

assign tmp_35_fu_2551_p3 = weights_V_TDATA[32'd35];

assign tmp_36_fu_2559_p3 = weights_V_TDATA[32'd36];

assign tmp_37_fu_2567_p3 = weights_V_TDATA[32'd37];

assign tmp_38_fu_2575_p3 = weights_V_TDATA[32'd38];

assign tmp_39_fu_2583_p3 = weights_V_TDATA[32'd39];

assign tmp_3_fu_1231_p3 = weights_V_TDATA[32'd3];

assign tmp_40_fu_2591_p3 = weights_V_TDATA[32'd40];

assign tmp_41_fu_2599_p3 = weights_V_TDATA[32'd41];

assign tmp_42_fu_2607_p3 = weights_V_TDATA[32'd42];

assign tmp_43_fu_2615_p3 = weights_V_TDATA[32'd43];

assign tmp_44_fu_2623_p3 = weights_V_TDATA[32'd44];

assign tmp_45_fu_2631_p3 = weights_V_TDATA[32'd45];

assign tmp_46_fu_2639_p3 = weights_V_TDATA[32'd46];

assign tmp_47_fu_2647_p3 = weights_V_TDATA[32'd47];

assign tmp_48_fu_2655_p3 = weights_V_TDATA[32'd48];

assign tmp_49_fu_2663_p3 = weights_V_TDATA[32'd49];

assign tmp_4_fu_1239_p3 = weights_V_TDATA[32'd4];

assign tmp_50_fu_2671_p3 = weights_V_TDATA[32'd50];

assign tmp_51_fu_2679_p3 = weights_V_TDATA[32'd51];

assign tmp_52_fu_2687_p3 = weights_V_TDATA[32'd52];

assign tmp_53_fu_2695_p3 = weights_V_TDATA[32'd53];

assign tmp_54_fu_2703_p3 = weights_V_TDATA[32'd54];

assign tmp_55_fu_2711_p3 = weights_V_TDATA[32'd55];

assign tmp_56_fu_2719_p3 = weights_V_TDATA[32'd56];

assign tmp_57_fu_2727_p3 = weights_V_TDATA[32'd57];

assign tmp_58_fu_2735_p3 = weights_V_TDATA[32'd58];

assign tmp_59_fu_2743_p3 = weights_V_TDATA[32'd59];

assign tmp_5_fu_1247_p3 = weights_V_TDATA[32'd5];

assign tmp_60_fu_2751_p3 = weights_V_TDATA[32'd60];

assign tmp_61_fu_2759_p3 = weights_V_TDATA[32'd61];

assign tmp_62_fu_2767_p3 = weights_V_TDATA[32'd62];

assign tmp_63_fu_2775_p3 = weights_V_TDATA[32'd63];

assign tmp_64_fu_3591_p3 = weights_V_TDATA[32'd64];

assign tmp_65_fu_3599_p3 = weights_V_TDATA[32'd65];

assign tmp_66_fu_3607_p3 = weights_V_TDATA[32'd66];

assign tmp_67_fu_3615_p3 = weights_V_TDATA[32'd67];

assign tmp_68_fu_3623_p3 = weights_V_TDATA[32'd68];

assign tmp_69_fu_3631_p3 = weights_V_TDATA[32'd69];

assign tmp_6_fu_1255_p3 = weights_V_TDATA[32'd6];

assign tmp_70_fu_3639_p3 = weights_V_TDATA[32'd70];

assign tmp_71_fu_3647_p3 = weights_V_TDATA[32'd71];

assign tmp_72_fu_3655_p3 = weights_V_TDATA[32'd72];

assign tmp_73_fu_3663_p3 = weights_V_TDATA[32'd73];

assign tmp_74_fu_3671_p3 = weights_V_TDATA[32'd74];

assign tmp_75_fu_3679_p3 = weights_V_TDATA[32'd75];

assign tmp_76_fu_3687_p3 = weights_V_TDATA[32'd76];

assign tmp_77_fu_3695_p3 = weights_V_TDATA[32'd77];

assign tmp_78_fu_3703_p3 = weights_V_TDATA[32'd78];

assign tmp_79_fu_3711_p3 = weights_V_TDATA[32'd79];

assign tmp_7_fu_1263_p3 = weights_V_TDATA[32'd7];

assign tmp_80_fu_3719_p3 = weights_V_TDATA[32'd80];

assign tmp_81_fu_3727_p3 = weights_V_TDATA[32'd81];

assign tmp_82_fu_3735_p3 = weights_V_TDATA[32'd82];

assign tmp_83_fu_3743_p3 = weights_V_TDATA[32'd83];

assign tmp_84_fu_3751_p3 = weights_V_TDATA[32'd84];

assign tmp_85_fu_3759_p3 = weights_V_TDATA[32'd85];

assign tmp_86_fu_3767_p3 = weights_V_TDATA[32'd86];

assign tmp_87_fu_3775_p3 = weights_V_TDATA[32'd87];

assign tmp_88_fu_3783_p3 = weights_V_TDATA[32'd88];

assign tmp_89_fu_3791_p3 = weights_V_TDATA[32'd89];

assign tmp_8_fu_1271_p3 = weights_V_TDATA[32'd8];

assign tmp_90_fu_3799_p3 = weights_V_TDATA[32'd90];

assign tmp_91_fu_3807_p3 = weights_V_TDATA[32'd91];

assign tmp_92_fu_3815_p3 = weights_V_TDATA[32'd92];

assign tmp_93_fu_3823_p3 = weights_V_TDATA[32'd93];

assign tmp_94_fu_3831_p3 = weights_V_TDATA[32'd94];

assign tmp_95_fu_3839_p3 = weights_V_TDATA[32'd95];

assign tmp_96_fu_4655_p3 = weights_V_TDATA[32'd96];

assign tmp_97_fu_4663_p3 = weights_V_TDATA[32'd97];

assign tmp_98_fu_4671_p3 = weights_V_TDATA[32'd98];

assign tmp_99_fu_4679_p3 = weights_V_TDATA[32'd99];

assign tmp_9_fu_1279_p3 = weights_V_TDATA[32'd9];

assign tmp_fu_1215_p3 = weights_V_TDATA[32'd1];

assign trunc_ln256_fu_974_p1 = sf_fu_400[5:0];

assign trunc_ln674_fu_1211_p1 = weights_V_TDATA[0:0];

assign xor_ln870_100_fu_3071_p2 = (tmp_50_fu_2671_p3 ^ p_Result_0_17_fu_1895_p3);

assign xor_ln870_101_fu_3077_p2 = (xor_ln870_100_fu_3071_p2 ^ 1'd1);

assign xor_ln870_102_fu_3087_p2 = (tmp_51_fu_2679_p3 ^ p_Result_0_18_fu_1919_p3);

assign xor_ln870_103_fu_3093_p2 = (xor_ln870_102_fu_3087_p2 ^ 1'd1);

assign xor_ln870_104_fu_3103_p2 = (tmp_52_fu_2687_p3 ^ p_Result_0_19_fu_1943_p3);

assign xor_ln870_105_fu_3109_p2 = (xor_ln870_104_fu_3103_p2 ^ 1'd1);

assign xor_ln870_106_fu_3119_p2 = (tmp_53_fu_2695_p3 ^ p_Result_0_20_fu_1967_p3);

assign xor_ln870_107_fu_3125_p2 = (xor_ln870_106_fu_3119_p2 ^ 1'd1);

assign xor_ln870_108_fu_3135_p2 = (tmp_54_fu_2703_p3 ^ p_Result_0_21_fu_1991_p3);

assign xor_ln870_109_fu_3141_p2 = (xor_ln870_108_fu_3135_p2 ^ 1'd1);

assign xor_ln870_10_fu_1591_p2 = (tmp_5_fu_1247_p3 ^ p_Result_0_5_fu_1583_p3);

assign xor_ln870_110_fu_3151_p2 = (tmp_55_fu_2711_p3 ^ p_Result_0_22_fu_2015_p3);

assign xor_ln870_111_fu_3157_p2 = (xor_ln870_110_fu_3151_p2 ^ 1'd1);

assign xor_ln870_112_fu_3167_p2 = (tmp_56_fu_2719_p3 ^ p_Result_0_23_fu_2039_p3);

assign xor_ln870_113_fu_3173_p2 = (xor_ln870_112_fu_3167_p2 ^ 1'd1);

assign xor_ln870_114_fu_3183_p2 = (tmp_57_fu_2727_p3 ^ p_Result_0_24_fu_2063_p3);

assign xor_ln870_115_fu_3189_p2 = (xor_ln870_114_fu_3183_p2 ^ 1'd1);

assign xor_ln870_116_fu_3199_p2 = (tmp_58_fu_2735_p3 ^ p_Result_0_25_fu_2087_p3);

assign xor_ln870_117_fu_3205_p2 = (xor_ln870_116_fu_3199_p2 ^ 1'd1);

assign xor_ln870_118_fu_3215_p2 = (tmp_59_fu_2743_p3 ^ p_Result_0_26_fu_2111_p3);

assign xor_ln870_119_fu_3221_p2 = (xor_ln870_118_fu_3215_p2 ^ 1'd1);

assign xor_ln870_11_fu_1597_p2 = (xor_ln870_10_fu_1591_p2 ^ 1'd1);

assign xor_ln870_120_fu_3231_p2 = (tmp_60_fu_2751_p3 ^ p_Result_0_27_fu_2135_p3);

assign xor_ln870_121_fu_3237_p2 = (xor_ln870_120_fu_3231_p2 ^ 1'd1);

assign xor_ln870_122_fu_3247_p2 = (tmp_61_fu_2759_p3 ^ p_Result_0_28_fu_2159_p3);

assign xor_ln870_123_fu_3253_p2 = (xor_ln870_122_fu_3247_p2 ^ 1'd1);

assign xor_ln870_124_fu_3263_p2 = (tmp_62_fu_2767_p3 ^ p_Result_0_29_fu_2183_p3);

assign xor_ln870_125_fu_3269_p2 = (xor_ln870_124_fu_3263_p2 ^ 1'd1);

assign xor_ln870_126_fu_3279_p2 = (tmp_63_fu_2775_p3 ^ p_Result_0_30_fu_2207_p3);

assign xor_ln870_127_fu_3285_p2 = (xor_ln870_126_fu_3279_p2 ^ 1'd1);

assign xor_ln870_128_fu_3847_p2 = (tmp_64_fu_3591_p3 ^ p_Result_1_fu_1463_p3);

assign xor_ln870_129_fu_3853_p2 = (xor_ln870_128_fu_3847_p2 ^ 1'd1);

assign xor_ln870_12_fu_1615_p2 = (tmp_6_fu_1255_p3 ^ p_Result_0_6_fu_1607_p3);

assign xor_ln870_130_fu_3863_p2 = (tmp_65_fu_3599_p3 ^ p_Result_0_1_fu_1487_p3);

assign xor_ln870_131_fu_3869_p2 = (xor_ln870_130_fu_3863_p2 ^ 1'd1);

assign xor_ln870_132_fu_3879_p2 = (tmp_66_fu_3607_p3 ^ p_Result_0_2_fu_1511_p3);

assign xor_ln870_133_fu_3885_p2 = (xor_ln870_132_fu_3879_p2 ^ 1'd1);

assign xor_ln870_134_fu_3895_p2 = (tmp_67_fu_3615_p3 ^ p_Result_0_3_fu_1535_p3);

assign xor_ln870_135_fu_3901_p2 = (xor_ln870_134_fu_3895_p2 ^ 1'd1);

assign xor_ln870_136_fu_3911_p2 = (tmp_68_fu_3623_p3 ^ p_Result_0_4_fu_1559_p3);

assign xor_ln870_137_fu_3917_p2 = (xor_ln870_136_fu_3911_p2 ^ 1'd1);

assign xor_ln870_138_fu_3927_p2 = (tmp_69_fu_3631_p3 ^ p_Result_0_5_fu_1583_p3);

assign xor_ln870_139_fu_3933_p2 = (xor_ln870_138_fu_3927_p2 ^ 1'd1);

assign xor_ln870_13_fu_1621_p2 = (xor_ln870_12_fu_1615_p2 ^ 1'd1);

assign xor_ln870_140_fu_3943_p2 = (tmp_70_fu_3639_p3 ^ p_Result_0_6_fu_1607_p3);

assign xor_ln870_141_fu_3949_p2 = (xor_ln870_140_fu_3943_p2 ^ 1'd1);

assign xor_ln870_142_fu_3959_p2 = (tmp_71_fu_3647_p3 ^ p_Result_0_7_fu_1631_p3);

assign xor_ln870_143_fu_3965_p2 = (xor_ln870_142_fu_3959_p2 ^ 1'd1);

assign xor_ln870_144_fu_3975_p2 = (tmp_72_fu_3655_p3 ^ p_Result_0_8_fu_1655_p3);

assign xor_ln870_145_fu_3981_p2 = (xor_ln870_144_fu_3975_p2 ^ 1'd1);

assign xor_ln870_146_fu_3991_p2 = (tmp_73_fu_3663_p3 ^ p_Result_0_9_fu_1679_p3);

assign xor_ln870_147_fu_3997_p2 = (xor_ln870_146_fu_3991_p2 ^ 1'd1);

assign xor_ln870_148_fu_4007_p2 = (tmp_74_fu_3671_p3 ^ p_Result_0_s_fu_1703_p3);

assign xor_ln870_149_fu_4013_p2 = (xor_ln870_148_fu_4007_p2 ^ 1'd1);

assign xor_ln870_14_fu_1639_p2 = (tmp_7_fu_1263_p3 ^ p_Result_0_7_fu_1631_p3);

assign xor_ln870_150_fu_4023_p2 = (tmp_75_fu_3679_p3 ^ p_Result_0_10_fu_1727_p3);

assign xor_ln870_151_fu_4029_p2 = (xor_ln870_150_fu_4023_p2 ^ 1'd1);

assign xor_ln870_152_fu_4039_p2 = (tmp_76_fu_3687_p3 ^ p_Result_0_11_fu_1751_p3);

assign xor_ln870_153_fu_4045_p2 = (xor_ln870_152_fu_4039_p2 ^ 1'd1);

assign xor_ln870_154_fu_4055_p2 = (tmp_77_fu_3695_p3 ^ p_Result_0_12_fu_1775_p3);

assign xor_ln870_155_fu_4061_p2 = (xor_ln870_154_fu_4055_p2 ^ 1'd1);

assign xor_ln870_156_fu_4071_p2 = (tmp_78_fu_3703_p3 ^ p_Result_0_13_fu_1799_p3);

assign xor_ln870_157_fu_4077_p2 = (xor_ln870_156_fu_4071_p2 ^ 1'd1);

assign xor_ln870_158_fu_4087_p2 = (tmp_79_fu_3711_p3 ^ p_Result_0_14_fu_1823_p3);

assign xor_ln870_159_fu_4093_p2 = (xor_ln870_158_fu_4087_p2 ^ 1'd1);

assign xor_ln870_15_fu_1645_p2 = (xor_ln870_14_fu_1639_p2 ^ 1'd1);

assign xor_ln870_160_fu_4103_p2 = (tmp_80_fu_3719_p3 ^ p_Result_0_15_fu_1847_p3);

assign xor_ln870_161_fu_4109_p2 = (xor_ln870_160_fu_4103_p2 ^ 1'd1);

assign xor_ln870_162_fu_4119_p2 = (tmp_81_fu_3727_p3 ^ p_Result_0_16_fu_1871_p3);

assign xor_ln870_163_fu_4125_p2 = (xor_ln870_162_fu_4119_p2 ^ 1'd1);

assign xor_ln870_164_fu_4135_p2 = (tmp_82_fu_3735_p3 ^ p_Result_0_17_fu_1895_p3);

assign xor_ln870_165_fu_4141_p2 = (xor_ln870_164_fu_4135_p2 ^ 1'd1);

assign xor_ln870_166_fu_4151_p2 = (tmp_83_fu_3743_p3 ^ p_Result_0_18_fu_1919_p3);

assign xor_ln870_167_fu_4157_p2 = (xor_ln870_166_fu_4151_p2 ^ 1'd1);

assign xor_ln870_168_fu_4167_p2 = (tmp_84_fu_3751_p3 ^ p_Result_0_19_fu_1943_p3);

assign xor_ln870_169_fu_4173_p2 = (xor_ln870_168_fu_4167_p2 ^ 1'd1);

assign xor_ln870_16_fu_1663_p2 = (tmp_8_fu_1271_p3 ^ p_Result_0_8_fu_1655_p3);

assign xor_ln870_170_fu_4183_p2 = (tmp_85_fu_3759_p3 ^ p_Result_0_20_fu_1967_p3);

assign xor_ln870_171_fu_4189_p2 = (xor_ln870_170_fu_4183_p2 ^ 1'd1);

assign xor_ln870_172_fu_4199_p2 = (tmp_86_fu_3767_p3 ^ p_Result_0_21_fu_1991_p3);

assign xor_ln870_173_fu_4205_p2 = (xor_ln870_172_fu_4199_p2 ^ 1'd1);

assign xor_ln870_174_fu_4215_p2 = (tmp_87_fu_3775_p3 ^ p_Result_0_22_fu_2015_p3);

assign xor_ln870_175_fu_4221_p2 = (xor_ln870_174_fu_4215_p2 ^ 1'd1);

assign xor_ln870_176_fu_4231_p2 = (tmp_88_fu_3783_p3 ^ p_Result_0_23_fu_2039_p3);

assign xor_ln870_177_fu_4237_p2 = (xor_ln870_176_fu_4231_p2 ^ 1'd1);

assign xor_ln870_178_fu_4247_p2 = (tmp_89_fu_3791_p3 ^ p_Result_0_24_fu_2063_p3);

assign xor_ln870_179_fu_4253_p2 = (xor_ln870_178_fu_4247_p2 ^ 1'd1);

assign xor_ln870_17_fu_1669_p2 = (xor_ln870_16_fu_1663_p2 ^ 1'd1);

assign xor_ln870_180_fu_4263_p2 = (tmp_90_fu_3799_p3 ^ p_Result_0_25_fu_2087_p3);

assign xor_ln870_181_fu_4269_p2 = (xor_ln870_180_fu_4263_p2 ^ 1'd1);

assign xor_ln870_182_fu_4279_p2 = (tmp_91_fu_3807_p3 ^ p_Result_0_26_fu_2111_p3);

assign xor_ln870_183_fu_4285_p2 = (xor_ln870_182_fu_4279_p2 ^ 1'd1);

assign xor_ln870_184_fu_4295_p2 = (tmp_92_fu_3815_p3 ^ p_Result_0_27_fu_2135_p3);

assign xor_ln870_185_fu_4301_p2 = (xor_ln870_184_fu_4295_p2 ^ 1'd1);

assign xor_ln870_186_fu_4311_p2 = (tmp_93_fu_3823_p3 ^ p_Result_0_28_fu_2159_p3);

assign xor_ln870_187_fu_4317_p2 = (xor_ln870_186_fu_4311_p2 ^ 1'd1);

assign xor_ln870_188_fu_4327_p2 = (tmp_94_fu_3831_p3 ^ p_Result_0_29_fu_2183_p3);

assign xor_ln870_189_fu_4333_p2 = (xor_ln870_188_fu_4327_p2 ^ 1'd1);

assign xor_ln870_18_fu_1687_p2 = (tmp_9_fu_1279_p3 ^ p_Result_0_9_fu_1679_p3);

assign xor_ln870_190_fu_4343_p2 = (tmp_95_fu_3839_p3 ^ p_Result_0_30_fu_2207_p3);

assign xor_ln870_191_fu_4349_p2 = (xor_ln870_190_fu_4343_p2 ^ 1'd1);

assign xor_ln870_192_fu_4911_p2 = (tmp_96_fu_4655_p3 ^ p_Result_1_fu_1463_p3);

assign xor_ln870_193_fu_4917_p2 = (xor_ln870_192_fu_4911_p2 ^ 1'd1);

assign xor_ln870_194_fu_4927_p2 = (tmp_97_fu_4663_p3 ^ p_Result_0_1_fu_1487_p3);

assign xor_ln870_195_fu_4933_p2 = (xor_ln870_194_fu_4927_p2 ^ 1'd1);

assign xor_ln870_196_fu_4943_p2 = (tmp_98_fu_4671_p3 ^ p_Result_0_2_fu_1511_p3);

assign xor_ln870_197_fu_4949_p2 = (xor_ln870_196_fu_4943_p2 ^ 1'd1);

assign xor_ln870_198_fu_4959_p2 = (tmp_99_fu_4679_p3 ^ p_Result_0_3_fu_1535_p3);

assign xor_ln870_199_fu_4965_p2 = (xor_ln870_198_fu_4959_p2 ^ 1'd1);

assign xor_ln870_19_fu_1693_p2 = (xor_ln870_18_fu_1687_p2 ^ 1'd1);

assign xor_ln870_1_fu_1477_p2 = (xor_ln870_fu_1471_p2 ^ 1'd1);

assign xor_ln870_200_fu_4975_p2 = (tmp_100_fu_4687_p3 ^ p_Result_0_4_fu_1559_p3);

assign xor_ln870_201_fu_4981_p2 = (xor_ln870_200_fu_4975_p2 ^ 1'd1);

assign xor_ln870_202_fu_4991_p2 = (tmp_101_fu_4695_p3 ^ p_Result_0_5_fu_1583_p3);

assign xor_ln870_203_fu_4997_p2 = (xor_ln870_202_fu_4991_p2 ^ 1'd1);

assign xor_ln870_204_fu_5007_p2 = (tmp_102_fu_4703_p3 ^ p_Result_0_6_fu_1607_p3);

assign xor_ln870_205_fu_5013_p2 = (xor_ln870_204_fu_5007_p2 ^ 1'd1);

assign xor_ln870_206_fu_5023_p2 = (tmp_103_fu_4711_p3 ^ p_Result_0_7_fu_1631_p3);

assign xor_ln870_207_fu_5029_p2 = (xor_ln870_206_fu_5023_p2 ^ 1'd1);

assign xor_ln870_208_fu_5039_p2 = (tmp_104_fu_4719_p3 ^ p_Result_0_8_fu_1655_p3);

assign xor_ln870_209_fu_5045_p2 = (xor_ln870_208_fu_5039_p2 ^ 1'd1);

assign xor_ln870_20_fu_1711_p2 = (tmp_10_fu_1287_p3 ^ p_Result_0_s_fu_1703_p3);

assign xor_ln870_210_fu_5055_p2 = (tmp_105_fu_4727_p3 ^ p_Result_0_9_fu_1679_p3);

assign xor_ln870_211_fu_5061_p2 = (xor_ln870_210_fu_5055_p2 ^ 1'd1);

assign xor_ln870_212_fu_5071_p2 = (tmp_106_fu_4735_p3 ^ p_Result_0_s_fu_1703_p3);

assign xor_ln870_213_fu_5077_p2 = (xor_ln870_212_fu_5071_p2 ^ 1'd1);

assign xor_ln870_214_fu_5087_p2 = (tmp_107_fu_4743_p3 ^ p_Result_0_10_fu_1727_p3);

assign xor_ln870_215_fu_5093_p2 = (xor_ln870_214_fu_5087_p2 ^ 1'd1);

assign xor_ln870_216_fu_5103_p2 = (tmp_108_fu_4751_p3 ^ p_Result_0_11_fu_1751_p3);

assign xor_ln870_217_fu_5109_p2 = (xor_ln870_216_fu_5103_p2 ^ 1'd1);

assign xor_ln870_218_fu_5119_p2 = (tmp_109_fu_4759_p3 ^ p_Result_0_12_fu_1775_p3);

assign xor_ln870_219_fu_5125_p2 = (xor_ln870_218_fu_5119_p2 ^ 1'd1);

assign xor_ln870_21_fu_1717_p2 = (xor_ln870_20_fu_1711_p2 ^ 1'd1);

assign xor_ln870_220_fu_5135_p2 = (tmp_110_fu_4767_p3 ^ p_Result_0_13_fu_1799_p3);

assign xor_ln870_221_fu_5141_p2 = (xor_ln870_220_fu_5135_p2 ^ 1'd1);

assign xor_ln870_222_fu_5151_p2 = (tmp_111_fu_4775_p3 ^ p_Result_0_14_fu_1823_p3);

assign xor_ln870_223_fu_5157_p2 = (xor_ln870_222_fu_5151_p2 ^ 1'd1);

assign xor_ln870_224_fu_5167_p2 = (tmp_112_fu_4783_p3 ^ p_Result_0_15_fu_1847_p3);

assign xor_ln870_225_fu_5173_p2 = (xor_ln870_224_fu_5167_p2 ^ 1'd1);

assign xor_ln870_226_fu_5183_p2 = (tmp_113_fu_4791_p3 ^ p_Result_0_16_fu_1871_p3);

assign xor_ln870_227_fu_5189_p2 = (xor_ln870_226_fu_5183_p2 ^ 1'd1);

assign xor_ln870_228_fu_5199_p2 = (tmp_114_fu_4799_p3 ^ p_Result_0_17_fu_1895_p3);

assign xor_ln870_229_fu_5205_p2 = (xor_ln870_228_fu_5199_p2 ^ 1'd1);

assign xor_ln870_22_fu_1735_p2 = (tmp_11_fu_1295_p3 ^ p_Result_0_10_fu_1727_p3);

assign xor_ln870_230_fu_5215_p2 = (tmp_115_fu_4807_p3 ^ p_Result_0_18_fu_1919_p3);

assign xor_ln870_231_fu_5221_p2 = (xor_ln870_230_fu_5215_p2 ^ 1'd1);

assign xor_ln870_232_fu_5231_p2 = (tmp_116_fu_4815_p3 ^ p_Result_0_19_fu_1943_p3);

assign xor_ln870_233_fu_5237_p2 = (xor_ln870_232_fu_5231_p2 ^ 1'd1);

assign xor_ln870_234_fu_5247_p2 = (tmp_117_fu_4823_p3 ^ p_Result_0_20_fu_1967_p3);

assign xor_ln870_235_fu_5253_p2 = (xor_ln870_234_fu_5247_p2 ^ 1'd1);

assign xor_ln870_236_fu_5263_p2 = (tmp_118_fu_4831_p3 ^ p_Result_0_21_fu_1991_p3);

assign xor_ln870_237_fu_5269_p2 = (xor_ln870_236_fu_5263_p2 ^ 1'd1);

assign xor_ln870_238_fu_5279_p2 = (tmp_119_fu_4839_p3 ^ p_Result_0_22_fu_2015_p3);

assign xor_ln870_239_fu_5285_p2 = (xor_ln870_238_fu_5279_p2 ^ 1'd1);

assign xor_ln870_23_fu_1741_p2 = (xor_ln870_22_fu_1735_p2 ^ 1'd1);

assign xor_ln870_240_fu_5295_p2 = (tmp_120_fu_4847_p3 ^ p_Result_0_23_fu_2039_p3);

assign xor_ln870_241_fu_5301_p2 = (xor_ln870_240_fu_5295_p2 ^ 1'd1);

assign xor_ln870_242_fu_5311_p2 = (tmp_121_fu_4855_p3 ^ p_Result_0_24_fu_2063_p3);

assign xor_ln870_243_fu_5317_p2 = (xor_ln870_242_fu_5311_p2 ^ 1'd1);

assign xor_ln870_244_fu_5327_p2 = (tmp_122_fu_4863_p3 ^ p_Result_0_25_fu_2087_p3);

assign xor_ln870_245_fu_5333_p2 = (xor_ln870_244_fu_5327_p2 ^ 1'd1);

assign xor_ln870_246_fu_5343_p2 = (tmp_123_fu_4871_p3 ^ p_Result_0_26_fu_2111_p3);

assign xor_ln870_247_fu_5349_p2 = (xor_ln870_246_fu_5343_p2 ^ 1'd1);

assign xor_ln870_248_fu_5359_p2 = (tmp_124_fu_4879_p3 ^ p_Result_0_27_fu_2135_p3);

assign xor_ln870_249_fu_5365_p2 = (xor_ln870_248_fu_5359_p2 ^ 1'd1);

assign xor_ln870_24_fu_1759_p2 = (tmp_12_fu_1303_p3 ^ p_Result_0_11_fu_1751_p3);

assign xor_ln870_250_fu_5375_p2 = (tmp_125_fu_4887_p3 ^ p_Result_0_28_fu_2159_p3);

assign xor_ln870_251_fu_5381_p2 = (xor_ln870_250_fu_5375_p2 ^ 1'd1);

assign xor_ln870_252_fu_5391_p2 = (tmp_126_fu_4895_p3 ^ p_Result_0_29_fu_2183_p3);

assign xor_ln870_253_fu_5397_p2 = (xor_ln870_252_fu_5391_p2 ^ 1'd1);

assign xor_ln870_254_fu_5407_p2 = (tmp_127_fu_4903_p3 ^ p_Result_0_30_fu_2207_p3);

assign xor_ln870_255_fu_5413_p2 = (xor_ln870_254_fu_5407_p2 ^ 1'd1);

assign xor_ln870_25_fu_1765_p2 = (xor_ln870_24_fu_1759_p2 ^ 1'd1);

assign xor_ln870_26_fu_1783_p2 = (tmp_13_fu_1311_p3 ^ p_Result_0_12_fu_1775_p3);

assign xor_ln870_27_fu_1789_p2 = (xor_ln870_26_fu_1783_p2 ^ 1'd1);

assign xor_ln870_28_fu_1807_p2 = (tmp_14_fu_1319_p3 ^ p_Result_0_13_fu_1799_p3);

assign xor_ln870_29_fu_1813_p2 = (xor_ln870_28_fu_1807_p2 ^ 1'd1);

assign xor_ln870_2_fu_1495_p2 = (tmp_fu_1215_p3 ^ p_Result_0_1_fu_1487_p3);

assign xor_ln870_30_fu_1831_p2 = (tmp_15_fu_1327_p3 ^ p_Result_0_14_fu_1823_p3);

assign xor_ln870_31_fu_1837_p2 = (xor_ln870_30_fu_1831_p2 ^ 1'd1);

assign xor_ln870_32_fu_1855_p2 = (tmp_16_fu_1335_p3 ^ p_Result_0_15_fu_1847_p3);

assign xor_ln870_33_fu_1861_p2 = (xor_ln870_32_fu_1855_p2 ^ 1'd1);

assign xor_ln870_34_fu_1879_p2 = (tmp_17_fu_1343_p3 ^ p_Result_0_16_fu_1871_p3);

assign xor_ln870_35_fu_1885_p2 = (xor_ln870_34_fu_1879_p2 ^ 1'd1);

assign xor_ln870_36_fu_1903_p2 = (tmp_18_fu_1351_p3 ^ p_Result_0_17_fu_1895_p3);

assign xor_ln870_37_fu_1909_p2 = (xor_ln870_36_fu_1903_p2 ^ 1'd1);

assign xor_ln870_38_fu_1927_p2 = (tmp_19_fu_1359_p3 ^ p_Result_0_18_fu_1919_p3);

assign xor_ln870_39_fu_1933_p2 = (xor_ln870_38_fu_1927_p2 ^ 1'd1);

assign xor_ln870_3_fu_1501_p2 = (xor_ln870_2_fu_1495_p2 ^ 1'd1);

assign xor_ln870_40_fu_1951_p2 = (tmp_20_fu_1367_p3 ^ p_Result_0_19_fu_1943_p3);

assign xor_ln870_41_fu_1957_p2 = (xor_ln870_40_fu_1951_p2 ^ 1'd1);

assign xor_ln870_42_fu_1975_p2 = (tmp_21_fu_1375_p3 ^ p_Result_0_20_fu_1967_p3);

assign xor_ln870_43_fu_1981_p2 = (xor_ln870_42_fu_1975_p2 ^ 1'd1);

assign xor_ln870_44_fu_1999_p2 = (tmp_22_fu_1383_p3 ^ p_Result_0_21_fu_1991_p3);

assign xor_ln870_45_fu_2005_p2 = (xor_ln870_44_fu_1999_p2 ^ 1'd1);

assign xor_ln870_46_fu_2023_p2 = (tmp_23_fu_1391_p3 ^ p_Result_0_22_fu_2015_p3);

assign xor_ln870_47_fu_2029_p2 = (xor_ln870_46_fu_2023_p2 ^ 1'd1);

assign xor_ln870_48_fu_2047_p2 = (tmp_24_fu_1399_p3 ^ p_Result_0_23_fu_2039_p3);

assign xor_ln870_49_fu_2053_p2 = (xor_ln870_48_fu_2047_p2 ^ 1'd1);

assign xor_ln870_4_fu_1519_p2 = (tmp_1_fu_1223_p3 ^ p_Result_0_2_fu_1511_p3);

assign xor_ln870_50_fu_2071_p2 = (tmp_25_fu_1407_p3 ^ p_Result_0_24_fu_2063_p3);

assign xor_ln870_51_fu_2077_p2 = (xor_ln870_50_fu_2071_p2 ^ 1'd1);

assign xor_ln870_52_fu_2095_p2 = (tmp_26_fu_1415_p3 ^ p_Result_0_25_fu_2087_p3);

assign xor_ln870_53_fu_2101_p2 = (xor_ln870_52_fu_2095_p2 ^ 1'd1);

assign xor_ln870_54_fu_2119_p2 = (tmp_27_fu_1423_p3 ^ p_Result_0_26_fu_2111_p3);

assign xor_ln870_55_fu_2125_p2 = (xor_ln870_54_fu_2119_p2 ^ 1'd1);

assign xor_ln870_56_fu_2143_p2 = (tmp_28_fu_1431_p3 ^ p_Result_0_27_fu_2135_p3);

assign xor_ln870_57_fu_2149_p2 = (xor_ln870_56_fu_2143_p2 ^ 1'd1);

assign xor_ln870_58_fu_2167_p2 = (tmp_29_fu_1439_p3 ^ p_Result_0_28_fu_2159_p3);

assign xor_ln870_59_fu_2173_p2 = (xor_ln870_58_fu_2167_p2 ^ 1'd1);

assign xor_ln870_5_fu_1525_p2 = (xor_ln870_4_fu_1519_p2 ^ 1'd1);

assign xor_ln870_60_fu_2191_p2 = (tmp_30_fu_1447_p3 ^ p_Result_0_29_fu_2183_p3);

assign xor_ln870_61_fu_2197_p2 = (xor_ln870_60_fu_2191_p2 ^ 1'd1);

assign xor_ln870_62_fu_2215_p2 = (tmp_31_fu_1455_p3 ^ p_Result_0_30_fu_2207_p3);

assign xor_ln870_63_fu_2221_p2 = (xor_ln870_62_fu_2215_p2 ^ 1'd1);

assign xor_ln870_64_fu_2783_p2 = (tmp_32_fu_2527_p3 ^ p_Result_1_fu_1463_p3);

assign xor_ln870_65_fu_2789_p2 = (xor_ln870_64_fu_2783_p2 ^ 1'd1);

assign xor_ln870_66_fu_2799_p2 = (tmp_33_fu_2535_p3 ^ p_Result_0_1_fu_1487_p3);

assign xor_ln870_67_fu_2805_p2 = (xor_ln870_66_fu_2799_p2 ^ 1'd1);

assign xor_ln870_68_fu_2815_p2 = (tmp_34_fu_2543_p3 ^ p_Result_0_2_fu_1511_p3);

assign xor_ln870_69_fu_2821_p2 = (xor_ln870_68_fu_2815_p2 ^ 1'd1);

assign xor_ln870_6_fu_1543_p2 = (tmp_3_fu_1231_p3 ^ p_Result_0_3_fu_1535_p3);

assign xor_ln870_70_fu_2831_p2 = (tmp_35_fu_2551_p3 ^ p_Result_0_3_fu_1535_p3);

assign xor_ln870_71_fu_2837_p2 = (xor_ln870_70_fu_2831_p2 ^ 1'd1);

assign xor_ln870_72_fu_2847_p2 = (tmp_36_fu_2559_p3 ^ p_Result_0_4_fu_1559_p3);

assign xor_ln870_73_fu_2853_p2 = (xor_ln870_72_fu_2847_p2 ^ 1'd1);

assign xor_ln870_74_fu_2863_p2 = (tmp_37_fu_2567_p3 ^ p_Result_0_5_fu_1583_p3);

assign xor_ln870_75_fu_2869_p2 = (xor_ln870_74_fu_2863_p2 ^ 1'd1);

assign xor_ln870_76_fu_2879_p2 = (tmp_38_fu_2575_p3 ^ p_Result_0_6_fu_1607_p3);

assign xor_ln870_77_fu_2885_p2 = (xor_ln870_76_fu_2879_p2 ^ 1'd1);

assign xor_ln870_78_fu_2895_p2 = (tmp_39_fu_2583_p3 ^ p_Result_0_7_fu_1631_p3);

assign xor_ln870_79_fu_2901_p2 = (xor_ln870_78_fu_2895_p2 ^ 1'd1);

assign xor_ln870_7_fu_1549_p2 = (xor_ln870_6_fu_1543_p2 ^ 1'd1);

assign xor_ln870_80_fu_2911_p2 = (tmp_40_fu_2591_p3 ^ p_Result_0_8_fu_1655_p3);

assign xor_ln870_81_fu_2917_p2 = (xor_ln870_80_fu_2911_p2 ^ 1'd1);

assign xor_ln870_82_fu_2927_p2 = (tmp_41_fu_2599_p3 ^ p_Result_0_9_fu_1679_p3);

assign xor_ln870_83_fu_2933_p2 = (xor_ln870_82_fu_2927_p2 ^ 1'd1);

assign xor_ln870_84_fu_2943_p2 = (tmp_42_fu_2607_p3 ^ p_Result_0_s_fu_1703_p3);

assign xor_ln870_85_fu_2949_p2 = (xor_ln870_84_fu_2943_p2 ^ 1'd1);

assign xor_ln870_86_fu_2959_p2 = (tmp_43_fu_2615_p3 ^ p_Result_0_10_fu_1727_p3);

assign xor_ln870_87_fu_2965_p2 = (xor_ln870_86_fu_2959_p2 ^ 1'd1);

assign xor_ln870_88_fu_2975_p2 = (tmp_44_fu_2623_p3 ^ p_Result_0_11_fu_1751_p3);

assign xor_ln870_89_fu_2981_p2 = (xor_ln870_88_fu_2975_p2 ^ 1'd1);

assign xor_ln870_8_fu_1567_p2 = (tmp_4_fu_1239_p3 ^ p_Result_0_4_fu_1559_p3);

assign xor_ln870_90_fu_2991_p2 = (tmp_45_fu_2631_p3 ^ p_Result_0_12_fu_1775_p3);

assign xor_ln870_91_fu_2997_p2 = (xor_ln870_90_fu_2991_p2 ^ 1'd1);

assign xor_ln870_92_fu_3007_p2 = (tmp_46_fu_2639_p3 ^ p_Result_0_13_fu_1799_p3);

assign xor_ln870_93_fu_3013_p2 = (xor_ln870_92_fu_3007_p2 ^ 1'd1);

assign xor_ln870_94_fu_3023_p2 = (tmp_47_fu_2647_p3 ^ p_Result_0_14_fu_1823_p3);

assign xor_ln870_95_fu_3029_p2 = (xor_ln870_94_fu_3023_p2 ^ 1'd1);

assign xor_ln870_96_fu_3039_p2 = (tmp_48_fu_2655_p3 ^ p_Result_0_15_fu_1847_p3);

assign xor_ln870_97_fu_3045_p2 = (xor_ln870_96_fu_3039_p2 ^ 1'd1);

assign xor_ln870_98_fu_3055_p2 = (tmp_49_fu_2663_p3 ^ p_Result_0_16_fu_1871_p3);

assign xor_ln870_99_fu_3061_p2 = (xor_ln870_98_fu_3055_p2 ^ 1'd1);

assign xor_ln870_9_fu_1573_p2 = (xor_ln870_8_fu_1567_p2 ^ 1'd1);

assign xor_ln870_fu_1471_p2 = (trunc_ln674_fu_1211_p1 ^ p_Result_1_fu_1463_p3);

assign zext_ln691_100_fu_5593_p1 = add_ln691_114_fu_5587_p2;

assign zext_ln691_101_fu_5603_p1 = add_ln691_115_fu_5597_p2;

assign zext_ln691_102_fu_5613_p1 = add_ln691_116_fu_5607_p2;

assign zext_ln691_103_fu_5623_p1 = add_ln691_117_fu_5617_p2;

assign zext_ln691_104_fu_5633_p1 = add_ln691_118_fu_5627_p2;

assign zext_ln691_105_fu_5643_p1 = add_ln691_119_fu_5637_p2;

assign zext_ln691_106_fu_5653_p1 = add_ln691_120_fu_5647_p2;

assign zext_ln691_107_fu_5663_p1 = add_ln691_121_fu_5657_p2;

assign zext_ln691_108_fu_5679_p1 = add_ln691_123_fu_5673_p2;

assign zext_ln691_109_fu_5689_p1 = add_ln691_124_fu_5683_p2;

assign zext_ln691_10_fu_2335_p1 = add_ln691_11_fu_2329_p2;

assign zext_ln691_110_fu_5699_p1 = add_ln691_125_fu_5693_p2;

assign zext_ln691_111_fu_5709_p1 = add_ln691_126_fu_5703_p2;

assign zext_ln691_11_fu_2345_p1 = add_ln691_12_fu_2339_p2;

assign zext_ln691_12_fu_2355_p1 = add_ln691_13_fu_2349_p2;

assign zext_ln691_13_fu_2371_p1 = add_ln691_15_fu_2365_p2;

assign zext_ln691_14_fu_2381_p1 = add_ln691_16_fu_2375_p2;

assign zext_ln691_15_fu_2391_p1 = add_ln691_17_fu_2385_p2;

assign zext_ln691_16_fu_2401_p1 = add_ln691_18_fu_2395_p2;

assign zext_ln691_17_fu_2411_p1 = add_ln691_19_fu_2405_p2;

assign zext_ln691_18_fu_2421_p1 = add_ln691_20_fu_2415_p2;

assign zext_ln691_19_fu_2431_p1 = add_ln691_21_fu_2425_p2;

assign zext_ln691_1_fu_2227_p1 = xor_ln870_63_fu_2221_p2;

assign zext_ln691_20_fu_2441_p1 = add_ln691_22_fu_2435_p2;

assign zext_ln691_21_fu_2451_p1 = add_ln691_23_fu_2445_p2;

assign zext_ln691_22_fu_2461_p1 = add_ln691_24_fu_2455_p2;

assign zext_ln691_23_fu_2471_p1 = add_ln691_25_fu_2465_p2;

assign zext_ln691_24_fu_2487_p1 = add_ln691_27_fu_2481_p2;

assign zext_ln691_25_fu_2497_p1 = add_ln691_28_fu_2491_p2;

assign zext_ln691_26_fu_2507_p1 = add_ln691_29_fu_2501_p2;

assign zext_ln691_27_fu_2517_p1 = add_ln691_30_fu_2511_p2;

assign zext_ln691_28_fu_3259_p1 = xor_ln870_123_fu_3253_p2;

assign zext_ln691_29_fu_3291_p1 = xor_ln870_127_fu_3285_p2;

assign zext_ln691_2_fu_2243_p1 = add_ln691_1_fu_2237_p2;

assign zext_ln691_30_fu_3307_p1 = add_ln691_33_fu_3301_p2;

assign zext_ln691_31_fu_3323_p1 = add_ln691_35_fu_3317_p2;

assign zext_ln691_32_fu_3333_p1 = add_ln691_36_fu_3327_p2;

assign zext_ln691_33_fu_3343_p1 = add_ln691_37_fu_3337_p2;

assign zext_ln691_34_fu_3359_p1 = add_ln691_39_fu_3353_p2;

assign zext_ln691_35_fu_3369_p1 = add_ln691_40_fu_3363_p2;

assign zext_ln691_36_fu_3379_p1 = add_ln691_41_fu_3373_p2;

assign zext_ln691_37_fu_3389_p1 = add_ln691_42_fu_3383_p2;

assign zext_ln691_38_fu_3399_p1 = add_ln691_43_fu_3393_p2;

assign zext_ln691_39_fu_3409_p1 = add_ln691_44_fu_3403_p2;

assign zext_ln691_3_fu_2259_p1 = add_ln691_3_fu_2253_p2;

assign zext_ln691_40_fu_3419_p1 = add_ln691_45_fu_3413_p2;

assign zext_ln691_41_fu_3435_p1 = add_ln691_47_fu_3429_p2;

assign zext_ln691_42_fu_3445_p1 = add_ln691_48_fu_3439_p2;

assign zext_ln691_43_fu_3455_p1 = add_ln691_49_fu_3449_p2;

assign zext_ln691_44_fu_3465_p1 = add_ln691_50_fu_3459_p2;

assign zext_ln691_45_fu_3475_p1 = add_ln691_51_fu_3469_p2;

assign zext_ln691_46_fu_3485_p1 = add_ln691_52_fu_3479_p2;

assign zext_ln691_47_fu_3495_p1 = add_ln691_53_fu_3489_p2;

assign zext_ln691_48_fu_3505_p1 = add_ln691_54_fu_3499_p2;

assign zext_ln691_49_fu_3515_p1 = add_ln691_55_fu_3509_p2;

assign zext_ln691_4_fu_2269_p1 = add_ln691_4_fu_2263_p2;

assign zext_ln691_50_fu_3525_p1 = add_ln691_56_fu_3519_p2;

assign zext_ln691_51_fu_3535_p1 = add_ln691_57_fu_3529_p2;

assign zext_ln691_52_fu_3551_p1 = add_ln691_59_fu_3545_p2;

assign zext_ln691_53_fu_3561_p1 = add_ln691_60_fu_3555_p2;

assign zext_ln691_54_fu_3571_p1 = add_ln691_61_fu_3565_p2;

assign zext_ln691_55_fu_3581_p1 = add_ln691_62_fu_3575_p2;

assign zext_ln691_56_fu_4323_p1 = xor_ln870_187_fu_4317_p2;

assign zext_ln691_57_fu_4355_p1 = xor_ln870_191_fu_4349_p2;

assign zext_ln691_58_fu_4371_p1 = add_ln691_65_fu_4365_p2;

assign zext_ln691_59_fu_4387_p1 = add_ln691_67_fu_4381_p2;

assign zext_ln691_5_fu_2279_p1 = add_ln691_5_fu_2273_p2;

assign zext_ln691_60_fu_4397_p1 = add_ln691_68_fu_4391_p2;

assign zext_ln691_61_fu_4407_p1 = add_ln691_69_fu_4401_p2;

assign zext_ln691_62_fu_4423_p1 = add_ln691_71_fu_4417_p2;

assign zext_ln691_63_fu_4433_p1 = add_ln691_72_fu_4427_p2;

assign zext_ln691_64_fu_4443_p1 = add_ln691_73_fu_4437_p2;

assign zext_ln691_65_fu_4453_p1 = add_ln691_74_fu_4447_p2;

assign zext_ln691_66_fu_4463_p1 = add_ln691_75_fu_4457_p2;

assign zext_ln691_67_fu_4473_p1 = add_ln691_76_fu_4467_p2;

assign zext_ln691_68_fu_4483_p1 = add_ln691_77_fu_4477_p2;

assign zext_ln691_69_fu_4499_p1 = add_ln691_79_fu_4493_p2;

assign zext_ln691_6_fu_2295_p1 = add_ln691_7_fu_2289_p2;

assign zext_ln691_70_fu_4509_p1 = add_ln691_80_fu_4503_p2;

assign zext_ln691_71_fu_4519_p1 = add_ln691_81_fu_4513_p2;

assign zext_ln691_72_fu_4529_p1 = add_ln691_82_fu_4523_p2;

assign zext_ln691_73_fu_4539_p1 = add_ln691_83_fu_4533_p2;

assign zext_ln691_74_fu_4549_p1 = add_ln691_84_fu_4543_p2;

assign zext_ln691_75_fu_4559_p1 = add_ln691_85_fu_4553_p2;

assign zext_ln691_76_fu_4569_p1 = add_ln691_86_fu_4563_p2;

assign zext_ln691_77_fu_4579_p1 = add_ln691_87_fu_4573_p2;

assign zext_ln691_78_fu_4589_p1 = add_ln691_88_fu_4583_p2;

assign zext_ln691_79_fu_4599_p1 = add_ln691_89_fu_4593_p2;

assign zext_ln691_7_fu_2305_p1 = add_ln691_8_fu_2299_p2;

assign zext_ln691_80_fu_4615_p1 = add_ln691_91_fu_4609_p2;

assign zext_ln691_81_fu_4625_p1 = add_ln691_92_fu_4619_p2;

assign zext_ln691_82_fu_4635_p1 = add_ln691_93_fu_4629_p2;

assign zext_ln691_83_fu_4645_p1 = add_ln691_94_fu_4639_p2;

assign zext_ln691_84_fu_5387_p1 = xor_ln870_251_fu_5381_p2;

assign zext_ln691_85_fu_5419_p1 = xor_ln870_255_fu_5413_p2;

assign zext_ln691_86_fu_5435_p1 = add_ln691_97_fu_5429_p2;

assign zext_ln691_87_fu_5451_p1 = add_ln691_99_fu_5445_p2;

assign zext_ln691_88_fu_5461_p1 = add_ln691_100_fu_5455_p2;

assign zext_ln691_89_fu_5471_p1 = add_ln691_101_fu_5465_p2;

assign zext_ln691_8_fu_2315_p1 = add_ln691_9_fu_2309_p2;

assign zext_ln691_90_fu_5487_p1 = add_ln691_103_fu_5481_p2;

assign zext_ln691_91_fu_5497_p1 = add_ln691_104_fu_5491_p2;

assign zext_ln691_92_fu_5507_p1 = add_ln691_105_fu_5501_p2;

assign zext_ln691_93_fu_5517_p1 = add_ln691_106_fu_5511_p2;

assign zext_ln691_94_fu_5527_p1 = add_ln691_107_fu_5521_p2;

assign zext_ln691_95_fu_5537_p1 = add_ln691_108_fu_5531_p2;

assign zext_ln691_96_fu_5547_p1 = add_ln691_109_fu_5541_p2;

assign zext_ln691_97_fu_5563_p1 = add_ln691_111_fu_5557_p2;

assign zext_ln691_98_fu_5573_p1 = add_ln691_112_fu_5567_p2;

assign zext_ln691_99_fu_5583_p1 = add_ln691_113_fu_5577_p2;

assign zext_ln691_9_fu_2325_p1 = add_ln691_10_fu_2319_p2;

assign zext_ln691_fu_2179_p1 = xor_ln870_59_fu_2173_p2;

assign zext_ln820_10_fu_1723_p1 = xor_ln870_21_fu_1717_p2;

assign zext_ln820_11_fu_1747_p1 = xor_ln870_23_fu_1741_p2;

assign zext_ln820_12_fu_1771_p1 = xor_ln870_25_fu_1765_p2;

assign zext_ln820_13_fu_1795_p1 = xor_ln870_27_fu_1789_p2;

assign zext_ln820_14_fu_1819_p1 = xor_ln870_29_fu_1813_p2;

assign zext_ln820_15_fu_1843_p1 = xor_ln870_31_fu_1837_p2;

assign zext_ln820_16_fu_1867_p1 = xor_ln870_33_fu_1861_p2;

assign zext_ln820_17_fu_1891_p1 = xor_ln870_35_fu_1885_p2;

assign zext_ln820_18_fu_1915_p1 = xor_ln870_37_fu_1909_p2;

assign zext_ln820_19_fu_1939_p1 = xor_ln870_39_fu_1933_p2;

assign zext_ln820_1_fu_1507_p1 = xor_ln870_3_fu_1501_p2;

assign zext_ln820_20_fu_1963_p1 = xor_ln870_41_fu_1957_p2;

assign zext_ln820_21_fu_1987_p1 = xor_ln870_43_fu_1981_p2;

assign zext_ln820_22_fu_2011_p1 = xor_ln870_45_fu_2005_p2;

assign zext_ln820_23_fu_2035_p1 = xor_ln870_47_fu_2029_p2;

assign zext_ln820_24_fu_2059_p1 = xor_ln870_49_fu_2053_p2;

assign zext_ln820_25_fu_2083_p1 = xor_ln870_51_fu_2077_p2;

assign zext_ln820_26_fu_2107_p1 = xor_ln870_53_fu_2101_p2;

assign zext_ln820_27_fu_2131_p1 = xor_ln870_55_fu_2125_p2;

assign zext_ln820_28_fu_2155_p1 = xor_ln870_57_fu_2149_p2;

assign zext_ln820_29_fu_2203_p1 = xor_ln870_61_fu_2197_p2;

assign zext_ln820_2_fu_1531_p1 = xor_ln870_5_fu_1525_p2;

assign zext_ln820_3_fu_1555_p1 = xor_ln870_7_fu_1549_p2;

assign zext_ln820_4_fu_1579_p1 = xor_ln870_9_fu_1573_p2;

assign zext_ln820_5_fu_1603_p1 = xor_ln870_11_fu_1597_p2;

assign zext_ln820_6_fu_1627_p1 = xor_ln870_13_fu_1621_p2;

assign zext_ln820_7_fu_1651_p1 = xor_ln870_15_fu_1645_p2;

assign zext_ln820_8_fu_1675_p1 = xor_ln870_17_fu_1669_p2;

assign zext_ln820_9_fu_1699_p1 = xor_ln870_19_fu_1693_p2;

assign zext_ln820_fu_1483_p1 = xor_ln870_1_fu_1477_p2;

assign zext_ln870_10_fu_2955_p1 = xor_ln870_85_fu_2949_p2;

assign zext_ln870_11_fu_2971_p1 = xor_ln870_87_fu_2965_p2;

assign zext_ln870_12_fu_2987_p1 = xor_ln870_89_fu_2981_p2;

assign zext_ln870_13_fu_3003_p1 = xor_ln870_91_fu_2997_p2;

assign zext_ln870_14_fu_3019_p1 = xor_ln870_93_fu_3013_p2;

assign zext_ln870_15_fu_3035_p1 = xor_ln870_95_fu_3029_p2;

assign zext_ln870_16_fu_3051_p1 = xor_ln870_97_fu_3045_p2;

assign zext_ln870_17_fu_3067_p1 = xor_ln870_99_fu_3061_p2;

assign zext_ln870_18_fu_3083_p1 = xor_ln870_101_fu_3077_p2;

assign zext_ln870_19_fu_3099_p1 = xor_ln870_103_fu_3093_p2;

assign zext_ln870_1_fu_2811_p1 = xor_ln870_67_fu_2805_p2;

assign zext_ln870_20_fu_3115_p1 = xor_ln870_105_fu_3109_p2;

assign zext_ln870_21_fu_3131_p1 = xor_ln870_107_fu_3125_p2;

assign zext_ln870_22_fu_3147_p1 = xor_ln870_109_fu_3141_p2;

assign zext_ln870_23_fu_3163_p1 = xor_ln870_111_fu_3157_p2;

assign zext_ln870_24_fu_3179_p1 = xor_ln870_113_fu_3173_p2;

assign zext_ln870_25_fu_3195_p1 = xor_ln870_115_fu_3189_p2;

assign zext_ln870_26_fu_3211_p1 = xor_ln870_117_fu_3205_p2;

assign zext_ln870_27_fu_3227_p1 = xor_ln870_119_fu_3221_p2;

assign zext_ln870_28_fu_3243_p1 = xor_ln870_121_fu_3237_p2;

assign zext_ln870_29_fu_3275_p1 = xor_ln870_125_fu_3269_p2;

assign zext_ln870_2_fu_2827_p1 = xor_ln870_69_fu_2821_p2;

assign zext_ln870_30_fu_3859_p1 = xor_ln870_129_fu_3853_p2;

assign zext_ln870_31_fu_3875_p1 = xor_ln870_131_fu_3869_p2;

assign zext_ln870_32_fu_3891_p1 = xor_ln870_133_fu_3885_p2;

assign zext_ln870_33_fu_3907_p1 = xor_ln870_135_fu_3901_p2;

assign zext_ln870_34_fu_3923_p1 = xor_ln870_137_fu_3917_p2;

assign zext_ln870_35_fu_3939_p1 = xor_ln870_139_fu_3933_p2;

assign zext_ln870_36_fu_3955_p1 = xor_ln870_141_fu_3949_p2;

assign zext_ln870_37_fu_3971_p1 = xor_ln870_143_fu_3965_p2;

assign zext_ln870_38_fu_3987_p1 = xor_ln870_145_fu_3981_p2;

assign zext_ln870_39_fu_4003_p1 = xor_ln870_147_fu_3997_p2;

assign zext_ln870_3_fu_2843_p1 = xor_ln870_71_fu_2837_p2;

assign zext_ln870_40_fu_4019_p1 = xor_ln870_149_fu_4013_p2;

assign zext_ln870_41_fu_4035_p1 = xor_ln870_151_fu_4029_p2;

assign zext_ln870_42_fu_4051_p1 = xor_ln870_153_fu_4045_p2;

assign zext_ln870_43_fu_4067_p1 = xor_ln870_155_fu_4061_p2;

assign zext_ln870_44_fu_4083_p1 = xor_ln870_157_fu_4077_p2;

assign zext_ln870_45_fu_4099_p1 = xor_ln870_159_fu_4093_p2;

assign zext_ln870_46_fu_4115_p1 = xor_ln870_161_fu_4109_p2;

assign zext_ln870_47_fu_4131_p1 = xor_ln870_163_fu_4125_p2;

assign zext_ln870_48_fu_4147_p1 = xor_ln870_165_fu_4141_p2;

assign zext_ln870_49_fu_4163_p1 = xor_ln870_167_fu_4157_p2;

assign zext_ln870_4_fu_2859_p1 = xor_ln870_73_fu_2853_p2;

assign zext_ln870_50_fu_4179_p1 = xor_ln870_169_fu_4173_p2;

assign zext_ln870_51_fu_4195_p1 = xor_ln870_171_fu_4189_p2;

assign zext_ln870_52_fu_4211_p1 = xor_ln870_173_fu_4205_p2;

assign zext_ln870_53_fu_4227_p1 = xor_ln870_175_fu_4221_p2;

assign zext_ln870_54_fu_4243_p1 = xor_ln870_177_fu_4237_p2;

assign zext_ln870_55_fu_4259_p1 = xor_ln870_179_fu_4253_p2;

assign zext_ln870_56_fu_4275_p1 = xor_ln870_181_fu_4269_p2;

assign zext_ln870_57_fu_4291_p1 = xor_ln870_183_fu_4285_p2;

assign zext_ln870_58_fu_4307_p1 = xor_ln870_185_fu_4301_p2;

assign zext_ln870_59_fu_4339_p1 = xor_ln870_189_fu_4333_p2;

assign zext_ln870_5_fu_2875_p1 = xor_ln870_75_fu_2869_p2;

assign zext_ln870_60_fu_4923_p1 = xor_ln870_193_fu_4917_p2;

assign zext_ln870_61_fu_4939_p1 = xor_ln870_195_fu_4933_p2;

assign zext_ln870_62_fu_4955_p1 = xor_ln870_197_fu_4949_p2;

assign zext_ln870_63_fu_4971_p1 = xor_ln870_199_fu_4965_p2;

assign zext_ln870_64_fu_4987_p1 = xor_ln870_201_fu_4981_p2;

assign zext_ln870_65_fu_5003_p1 = xor_ln870_203_fu_4997_p2;

assign zext_ln870_66_fu_5019_p1 = xor_ln870_205_fu_5013_p2;

assign zext_ln870_67_fu_5035_p1 = xor_ln870_207_fu_5029_p2;

assign zext_ln870_68_fu_5051_p1 = xor_ln870_209_fu_5045_p2;

assign zext_ln870_69_fu_5067_p1 = xor_ln870_211_fu_5061_p2;

assign zext_ln870_6_fu_2891_p1 = xor_ln870_77_fu_2885_p2;

assign zext_ln870_70_fu_5083_p1 = xor_ln870_213_fu_5077_p2;

assign zext_ln870_71_fu_5099_p1 = xor_ln870_215_fu_5093_p2;

assign zext_ln870_72_fu_5115_p1 = xor_ln870_217_fu_5109_p2;

assign zext_ln870_73_fu_5131_p1 = xor_ln870_219_fu_5125_p2;

assign zext_ln870_74_fu_5147_p1 = xor_ln870_221_fu_5141_p2;

assign zext_ln870_75_fu_5163_p1 = xor_ln870_223_fu_5157_p2;

assign zext_ln870_76_fu_5179_p1 = xor_ln870_225_fu_5173_p2;

assign zext_ln870_77_fu_5195_p1 = xor_ln870_227_fu_5189_p2;

assign zext_ln870_78_fu_5211_p1 = xor_ln870_229_fu_5205_p2;

assign zext_ln870_79_fu_5227_p1 = xor_ln870_231_fu_5221_p2;

assign zext_ln870_7_fu_2907_p1 = xor_ln870_79_fu_2901_p2;

assign zext_ln870_80_fu_5243_p1 = xor_ln870_233_fu_5237_p2;

assign zext_ln870_81_fu_5259_p1 = xor_ln870_235_fu_5253_p2;

assign zext_ln870_82_fu_5275_p1 = xor_ln870_237_fu_5269_p2;

assign zext_ln870_83_fu_5291_p1 = xor_ln870_239_fu_5285_p2;

assign zext_ln870_84_fu_5307_p1 = xor_ln870_241_fu_5301_p2;

assign zext_ln870_85_fu_5323_p1 = xor_ln870_243_fu_5317_p2;

assign zext_ln870_86_fu_5339_p1 = xor_ln870_245_fu_5333_p2;

assign zext_ln870_87_fu_5355_p1 = xor_ln870_247_fu_5349_p2;

assign zext_ln870_88_fu_5371_p1 = xor_ln870_249_fu_5365_p2;

assign zext_ln870_89_fu_5403_p1 = xor_ln870_253_fu_5397_p2;

assign zext_ln870_8_fu_2923_p1 = xor_ln870_81_fu_2917_p2;

assign zext_ln870_9_fu_2939_p1 = xor_ln870_83_fu_2933_p2;

assign zext_ln870_fu_2795_p1 = xor_ln870_65_fu_2789_p2;

assign zext_ln890_fu_5814_p1 = threshs_m_thresholds_V_2_0_q0;

endmodule //StreamingFCLayer_Batch_4_Matrix_Vector_Activate_Stream_Batch_1152u_256u_32u_4u_Recast_XnorMul_Slice_ap_uint_1_1u_Identity_ap_uint_1_ap_uint_32_ap_uint_4_ThresholdsActivation_64u_4u_1u_ap_uint_11_ap_uint_1_0_less_equal_ap_uint_11_ap_resource_lut_s
