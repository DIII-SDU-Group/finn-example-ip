// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="StreamingMaxPool_Batch_5_StreamingMaxPool_Batch_5,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.930000,HLS_SYN_LAT=105,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4645,HLS_SYN_LUT=1018,HLS_VERSION=2020_2}" *)

module StreamingMaxPool_Batch_5 (
        ap_clk,
        ap_rst_n,
        in0_V_TDATA,
        in0_V_TVALID,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state9 = 7'd64;

input   ap_clk;
input   ap_rst_n;
input  [255:0] in0_V_TDATA;
input   in0_V_TVALID;
output   in0_V_TREADY;
output  [255:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;

 reg    ap_rst_n_inv;
reg    in0_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln78_fu_431_p2;
wire    ap_CS_fsm_state4;
reg    out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln89_reg_560;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln89_reg_560_pp1_iter1_reg;
reg   [255:0] buf_V_3_4_reg_278;
reg   [255:0] buf_V_2_4_reg_290;
reg   [255:0] buf_V_1_4_reg_302;
reg   [255:0] buf_V_0_4_reg_314;
reg   [2:0] outpix_reg_326;
reg   [255:0] buf_V_3_5_reg_337;
reg   [255:0] buf_V_2_5_reg_356;
reg   [255:0] buf_V_1_5_reg_375;
reg   [255:0] buf_V_0_5_reg_394;
wire   [2:0] yp_1_fu_413_p2;
reg   [2:0] yp_1_reg_518;
wire    ap_CS_fsm_state2;
wire    regslice_both_out_V_U_apdone_blk;
wire   [0:0] icmp_ln77_fu_419_p2;
wire   [3:0] add_ln78_fu_425_p2;
reg   [3:0] add_ln78_reg_527;
reg    ap_block_state3;
wire   [2:0] select_ln78_fu_443_p3;
reg   [2:0] select_ln78_reg_535;
reg   [255:0] in0_V_read_reg_540;
wire   [1:0] trunc_ln709_fu_451_p1;
reg   [1:0] trunc_ln709_reg_545;
wire   [2:0] add_ln79_fu_483_p2;
wire   [2:0] add_ln89_fu_488_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_state7_io;
reg    ap_block_state8_pp1_stage0_iter2;
reg    ap_block_state8_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln89_fu_494_p2;
wire   [1:0] trunc_ln91_fu_500_p1;
wire   [255:0] tmp_1_fu_504_p6;
reg   [255:0] tmp_1_reg_568;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg   [255:0] buf_V_3_0_reg_81;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state9;
reg   [255:0] buf_V_2_0_reg_93;
reg   [255:0] buf_V_1_0_reg_105;
reg   [255:0] buf_V_0_0_reg_117;
reg   [2:0] yp_reg_129;
reg   [3:0] indvar_flatten_reg_140;
reg   [255:0] buf_V_3_2_reg_151;
reg   [255:0] ap_phi_mux_buf_V_3_3_phi_fu_210_p8;
reg   [255:0] buf_V_2_2_reg_162;
reg   [255:0] ap_phi_mux_buf_V_2_3_phi_fu_228_p8;
reg   [255:0] buf_V_1_2_reg_173;
reg   [255:0] ap_phi_mux_buf_V_1_3_phi_fu_246_p8;
reg   [255:0] buf_V_0_21_reg_184;
reg   [255:0] ap_phi_mux_buf_V_0_3_phi_fu_264_p8;
reg   [2:0] xp_reg_195;
wire   [255:0] buf_V_0_fu_473_p2;
reg   [255:0] ap_phi_mux_buf_V_3_4_phi_fu_282_p4;
reg   [255:0] ap_phi_mux_buf_V_2_4_phi_fu_294_p4;
reg   [255:0] ap_phi_mux_buf_V_1_4_phi_fu_306_p4;
reg   [255:0] ap_phi_mux_buf_V_0_4_phi_fu_318_p4;
wire   [255:0] ap_phi_reg_pp1_iter0_buf_V_3_5_reg_337;
wire   [255:0] ap_phi_reg_pp1_iter0_buf_V_2_5_reg_356;
wire   [255:0] ap_phi_reg_pp1_iter0_buf_V_1_5_reg_375;
wire   [255:0] ap_phi_reg_pp1_iter0_buf_V_0_5_reg_394;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln79_fu_437_p2;
wire   [255:0] tmp_2_fu_455_p6;
wire   [255:0] or_ln709_fu_468_p2;
wire   [1:0] tmp_1_fu_504_p5;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in0_V_U_apdone_blk;
wire   [255:0] in0_V_TDATA_int_regslice;
wire    in0_V_TVALID_int_regslice;
reg    in0_V_TREADY_int_regslice;
wire    regslice_both_in0_V_U_ack_in;
reg    out_V_TVALID_int_regslice;
wire    out_V_TREADY_int_regslice;
wire    regslice_both_out_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

StreamingMaxPool_Batch_5_mux_42_256_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 256 ),
    .din1_WIDTH( 256 ),
    .din2_WIDTH( 256 ),
    .din3_WIDTH( 256 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 256 ))
mux_42_256_1_1_U1(
    .din0(buf_V_0_21_reg_184),
    .din1(buf_V_1_2_reg_173),
    .din2(buf_V_2_2_reg_162),
    .din3(buf_V_3_2_reg_151),
    .din4(trunc_ln709_reg_545),
    .dout(tmp_2_fu_455_p6)
);

StreamingMaxPool_Batch_5_mux_42_256_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 256 ),
    .din1_WIDTH( 256 ),
    .din2_WIDTH( 256 ),
    .din3_WIDTH( 256 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 256 ))
mux_42_256_1_1_U2(
    .din0(ap_phi_mux_buf_V_0_4_phi_fu_318_p4),
    .din1(ap_phi_mux_buf_V_1_4_phi_fu_306_p4),
    .din2(ap_phi_mux_buf_V_2_4_phi_fu_294_p4),
    .din3(ap_phi_mux_buf_V_3_4_phi_fu_282_p4),
    .din4(tmp_1_fu_504_p5),
    .dout(tmp_1_fu_504_p6)
);

StreamingMaxPool_Batch_5_regslice_both #(
    .DataWidth( 256 ))
regslice_both_in0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in0_V_TDATA),
    .vld_in(in0_V_TVALID),
    .ack_in(regslice_both_in0_V_U_ack_in),
    .data_out(in0_V_TDATA_int_regslice),
    .vld_out(in0_V_TVALID_int_regslice),
    .ack_out(in0_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_in0_V_U_apdone_blk)
);

StreamingMaxPool_Batch_5_regslice_both #(
    .DataWidth( 256 ))
regslice_both_out_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_1_reg_568),
    .vld_in(out_V_TVALID_int_regslice),
    .ack_in(out_V_TREADY_int_regslice),
    .data_out(out_V_TDATA),
    .vld_out(regslice_both_out_V_U_vld_out),
    .ack_out(out_V_TREADY),
    .apdone_blk(regslice_both_out_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_V_0_0_reg_117 <= buf_V_0_4_reg_314;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        buf_V_0_0_reg_117 <= 256'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_V_0_21_reg_184 <= ap_phi_mux_buf_V_0_3_phi_fu_264_p8;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_V_0_21_reg_184 <= buf_V_0_0_reg_117;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_0_4_reg_314 <= buf_V_0_21_reg_184;
    end else if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_4_reg_314 <= buf_V_0_5_reg_394;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd0) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_0_5_reg_394 <= 256'd0;
    end else if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd1) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd2) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd3) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        buf_V_0_5_reg_394 <= ap_phi_mux_buf_V_0_4_phi_fu_318_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_0_5_reg_394 <= ap_phi_reg_pp1_iter0_buf_V_0_5_reg_394;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_V_1_0_reg_105 <= buf_V_1_4_reg_302;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        buf_V_1_0_reg_105 <= 256'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_V_1_2_reg_173 <= ap_phi_mux_buf_V_1_3_phi_fu_246_p8;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_V_1_2_reg_173 <= buf_V_1_0_reg_105;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_1_4_reg_302 <= buf_V_1_2_reg_173;
    end else if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_4_reg_302 <= buf_V_1_5_reg_375;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd1) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_1_5_reg_375 <= 256'd0;
    end else if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd0) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd2) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd3) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        buf_V_1_5_reg_375 <= ap_phi_mux_buf_V_1_4_phi_fu_306_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_1_5_reg_375 <= ap_phi_reg_pp1_iter0_buf_V_1_5_reg_375;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_V_2_0_reg_93 <= buf_V_2_4_reg_290;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        buf_V_2_0_reg_93 <= 256'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_V_2_2_reg_162 <= ap_phi_mux_buf_V_2_3_phi_fu_228_p8;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_V_2_2_reg_162 <= buf_V_2_0_reg_93;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_2_4_reg_290 <= buf_V_2_2_reg_162;
    end else if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_2_4_reg_290 <= buf_V_2_5_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd2) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_2_5_reg_356 <= 256'd0;
    end else if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd0) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd1) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd3) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        buf_V_2_5_reg_356 <= ap_phi_mux_buf_V_2_4_phi_fu_294_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_2_5_reg_356 <= ap_phi_reg_pp1_iter0_buf_V_2_5_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_V_3_0_reg_81 <= buf_V_3_4_reg_278;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        buf_V_3_0_reg_81 <= 256'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_V_3_2_reg_151 <= ap_phi_mux_buf_V_3_3_phi_fu_210_p8;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_V_3_2_reg_151 <= buf_V_3_0_reg_81;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_3_4_reg_278 <= buf_V_3_2_reg_151;
    end else if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_3_4_reg_278 <= buf_V_3_5_reg_337;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd0) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd1) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd2) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        buf_V_3_5_reg_337 <= ap_phi_mux_buf_V_3_4_phi_fu_282_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln91_fu_500_p1 == 2'd3) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_3_5_reg_337 <= 256'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_V_3_5_reg_337 <= ap_phi_reg_pp1_iter0_buf_V_3_5_reg_337;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvar_flatten_reg_140 <= add_ln78_reg_527;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_140 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        outpix_reg_326 <= 3'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln89_fu_494_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        outpix_reg_326 <= add_ln89_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        xp_reg_195 <= add_ln79_fu_483_p2;
    end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        xp_reg_195 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        yp_reg_129 <= yp_1_reg_518;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        yp_reg_129 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in0_V_TVALID_int_regslice == 1'b0) & (icmp_ln78_fu_431_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln78_reg_527 <= add_ln78_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln89_reg_560 <= icmp_ln89_fu_494_p2;
        icmp_ln89_reg_560_pp1_iter1_reg <= icmp_ln89_reg_560;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in0_V_read_reg_540 <= in0_V_TDATA_int_regslice;
        select_ln78_reg_535 <= select_ln78_fu_443_p3;
        trunc_ln709_reg_545 <= trunc_ln709_fu_451_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln89_fu_494_p2 == 1'd0))) begin
        tmp_1_reg_568 <= tmp_1_fu_504_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        yp_1_reg_518 <= yp_1_fu_413_p2;
    end
end

always @ (*) begin
    if ((icmp_ln89_fu_494_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd0))) begin
        ap_phi_mux_buf_V_0_3_phi_fu_264_p8 = buf_V_0_fu_473_p2;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd1)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd2)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd3)))) begin
        ap_phi_mux_buf_V_0_3_phi_fu_264_p8 = buf_V_0_21_reg_184;
    end else begin
        ap_phi_mux_buf_V_0_3_phi_fu_264_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_buf_V_0_4_phi_fu_318_p4 = buf_V_0_5_reg_394;
    end else begin
        ap_phi_mux_buf_V_0_4_phi_fu_318_p4 = buf_V_0_4_reg_314;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd1))) begin
        ap_phi_mux_buf_V_1_3_phi_fu_246_p8 = buf_V_0_fu_473_p2;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd2)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd3)))) begin
        ap_phi_mux_buf_V_1_3_phi_fu_246_p8 = buf_V_1_2_reg_173;
    end else begin
        ap_phi_mux_buf_V_1_3_phi_fu_246_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_buf_V_1_4_phi_fu_306_p4 = buf_V_1_5_reg_375;
    end else begin
        ap_phi_mux_buf_V_1_4_phi_fu_306_p4 = buf_V_1_4_reg_302;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd2))) begin
        ap_phi_mux_buf_V_2_3_phi_fu_228_p8 = buf_V_0_fu_473_p2;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd1)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd3)))) begin
        ap_phi_mux_buf_V_2_3_phi_fu_228_p8 = buf_V_2_2_reg_162;
    end else begin
        ap_phi_mux_buf_V_2_3_phi_fu_228_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_buf_V_2_4_phi_fu_294_p4 = buf_V_2_5_reg_356;
    end else begin
        ap_phi_mux_buf_V_2_4_phi_fu_294_p4 = buf_V_2_4_reg_290;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd1)) | ((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd2)))) begin
        ap_phi_mux_buf_V_3_3_phi_fu_210_p8 = buf_V_3_2_reg_151;
    end else if (((1'b1 == ap_CS_fsm_state4) & (trunc_ln709_reg_545 == 2'd3))) begin
        ap_phi_mux_buf_V_3_3_phi_fu_210_p8 = buf_V_0_fu_473_p2;
    end else begin
        ap_phi_mux_buf_V_3_3_phi_fu_210_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_buf_V_3_4_phi_fu_282_p4 = buf_V_3_5_reg_337;
    end else begin
        ap_phi_mux_buf_V_3_4_phi_fu_282_p4 = buf_V_3_4_reg_278;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln78_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID_int_regslice;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | (~((in0_V_TVALID_int_regslice == 1'b0) & (icmp_ln78_fu_431_p2 == 1'd0)) & (icmp_ln78_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        in0_V_TREADY_int_regslice = 1'b1;
    end else begin
        in0_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        out_V_TDATA_blk_n = out_V_TREADY_int_regslice;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_560 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln77_fu_419_p2 == 1'd1) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln77_fu_419_p2 == 1'd0) & (regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((in0_V_TVALID_int_regslice == 1'b0) & (icmp_ln78_fu_431_p2 == 1'd0)) & (icmp_ln78_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((in0_V_TVALID_int_regslice == 1'b0) & (icmp_ln78_fu_431_p2 == 1'd0)) & (icmp_ln78_fu_431_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((in0_V_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln89_fu_494_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln89_fu_494_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_425_p2 = (indvar_flatten_reg_140 + 4'd1);

assign add_ln79_fu_483_p2 = (select_ln78_reg_535 + 3'd1);

assign add_ln89_fu_488_p2 = (outpix_reg_326 + 3'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((icmp_ln89_reg_560 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln89_reg_560 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln89_reg_560 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state3 = ((in0_V_TVALID_int_regslice == 1'b0) & (icmp_ln78_fu_431_p2 == 1'd0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((icmp_ln89_reg_560 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((icmp_ln89_reg_560 == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_io = ((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp1_stage0_iter2 = ((icmp_ln89_reg_560_pp1_iter1_reg == 1'd0) & (out_V_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_buf_V_0_5_reg_394 = 'bx;

assign ap_phi_reg_pp1_iter0_buf_V_1_5_reg_375 = 'bx;

assign ap_phi_reg_pp1_iter0_buf_V_2_5_reg_356 = 'bx;

assign ap_phi_reg_pp1_iter0_buf_V_3_5_reg_337 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign buf_V_0_fu_473_p2 = (or_ln709_fu_468_p2 | in0_V_TDATA_int_regslice);

assign icmp_ln77_fu_419_p2 = ((yp_reg_129 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_431_p2 = ((indvar_flatten_reg_140 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_437_p2 = ((xp_reg_195 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_494_p2 = ((outpix_reg_326 == 3'd4) ? 1'b1 : 1'b0);

assign in0_V_TREADY = regslice_both_in0_V_U_ack_in;

assign or_ln709_fu_468_p2 = (tmp_2_fu_455_p6 | in0_V_read_reg_540);

assign out_V_TVALID = regslice_both_out_V_U_vld_out;

assign select_ln78_fu_443_p3 = ((icmp_ln79_fu_437_p2[0:0] == 1'b1) ? 3'd0 : xp_reg_195);

assign tmp_1_fu_504_p5 = outpix_reg_326[1:0];

assign trunc_ln709_fu_451_p1 = select_ln78_fu_443_p3[1:0];

assign trunc_ln91_fu_500_p1 = outpix_reg_326[1:0];

assign yp_1_fu_413_p2 = (yp_reg_129 + 3'd1);

endmodule //StreamingMaxPool_Batch_5
