// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_6_Matrix_Vector_Activate_Stream_Batch_2304u_256u_32u_1u_Recast_XnorMul_Slice_ap_uint_1_1u_Identity_ap_uint_1_ap_uint_32_ap_uint_1_ThresholdsActivation_256u_1u_1u_ap_uint_12_ap_uint_1_0_less_equal_ap_uint_12_ap_resource_lut_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TDATA,
        in0_V_TVALID,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY,
        weights_V_TDATA,
        weights_V_TVALID,
        weights_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in0_V_TDATA;
input   in0_V_TVALID;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;
input  [31:0] weights_V_TDATA;
input   weights_V_TVALID;
output   weights_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in0_V_TREADY;
reg out_V_TVALID;
reg weights_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] threshs_m_thresholds_V_0_0_address0;
reg    threshs_m_thresholds_V_0_0_ce0;
wire   [10:0] threshs_m_thresholds_V_0_0_q0;
reg    in0_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_838_p2;
wire   [0:0] icmp_ln252_fu_847_p2;
reg    out_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln289_reg_3478;
reg    weights_V_TDATA_blk_n;
reg   [18:0] i_reg_588;
wire   [18:0] i_1_fu_832_p2;
reg    ap_predicate_op172_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] trunc_ln256_fu_1227_p1;
wire   [11:0] accu_V_0_0_fu_2921_p2;
reg   [11:0] accu_V_0_0_reg_3473;
wire   [0:0] icmp_ln289_fu_2933_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [31:0] ap_phi_mux_inElem_phi_fu_602_p146;
wire   [31:0] ap_phi_reg_pp0_iter0_inElem_reg_599;
wire   [31:0] tmp_2_fu_1076_p74;
wire   [63:0] idxprom2_i_fu_2952_p1;
reg   [11:0] accu_V_0_0_1_fu_256;
reg   [31:0] sf_fu_260;
wire   [31:0] sf_1_fu_2927_p2;
reg   [31:0] inputBuf_V_71_fu_264;
reg   [31:0] inputBuf_V_71_1_fu_268;
reg   [31:0] inputBuf_V_71_2_fu_272;
reg   [31:0] inputBuf_V_71_3_fu_276;
reg   [31:0] inputBuf_V_71_4_fu_280;
reg   [31:0] inputBuf_V_71_5_fu_284;
reg   [31:0] inputBuf_V_71_6_fu_288;
reg   [31:0] inputBuf_V_71_7_fu_292;
reg   [31:0] inputBuf_V_71_8_fu_296;
reg   [31:0] inputBuf_V_71_9_fu_300;
reg   [31:0] inputBuf_V_71_10_fu_304;
reg   [31:0] inputBuf_V_71_11_fu_308;
reg   [31:0] inputBuf_V_71_12_fu_312;
reg   [31:0] inputBuf_V_71_13_fu_316;
reg   [31:0] inputBuf_V_71_14_fu_320;
reg   [31:0] inputBuf_V_71_15_fu_324;
reg   [31:0] inputBuf_V_71_16_fu_328;
reg   [31:0] inputBuf_V_71_17_fu_332;
reg   [31:0] inputBuf_V_71_18_fu_336;
reg   [31:0] inputBuf_V_71_19_fu_340;
reg   [31:0] inputBuf_V_71_20_fu_344;
reg   [31:0] inputBuf_V_71_21_fu_348;
reg   [31:0] inputBuf_V_71_22_fu_352;
reg   [31:0] inputBuf_V_71_23_fu_356;
reg   [31:0] inputBuf_V_71_24_fu_360;
reg   [31:0] inputBuf_V_71_25_fu_364;
reg   [31:0] inputBuf_V_71_26_fu_368;
reg   [31:0] inputBuf_V_71_27_fu_372;
reg   [31:0] inputBuf_V_71_28_fu_376;
reg   [31:0] inputBuf_V_71_29_fu_380;
reg   [31:0] inputBuf_V_71_30_fu_384;
reg   [31:0] inputBuf_V_71_31_fu_388;
reg   [31:0] inputBuf_V_71_32_fu_392;
reg   [31:0] inputBuf_V_71_33_fu_396;
reg   [31:0] inputBuf_V_71_34_fu_400;
reg   [31:0] inputBuf_V_71_35_fu_404;
reg   [31:0] inputBuf_V_71_36_fu_408;
reg   [31:0] inputBuf_V_71_37_fu_412;
reg   [31:0] inputBuf_V_71_38_fu_416;
reg   [31:0] inputBuf_V_71_39_fu_420;
reg   [31:0] inputBuf_V_71_40_fu_424;
reg   [31:0] inputBuf_V_71_41_fu_428;
reg   [31:0] inputBuf_V_71_42_fu_432;
reg   [31:0] inputBuf_V_71_43_fu_436;
reg   [31:0] inputBuf_V_71_44_fu_440;
reg   [31:0] inputBuf_V_71_45_fu_444;
reg   [31:0] inputBuf_V_71_46_fu_448;
reg   [31:0] inputBuf_V_71_47_fu_452;
reg   [31:0] inputBuf_V_71_48_fu_456;
reg   [31:0] inputBuf_V_71_49_fu_460;
reg   [31:0] inputBuf_V_71_50_fu_464;
reg   [31:0] inputBuf_V_71_51_fu_468;
reg   [31:0] inputBuf_V_71_52_fu_472;
reg   [31:0] inputBuf_V_71_53_fu_476;
reg   [31:0] inputBuf_V_71_54_fu_480;
reg   [31:0] inputBuf_V_71_55_fu_484;
reg   [31:0] inputBuf_V_71_56_fu_488;
reg   [31:0] inputBuf_V_71_57_fu_492;
reg   [31:0] inputBuf_V_71_58_fu_496;
reg   [31:0] inputBuf_V_71_59_fu_500;
reg   [31:0] inputBuf_V_71_60_fu_504;
reg   [31:0] inputBuf_V_71_61_fu_508;
reg   [31:0] inputBuf_V_71_62_fu_512;
reg   [31:0] inputBuf_V_71_63_fu_516;
reg   [31:0] inputBuf_V_71_64_fu_520;
reg   [31:0] inputBuf_V_71_65_fu_524;
reg   [31:0] inputBuf_V_71_66_fu_528;
reg   [31:0] inputBuf_V_71_67_fu_532;
reg   [31:0] inputBuf_V_71_68_fu_536;
reg   [31:0] inputBuf_V_71_69_fu_540;
reg   [31:0] inputBuf_V_71_70_fu_544;
reg   [31:0] inputBuf_V_71_71_fu_548;
reg   [31:0] nf_1_fu_552;
wire   [31:0] nf_2_fu_2969_p3;
reg    ap_block_pp0_stage0_01001;
wire   [6:0] tmp_2_fu_1076_p73;
wire   [0:0] icmp_ln271_fu_1597_p2;
wire   [0:0] p_Result_s_fu_1863_p3;
wire   [0:0] trunc_ln674_fu_1611_p1;
wire   [0:0] xor_ln870_fu_1871_p2;
wire   [0:0] xor_ln870_1_fu_1877_p2;
wire   [0:0] p_Result_1_fu_1887_p3;
wire   [0:0] tmp_fu_1615_p3;
wire   [0:0] xor_ln870_2_fu_1895_p2;
wire   [0:0] xor_ln870_3_fu_1901_p2;
wire   [0:0] p_Result_2_fu_1911_p3;
wire   [0:0] tmp_1_fu_1623_p3;
wire   [0:0] xor_ln870_4_fu_1919_p2;
wire   [0:0] xor_ln870_5_fu_1925_p2;
wire   [0:0] p_Result_3_fu_1935_p3;
wire   [0:0] tmp_3_fu_1631_p3;
wire   [0:0] xor_ln870_6_fu_1943_p2;
wire   [0:0] xor_ln870_7_fu_1949_p2;
wire   [0:0] p_Result_4_fu_1959_p3;
wire   [0:0] tmp_4_fu_1639_p3;
wire   [0:0] xor_ln870_8_fu_1967_p2;
wire   [0:0] xor_ln870_9_fu_1973_p2;
wire   [0:0] p_Result_5_fu_1983_p3;
wire   [0:0] tmp_5_fu_1647_p3;
wire   [0:0] xor_ln870_10_fu_1991_p2;
wire   [0:0] xor_ln870_11_fu_1997_p2;
wire   [0:0] p_Result_6_fu_2007_p3;
wire   [0:0] tmp_6_fu_1655_p3;
wire   [0:0] xor_ln870_12_fu_2015_p2;
wire   [0:0] xor_ln870_13_fu_2021_p2;
wire   [0:0] p_Result_7_fu_2031_p3;
wire   [0:0] tmp_7_fu_1663_p3;
wire   [0:0] xor_ln870_14_fu_2039_p2;
wire   [0:0] xor_ln870_15_fu_2045_p2;
wire   [0:0] p_Result_8_fu_2055_p3;
wire   [0:0] tmp_8_fu_1671_p3;
wire   [0:0] xor_ln870_16_fu_2063_p2;
wire   [0:0] xor_ln870_17_fu_2069_p2;
wire   [0:0] p_Result_9_fu_2079_p3;
wire   [0:0] tmp_9_fu_1679_p3;
wire   [0:0] xor_ln870_18_fu_2087_p2;
wire   [0:0] xor_ln870_19_fu_2093_p2;
wire   [0:0] p_Result_s_10_fu_2103_p3;
wire   [0:0] tmp_10_fu_1687_p3;
wire   [0:0] xor_ln870_20_fu_2111_p2;
wire   [0:0] xor_ln870_21_fu_2117_p2;
wire   [0:0] p_Result_10_fu_2127_p3;
wire   [0:0] tmp_11_fu_1695_p3;
wire   [0:0] xor_ln870_22_fu_2135_p2;
wire   [0:0] xor_ln870_23_fu_2141_p2;
wire   [0:0] p_Result_11_fu_2151_p3;
wire   [0:0] tmp_12_fu_1703_p3;
wire   [0:0] xor_ln870_24_fu_2159_p2;
wire   [0:0] xor_ln870_25_fu_2165_p2;
wire   [0:0] p_Result_12_fu_2175_p3;
wire   [0:0] tmp_13_fu_1711_p3;
wire   [0:0] xor_ln870_26_fu_2183_p2;
wire   [0:0] xor_ln870_27_fu_2189_p2;
wire   [0:0] p_Result_13_fu_2199_p3;
wire   [0:0] tmp_14_fu_1719_p3;
wire   [0:0] xor_ln870_28_fu_2207_p2;
wire   [0:0] xor_ln870_29_fu_2213_p2;
wire   [0:0] p_Result_14_fu_2223_p3;
wire   [0:0] tmp_15_fu_1727_p3;
wire   [0:0] xor_ln870_30_fu_2231_p2;
wire   [0:0] xor_ln870_31_fu_2237_p2;
wire   [0:0] p_Result_15_fu_2247_p3;
wire   [0:0] tmp_16_fu_1735_p3;
wire   [0:0] xor_ln870_32_fu_2255_p2;
wire   [0:0] xor_ln870_33_fu_2261_p2;
wire   [0:0] p_Result_16_fu_2271_p3;
wire   [0:0] tmp_17_fu_1743_p3;
wire   [0:0] xor_ln870_34_fu_2279_p2;
wire   [0:0] xor_ln870_35_fu_2285_p2;
wire   [0:0] p_Result_17_fu_2295_p3;
wire   [0:0] tmp_18_fu_1751_p3;
wire   [0:0] xor_ln870_36_fu_2303_p2;
wire   [0:0] xor_ln870_37_fu_2309_p2;
wire   [0:0] p_Result_18_fu_2319_p3;
wire   [0:0] tmp_19_fu_1759_p3;
wire   [0:0] xor_ln870_38_fu_2327_p2;
wire   [0:0] xor_ln870_39_fu_2333_p2;
wire   [0:0] p_Result_19_fu_2343_p3;
wire   [0:0] tmp_20_fu_1767_p3;
wire   [0:0] xor_ln870_40_fu_2351_p2;
wire   [0:0] xor_ln870_41_fu_2357_p2;
wire   [0:0] p_Result_20_fu_2367_p3;
wire   [0:0] tmp_21_fu_1775_p3;
wire   [0:0] xor_ln870_42_fu_2375_p2;
wire   [0:0] xor_ln870_43_fu_2381_p2;
wire   [0:0] p_Result_21_fu_2391_p3;
wire   [0:0] tmp_22_fu_1783_p3;
wire   [0:0] xor_ln870_44_fu_2399_p2;
wire   [0:0] xor_ln870_45_fu_2405_p2;
wire   [0:0] p_Result_22_fu_2415_p3;
wire   [0:0] tmp_23_fu_1791_p3;
wire   [0:0] xor_ln870_46_fu_2423_p2;
wire   [0:0] xor_ln870_47_fu_2429_p2;
wire   [0:0] p_Result_23_fu_2439_p3;
wire   [0:0] tmp_24_fu_1799_p3;
wire   [0:0] xor_ln870_48_fu_2447_p2;
wire   [0:0] xor_ln870_49_fu_2453_p2;
wire   [0:0] p_Result_24_fu_2463_p3;
wire   [0:0] tmp_25_fu_1807_p3;
wire   [0:0] xor_ln870_50_fu_2471_p2;
wire   [0:0] xor_ln870_51_fu_2477_p2;
wire   [0:0] p_Result_25_fu_2487_p3;
wire   [0:0] tmp_26_fu_1815_p3;
wire   [0:0] xor_ln870_52_fu_2495_p2;
wire   [0:0] xor_ln870_53_fu_2501_p2;
wire   [0:0] p_Result_26_fu_2511_p3;
wire   [0:0] tmp_27_fu_1823_p3;
wire   [0:0] xor_ln870_54_fu_2519_p2;
wire   [0:0] xor_ln870_55_fu_2525_p2;
wire   [0:0] p_Result_27_fu_2535_p3;
wire   [0:0] tmp_28_fu_1831_p3;
wire   [0:0] xor_ln870_56_fu_2543_p2;
wire   [0:0] xor_ln870_57_fu_2549_p2;
wire   [0:0] p_Result_28_fu_2559_p3;
wire   [0:0] tmp_29_fu_1839_p3;
wire   [0:0] xor_ln870_58_fu_2567_p2;
wire   [0:0] xor_ln870_59_fu_2573_p2;
wire   [0:0] p_Result_29_fu_2583_p3;
wire   [0:0] tmp_30_fu_1847_p3;
wire   [0:0] xor_ln870_60_fu_2591_p2;
wire   [0:0] xor_ln870_61_fu_2597_p2;
wire   [0:0] p_Result_30_fu_2607_p3;
wire   [0:0] tmp_31_fu_1855_p3;
wire   [0:0] xor_ln870_62_fu_2615_p2;
wire   [0:0] xor_ln870_63_fu_2621_p2;
wire   [11:0] select_ln271_fu_1603_p3;
wire   [11:0] zext_ln691_fu_2579_p1;
wire   [1:0] zext_ln820_29_fu_2603_p1;
wire   [1:0] zext_ln820_28_fu_2555_p1;
wire   [1:0] add_ln691_1_fu_2637_p2;
wire   [11:0] zext_ln691_2_fu_2643_p1;
wire   [11:0] add_ln691_fu_2631_p2;
wire   [1:0] zext_ln820_27_fu_2531_p1;
wire   [1:0] zext_ln820_24_fu_2459_p1;
wire   [1:0] add_ln691_3_fu_2653_p2;
wire   [1:0] zext_ln820_23_fu_2435_p1;
wire   [1:0] zext_ln820_26_fu_2507_p1;
wire   [1:0] add_ln691_4_fu_2663_p2;
wire   [2:0] zext_ln691_4_fu_2669_p1;
wire   [2:0] zext_ln691_3_fu_2659_p1;
wire   [2:0] add_ln691_5_fu_2673_p2;
wire   [11:0] zext_ln691_5_fu_2679_p1;
wire   [11:0] add_ln691_2_fu_2647_p2;
wire   [1:0] zext_ln820_25_fu_2483_p1;
wire   [1:0] zext_ln820_16_fu_2267_p1;
wire   [1:0] add_ln691_7_fu_2689_p2;
wire   [1:0] zext_ln820_15_fu_2243_p1;
wire   [1:0] zext_ln820_18_fu_2315_p1;
wire   [1:0] add_ln691_8_fu_2699_p2;
wire   [2:0] zext_ln691_7_fu_2705_p1;
wire   [2:0] zext_ln691_6_fu_2695_p1;
wire   [2:0] add_ln691_9_fu_2709_p2;
wire   [1:0] zext_ln820_17_fu_2291_p1;
wire   [1:0] zext_ln820_20_fu_2363_p1;
wire   [1:0] add_ln691_10_fu_2719_p2;
wire   [1:0] zext_ln820_19_fu_2339_p1;
wire   [1:0] zext_ln820_22_fu_2411_p1;
wire   [1:0] add_ln691_11_fu_2729_p2;
wire   [2:0] zext_ln691_10_fu_2735_p1;
wire   [2:0] zext_ln691_9_fu_2725_p1;
wire   [2:0] add_ln691_12_fu_2739_p2;
wire   [3:0] zext_ln691_11_fu_2745_p1;
wire   [3:0] zext_ln691_8_fu_2715_p1;
wire   [3:0] add_ln691_13_fu_2749_p2;
wire   [11:0] zext_ln691_12_fu_2755_p1;
wire   [11:0] add_ln691_6_fu_2683_p2;
wire   [1:0] zext_ln820_21_fu_2387_p1;
wire   [1:0] zext_ln820_fu_1883_p1;
wire   [1:0] add_ln691_15_fu_2765_p2;
wire   [1:0] zext_ln820_2_fu_1931_p1;
wire   [1:0] zext_ln820_1_fu_1907_p1;
wire   [1:0] add_ln691_16_fu_2775_p2;
wire   [2:0] zext_ln691_14_fu_2781_p1;
wire   [2:0] zext_ln691_13_fu_2771_p1;
wire   [2:0] add_ln691_17_fu_2785_p2;
wire   [1:0] zext_ln820_4_fu_1979_p1;
wire   [1:0] zext_ln820_3_fu_1955_p1;
wire   [1:0] add_ln691_18_fu_2795_p2;
wire   [1:0] zext_ln820_6_fu_2027_p1;
wire   [1:0] zext_ln820_5_fu_2003_p1;
wire   [1:0] add_ln691_19_fu_2805_p2;
wire   [2:0] zext_ln691_17_fu_2811_p1;
wire   [2:0] zext_ln691_16_fu_2801_p1;
wire   [2:0] add_ln691_20_fu_2815_p2;
wire   [3:0] zext_ln691_18_fu_2821_p1;
wire   [3:0] zext_ln691_15_fu_2791_p1;
wire   [3:0] add_ln691_21_fu_2825_p2;
wire   [1:0] zext_ln820_8_fu_2075_p1;
wire   [1:0] zext_ln820_7_fu_2051_p1;
wire   [1:0] add_ln691_22_fu_2835_p2;
wire   [1:0] zext_ln820_10_fu_2123_p1;
wire   [1:0] zext_ln820_9_fu_2099_p1;
wire   [1:0] add_ln691_23_fu_2845_p2;
wire   [2:0] zext_ln691_21_fu_2851_p1;
wire   [2:0] zext_ln691_20_fu_2841_p1;
wire   [2:0] add_ln691_24_fu_2855_p2;
wire   [1:0] zext_ln820_12_fu_2171_p1;
wire   [1:0] zext_ln820_11_fu_2147_p1;
wire   [1:0] add_ln691_25_fu_2865_p2;
wire   [1:0] zext_ln820_13_fu_2195_p1;
wire   [1:0] zext_ln691_1_fu_2627_p1;
wire   [1:0] add_ln691_26_fu_2875_p2;
wire   [1:0] zext_ln820_14_fu_2219_p1;
wire   [1:0] add_ln691_27_fu_2881_p2;
wire   [2:0] zext_ln691_24_fu_2887_p1;
wire   [2:0] zext_ln691_23_fu_2871_p1;
wire   [2:0] add_ln691_28_fu_2891_p2;
wire   [3:0] zext_ln691_25_fu_2897_p1;
wire   [3:0] zext_ln691_22_fu_2861_p1;
wire   [3:0] add_ln691_29_fu_2901_p2;
wire   [4:0] zext_ln691_26_fu_2907_p1;
wire   [4:0] zext_ln691_19_fu_2831_p1;
wire   [4:0] add_ln691_30_fu_2911_p2;
wire   [11:0] zext_ln691_27_fu_2917_p1;
wire   [11:0] add_ln691_14_fu_2759_p2;
wire   [31:0] nf_fu_2957_p2;
wire   [0:0] icmp_ln301_fu_2963_p2;
wire   [11:0] zext_ln890_fu_2982_p1;
wire   [0:0] icmp_ln890_fu_2986_p2;
wire   [0:0] result_V_fu_2991_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_6_Matrix_Vector_Activate_Stream_Batch_2304u_256u_32u_1u_Recast_XnorMul_Slice_apbkb #(
    .DataWidth( 11 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
threshs_m_thresholds_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_V_0_0_address0),
    .ce0(threshs_m_thresholds_V_0_0_ce0),
    .q0(threshs_m_thresholds_V_0_0_q0)
);

StreamingFCLayer_Batch_6_mux_727_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 32 ),
    .din65_WIDTH( 32 ),
    .din66_WIDTH( 32 ),
    .din67_WIDTH( 32 ),
    .din68_WIDTH( 32 ),
    .din69_WIDTH( 32 ),
    .din70_WIDTH( 32 ),
    .din71_WIDTH( 32 ),
    .din72_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
mux_727_32_1_1_U1(
    .din0(inputBuf_V_71_fu_264),
    .din1(inputBuf_V_71_1_fu_268),
    .din2(inputBuf_V_71_2_fu_272),
    .din3(inputBuf_V_71_3_fu_276),
    .din4(inputBuf_V_71_4_fu_280),
    .din5(inputBuf_V_71_5_fu_284),
    .din6(inputBuf_V_71_6_fu_288),
    .din7(inputBuf_V_71_7_fu_292),
    .din8(inputBuf_V_71_8_fu_296),
    .din9(inputBuf_V_71_9_fu_300),
    .din10(inputBuf_V_71_10_fu_304),
    .din11(inputBuf_V_71_11_fu_308),
    .din12(inputBuf_V_71_12_fu_312),
    .din13(inputBuf_V_71_13_fu_316),
    .din14(inputBuf_V_71_14_fu_320),
    .din15(inputBuf_V_71_15_fu_324),
    .din16(inputBuf_V_71_16_fu_328),
    .din17(inputBuf_V_71_17_fu_332),
    .din18(inputBuf_V_71_18_fu_336),
    .din19(inputBuf_V_71_19_fu_340),
    .din20(inputBuf_V_71_20_fu_344),
    .din21(inputBuf_V_71_21_fu_348),
    .din22(inputBuf_V_71_22_fu_352),
    .din23(inputBuf_V_71_23_fu_356),
    .din24(inputBuf_V_71_24_fu_360),
    .din25(inputBuf_V_71_25_fu_364),
    .din26(inputBuf_V_71_26_fu_368),
    .din27(inputBuf_V_71_27_fu_372),
    .din28(inputBuf_V_71_28_fu_376),
    .din29(inputBuf_V_71_29_fu_380),
    .din30(inputBuf_V_71_30_fu_384),
    .din31(inputBuf_V_71_31_fu_388),
    .din32(inputBuf_V_71_32_fu_392),
    .din33(inputBuf_V_71_33_fu_396),
    .din34(inputBuf_V_71_34_fu_400),
    .din35(inputBuf_V_71_35_fu_404),
    .din36(inputBuf_V_71_36_fu_408),
    .din37(inputBuf_V_71_37_fu_412),
    .din38(inputBuf_V_71_38_fu_416),
    .din39(inputBuf_V_71_39_fu_420),
    .din40(inputBuf_V_71_40_fu_424),
    .din41(inputBuf_V_71_41_fu_428),
    .din42(inputBuf_V_71_42_fu_432),
    .din43(inputBuf_V_71_43_fu_436),
    .din44(inputBuf_V_71_44_fu_440),
    .din45(inputBuf_V_71_45_fu_444),
    .din46(inputBuf_V_71_46_fu_448),
    .din47(inputBuf_V_71_47_fu_452),
    .din48(inputBuf_V_71_48_fu_456),
    .din49(inputBuf_V_71_49_fu_460),
    .din50(inputBuf_V_71_50_fu_464),
    .din51(inputBuf_V_71_51_fu_468),
    .din52(inputBuf_V_71_52_fu_472),
    .din53(inputBuf_V_71_53_fu_476),
    .din54(inputBuf_V_71_54_fu_480),
    .din55(inputBuf_V_71_55_fu_484),
    .din56(inputBuf_V_71_56_fu_488),
    .din57(inputBuf_V_71_57_fu_492),
    .din58(inputBuf_V_71_58_fu_496),
    .din59(inputBuf_V_71_59_fu_500),
    .din60(inputBuf_V_71_60_fu_504),
    .din61(inputBuf_V_71_61_fu_508),
    .din62(inputBuf_V_71_62_fu_512),
    .din63(inputBuf_V_71_63_fu_516),
    .din64(inputBuf_V_71_64_fu_520),
    .din65(inputBuf_V_71_65_fu_524),
    .din66(inputBuf_V_71_66_fu_528),
    .din67(inputBuf_V_71_67_fu_532),
    .din68(inputBuf_V_71_68_fu_536),
    .din69(inputBuf_V_71_69_fu_540),
    .din70(inputBuf_V_71_70_fu_544),
    .din71(inputBuf_V_71_71_fu_548),
    .din72(tmp_2_fu_1076_p73),
    .dout(tmp_2_fu_1076_p74)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_588 <= i_1_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_588 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_1_fu_552 <= 32'd0;
    end else if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_2933_p2 == 1'd1))) begin
        nf_1_fu_552 <= nf_2_fu_2969_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_2933_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_fu_260 <= 32'd0;
    end else if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln289_fu_2933_p2 == 1'd0))) begin
        sf_fu_260 <= sf_1_fu_2927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accu_V_0_0_1_fu_256 <= accu_V_0_0_fu_2921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accu_V_0_0_reg_3473 <= accu_V_0_0_fu_2921_p2;
        icmp_ln289_reg_3478 <= icmp_ln289_fu_2933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd10))) begin
        inputBuf_V_71_10_fu_304 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd11))) begin
        inputBuf_V_71_11_fu_308 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd12))) begin
        inputBuf_V_71_12_fu_312 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd13))) begin
        inputBuf_V_71_13_fu_316 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd14))) begin
        inputBuf_V_71_14_fu_320 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd15))) begin
        inputBuf_V_71_15_fu_324 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd16))) begin
        inputBuf_V_71_16_fu_328 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd17))) begin
        inputBuf_V_71_17_fu_332 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd18))) begin
        inputBuf_V_71_18_fu_336 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd19))) begin
        inputBuf_V_71_19_fu_340 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd1))) begin
        inputBuf_V_71_1_fu_268 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd20))) begin
        inputBuf_V_71_20_fu_344 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd21))) begin
        inputBuf_V_71_21_fu_348 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd22))) begin
        inputBuf_V_71_22_fu_352 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd23))) begin
        inputBuf_V_71_23_fu_356 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd24))) begin
        inputBuf_V_71_24_fu_360 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd25))) begin
        inputBuf_V_71_25_fu_364 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd26))) begin
        inputBuf_V_71_26_fu_368 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd27))) begin
        inputBuf_V_71_27_fu_372 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd28))) begin
        inputBuf_V_71_28_fu_376 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd29))) begin
        inputBuf_V_71_29_fu_380 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd2))) begin
        inputBuf_V_71_2_fu_272 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd30))) begin
        inputBuf_V_71_30_fu_384 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd31))) begin
        inputBuf_V_71_31_fu_388 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd32))) begin
        inputBuf_V_71_32_fu_392 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd33))) begin
        inputBuf_V_71_33_fu_396 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd34))) begin
        inputBuf_V_71_34_fu_400 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd35))) begin
        inputBuf_V_71_35_fu_404 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd36))) begin
        inputBuf_V_71_36_fu_408 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd37))) begin
        inputBuf_V_71_37_fu_412 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd38))) begin
        inputBuf_V_71_38_fu_416 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd39))) begin
        inputBuf_V_71_39_fu_420 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd3))) begin
        inputBuf_V_71_3_fu_276 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd40))) begin
        inputBuf_V_71_40_fu_424 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd41))) begin
        inputBuf_V_71_41_fu_428 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd42))) begin
        inputBuf_V_71_42_fu_432 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd43))) begin
        inputBuf_V_71_43_fu_436 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd44))) begin
        inputBuf_V_71_44_fu_440 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd45))) begin
        inputBuf_V_71_45_fu_444 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd46))) begin
        inputBuf_V_71_46_fu_448 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd47))) begin
        inputBuf_V_71_47_fu_452 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd48))) begin
        inputBuf_V_71_48_fu_456 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd49))) begin
        inputBuf_V_71_49_fu_460 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd4))) begin
        inputBuf_V_71_4_fu_280 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd50))) begin
        inputBuf_V_71_50_fu_464 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd51))) begin
        inputBuf_V_71_51_fu_468 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd52))) begin
        inputBuf_V_71_52_fu_472 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd53))) begin
        inputBuf_V_71_53_fu_476 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd54))) begin
        inputBuf_V_71_54_fu_480 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd55))) begin
        inputBuf_V_71_55_fu_484 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd56))) begin
        inputBuf_V_71_56_fu_488 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd57))) begin
        inputBuf_V_71_57_fu_492 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd58))) begin
        inputBuf_V_71_58_fu_496 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd59))) begin
        inputBuf_V_71_59_fu_500 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd5))) begin
        inputBuf_V_71_5_fu_284 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd60))) begin
        inputBuf_V_71_60_fu_504 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd61))) begin
        inputBuf_V_71_61_fu_508 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd62))) begin
        inputBuf_V_71_62_fu_512 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd63))) begin
        inputBuf_V_71_63_fu_516 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd64))) begin
        inputBuf_V_71_64_fu_520 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd65))) begin
        inputBuf_V_71_65_fu_524 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd66))) begin
        inputBuf_V_71_66_fu_528 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd67))) begin
        inputBuf_V_71_67_fu_532 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd68))) begin
        inputBuf_V_71_68_fu_536 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd69))) begin
        inputBuf_V_71_69_fu_540 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd6))) begin
        inputBuf_V_71_6_fu_288 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd70))) begin
        inputBuf_V_71_70_fu_544 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln256_fu_1227_p1 == 7'd70) & ~(trunc_ln256_fu_1227_p1 == 7'd69) & ~(trunc_ln256_fu_1227_p1 == 7'd68) & ~(trunc_ln256_fu_1227_p1 == 7'd67) & ~(trunc_ln256_fu_1227_p1 == 7'd66) & ~(trunc_ln256_fu_1227_p1 == 7'd65) & ~(trunc_ln256_fu_1227_p1 == 7'd64) & ~(trunc_ln256_fu_1227_p1 == 7'd63) & ~(trunc_ln256_fu_1227_p1 == 7'd62) & ~(trunc_ln256_fu_1227_p1 == 7'd61) & ~(trunc_ln256_fu_1227_p1 == 7'd60) & ~(trunc_ln256_fu_1227_p1 == 7'd59) & ~(trunc_ln256_fu_1227_p1 == 7'd58) & ~(trunc_ln256_fu_1227_p1 == 7'd57) & ~(trunc_ln256_fu_1227_p1 == 7'd56) & ~(trunc_ln256_fu_1227_p1 == 7'd55) & ~(trunc_ln256_fu_1227_p1 == 7'd54) & ~(trunc_ln256_fu_1227_p1 == 7'd53) & ~(trunc_ln256_fu_1227_p1 == 7'd52) & ~(trunc_ln256_fu_1227_p1 == 7'd51) & ~(trunc_ln256_fu_1227_p1 == 7'd50) & ~(trunc_ln256_fu_1227_p1 == 7'd49) & ~(trunc_ln256_fu_1227_p1 == 7'd48) & ~(trunc_ln256_fu_1227_p1 == 7'd47) & ~(trunc_ln256_fu_1227_p1 == 7'd46) & ~(trunc_ln256_fu_1227_p1 == 7'd45) & ~(trunc_ln256_fu_1227_p1 == 7'd44) & ~(trunc_ln256_fu_1227_p1 == 7'd43) & ~(trunc_ln256_fu_1227_p1 == 7'd42) & ~(trunc_ln256_fu_1227_p1 == 7'd41) & ~(trunc_ln256_fu_1227_p1 == 7'd40) & ~(trunc_ln256_fu_1227_p1 == 7'd39) & ~(trunc_ln256_fu_1227_p1 == 7'd38) & ~(trunc_ln256_fu_1227_p1 == 7'd37) & ~(trunc_ln256_fu_1227_p1 == 7'd36) & ~(trunc_ln256_fu_1227_p1 == 7'd35) & ~(trunc_ln256_fu_1227_p1 == 7'd34) & ~(trunc_ln256_fu_1227_p1 == 7'd33) & ~(trunc_ln256_fu_1227_p1 == 7'd32) & ~(trunc_ln256_fu_1227_p1 == 7'd31) & ~(trunc_ln256_fu_1227_p1 == 7'd30) & ~(trunc_ln256_fu_1227_p1 == 7'd29) & ~(trunc_ln256_fu_1227_p1 == 7'd28) & ~(trunc_ln256_fu_1227_p1 == 7'd27) & ~(trunc_ln256_fu_1227_p1 == 7'd26) & ~(trunc_ln256_fu_1227_p1 == 7'd25) & ~(trunc_ln256_fu_1227_p1 == 7'd24) & ~(trunc_ln256_fu_1227_p1 == 7'd23) & ~(trunc_ln256_fu_1227_p1 == 7'd22) & ~(trunc_ln256_fu_1227_p1 == 7'd21) & ~(trunc_ln256_fu_1227_p1 == 7'd20) & ~(trunc_ln256_fu_1227_p1 == 7'd19) & ~(trunc_ln256_fu_1227_p1 == 7'd18) & ~(trunc_ln256_fu_1227_p1 == 7'd17) & ~(trunc_ln256_fu_1227_p1 == 7'd16) & ~(trunc_ln256_fu_1227_p1 == 7'd15) & ~(trunc_ln256_fu_1227_p1 == 7'd14) & ~(trunc_ln256_fu_1227_p1 == 7'd13) & ~(trunc_ln256_fu_1227_p1 == 7'd12) & ~(trunc_ln256_fu_1227_p1 == 7'd11) & ~(trunc_ln256_fu_1227_p1 == 7'd10) & ~(trunc_ln256_fu_1227_p1 == 7'd9) & ~(trunc_ln256_fu_1227_p1 == 7'd8) & ~(trunc_ln256_fu_1227_p1 == 7'd7) & ~(trunc_ln256_fu_1227_p1 == 7'd6) & ~(trunc_ln256_fu_1227_p1 == 7'd5) & ~(trunc_ln256_fu_1227_p1 == 7'd4) & ~(trunc_ln256_fu_1227_p1 == 7'd3) & ~(trunc_ln256_fu_1227_p1 == 7'd2) & ~(trunc_ln256_fu_1227_p1 == 7'd1) & ~(trunc_ln256_fu_1227_p1 == 7'd0) & (icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_V_71_71_fu_548 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd7))) begin
        inputBuf_V_71_7_fu_292 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd8))) begin
        inputBuf_V_71_8_fu_296 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd9))) begin
        inputBuf_V_71_9_fu_300 <= in0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln256_fu_1227_p1 == 7'd0))) begin
        inputBuf_V_71_fu_264 <= in0_V_TDATA;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_838_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_847_p2 == 1'd0) & (icmp_ln248_fu_838_p2 == 1'd0))) begin
        ap_phi_mux_inElem_phi_fu_602_p146 = tmp_2_fu_1076_p74;
    end else if ((((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd70)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd69)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd68)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd67)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd66)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd65)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd64)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd63)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd62)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd61)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd60)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd59)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd58)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd57)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd56)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd55)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd54)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd53)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd52)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd51)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd50)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd49)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd48)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd47)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd46)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd45)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd44)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd43)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd42)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd41)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd40)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd39)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd38)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd37)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd36)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd35)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd34)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd33)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd32)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd31)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd30)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd29)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd28)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd27)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd26)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd25)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd24)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd23)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd22)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd21)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd20)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd19)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd18)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd17)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd16)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd15)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd14)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd13)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd12)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd11)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd10)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd9)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd8)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd7)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd6)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd5)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd4)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd3)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd2)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd1)) | ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (trunc_ln256_fu_1227_p1 == 7'd0)) | (~(trunc_ln256_fu_1227_p1 == 7'd70) & ~(trunc_ln256_fu_1227_p1 == 7'd69) & ~(trunc_ln256_fu_1227_p1 == 7'd68) & ~(trunc_ln256_fu_1227_p1 == 7'd67) & ~(trunc_ln256_fu_1227_p1 == 7'd66) & ~(trunc_ln256_fu_1227_p1 == 7'd65) & ~(trunc_ln256_fu_1227_p1 == 7'd64) & ~(trunc_ln256_fu_1227_p1 == 7'd63) & ~(trunc_ln256_fu_1227_p1 == 7'd62) & ~(trunc_ln256_fu_1227_p1 == 7'd61) & ~(trunc_ln256_fu_1227_p1 == 7'd60) & ~(trunc_ln256_fu_1227_p1 == 7'd59) & ~(trunc_ln256_fu_1227_p1 == 7'd58) & ~(trunc_ln256_fu_1227_p1 == 7'd57) & ~(trunc_ln256_fu_1227_p1 == 7'd56) & ~(trunc_ln256_fu_1227_p1 == 7'd55) & ~(trunc_ln256_fu_1227_p1 == 7'd54) & ~(trunc_ln256_fu_1227_p1 == 7'd53) & ~(trunc_ln256_fu_1227_p1 == 7'd52) & ~(trunc_ln256_fu_1227_p1 == 7'd51) & ~(trunc_ln256_fu_1227_p1 == 7'd50) & ~(trunc_ln256_fu_1227_p1 == 7'd49) & ~(trunc_ln256_fu_1227_p1 == 7'd48) & ~(trunc_ln256_fu_1227_p1 == 7'd47) & ~(trunc_ln256_fu_1227_p1 == 7'd46) & ~(trunc_ln256_fu_1227_p1 == 7'd45) & ~(trunc_ln256_fu_1227_p1 == 7'd44) & ~(trunc_ln256_fu_1227_p1 == 7'd43) & ~(trunc_ln256_fu_1227_p1 == 7'd42) & ~(trunc_ln256_fu_1227_p1 == 7'd41) & ~(trunc_ln256_fu_1227_p1 == 7'd40) & ~(trunc_ln256_fu_1227_p1 == 7'd39) & ~(trunc_ln256_fu_1227_p1 == 7'd38) & ~(trunc_ln256_fu_1227_p1 == 7'd37) & ~(trunc_ln256_fu_1227_p1 == 7'd36) & ~(trunc_ln256_fu_1227_p1 == 7'd35) & ~(trunc_ln256_fu_1227_p1 == 7'd34) & ~(trunc_ln256_fu_1227_p1 == 7'd33) & ~(trunc_ln256_fu_1227_p1 == 7'd32) & ~(trunc_ln256_fu_1227_p1 == 7'd31) & ~(trunc_ln256_fu_1227_p1 == 7'd30) & ~(trunc_ln256_fu_1227_p1 == 7'd29) & ~(trunc_ln256_fu_1227_p1 == 7'd28) & ~(trunc_ln256_fu_1227_p1 == 7'd27) & ~(trunc_ln256_fu_1227_p1 == 7'd26) & ~(trunc_ln256_fu_1227_p1 == 7'd25) & ~(trunc_ln256_fu_1227_p1 == 7'd24) & ~(trunc_ln256_fu_1227_p1 == 7'd23) & ~(trunc_ln256_fu_1227_p1 == 7'd22) & ~(trunc_ln256_fu_1227_p1 == 7'd21) & ~(trunc_ln256_fu_1227_p1 == 7'd20) & ~(trunc_ln256_fu_1227_p1 == 7'd19) & ~(trunc_ln256_fu_1227_p1 == 7'd18) & ~(trunc_ln256_fu_1227_p1 == 7'd17) & ~(trunc_ln256_fu_1227_p1 == 7'd16) & ~(trunc_ln256_fu_1227_p1 == 7'd15) & ~(trunc_ln256_fu_1227_p1 == 7'd14) & ~(trunc_ln256_fu_1227_p1 == 7'd13) & ~(trunc_ln256_fu_1227_p1 == 7'd12) & ~(trunc_ln256_fu_1227_p1 == 7'd11) & ~(trunc_ln256_fu_1227_p1 == 7'd10) & ~(trunc_ln256_fu_1227_p1 == 7'd9) & ~(trunc_ln256_fu_1227_p1 == 7'd8) & ~(trunc_ln256_fu_1227_p1 == 7'd7) & ~(trunc_ln256_fu_1227_p1 == 7'd6) & ~(trunc_ln256_fu_1227_p1 == 7'd5) & ~(trunc_ln256_fu_1227_p1 == 7'd4) & ~(trunc_ln256_fu_1227_p1 == 7'd3) & ~(trunc_ln256_fu_1227_p1 == 7'd2) & ~(trunc_ln256_fu_1227_p1 == 7'd1) & ~(trunc_ln256_fu_1227_p1 == 7'd0) & (icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0)))) begin
        ap_phi_mux_inElem_phi_fu_602_p146 = in0_V_TDATA;
    end else begin
        ap_phi_mux_inElem_phi_fu_602_p146 = ap_phi_reg_pp0_iter0_inElem_reg_599;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op172_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_3478 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_3478 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_V_0_0_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_V_TDATA_blk_n = weights_V_TVALID;
    end else begin
        weights_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_V_TREADY = 1'b1;
    end else begin
        weights_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln248_fu_838_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln248_fu_838_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_V_0_0_fu_2921_p2 = (zext_ln691_27_fu_2917_p1 + add_ln691_14_fu_2759_p2);

assign add_ln691_10_fu_2719_p2 = (zext_ln820_17_fu_2291_p1 + zext_ln820_20_fu_2363_p1);

assign add_ln691_11_fu_2729_p2 = (zext_ln820_19_fu_2339_p1 + zext_ln820_22_fu_2411_p1);

assign add_ln691_12_fu_2739_p2 = (zext_ln691_10_fu_2735_p1 + zext_ln691_9_fu_2725_p1);

assign add_ln691_13_fu_2749_p2 = (zext_ln691_11_fu_2745_p1 + zext_ln691_8_fu_2715_p1);

assign add_ln691_14_fu_2759_p2 = (zext_ln691_12_fu_2755_p1 + add_ln691_6_fu_2683_p2);

assign add_ln691_15_fu_2765_p2 = (zext_ln820_21_fu_2387_p1 + zext_ln820_fu_1883_p1);

assign add_ln691_16_fu_2775_p2 = (zext_ln820_2_fu_1931_p1 + zext_ln820_1_fu_1907_p1);

assign add_ln691_17_fu_2785_p2 = (zext_ln691_14_fu_2781_p1 + zext_ln691_13_fu_2771_p1);

assign add_ln691_18_fu_2795_p2 = (zext_ln820_4_fu_1979_p1 + zext_ln820_3_fu_1955_p1);

assign add_ln691_19_fu_2805_p2 = (zext_ln820_6_fu_2027_p1 + zext_ln820_5_fu_2003_p1);

assign add_ln691_1_fu_2637_p2 = (zext_ln820_29_fu_2603_p1 + zext_ln820_28_fu_2555_p1);

assign add_ln691_20_fu_2815_p2 = (zext_ln691_17_fu_2811_p1 + zext_ln691_16_fu_2801_p1);

assign add_ln691_21_fu_2825_p2 = (zext_ln691_18_fu_2821_p1 + zext_ln691_15_fu_2791_p1);

assign add_ln691_22_fu_2835_p2 = (zext_ln820_8_fu_2075_p1 + zext_ln820_7_fu_2051_p1);

assign add_ln691_23_fu_2845_p2 = (zext_ln820_10_fu_2123_p1 + zext_ln820_9_fu_2099_p1);

assign add_ln691_24_fu_2855_p2 = (zext_ln691_21_fu_2851_p1 + zext_ln691_20_fu_2841_p1);

assign add_ln691_25_fu_2865_p2 = (zext_ln820_12_fu_2171_p1 + zext_ln820_11_fu_2147_p1);

assign add_ln691_26_fu_2875_p2 = (zext_ln820_13_fu_2195_p1 + zext_ln691_1_fu_2627_p1);

assign add_ln691_27_fu_2881_p2 = (add_ln691_26_fu_2875_p2 + zext_ln820_14_fu_2219_p1);

assign add_ln691_28_fu_2891_p2 = (zext_ln691_24_fu_2887_p1 + zext_ln691_23_fu_2871_p1);

assign add_ln691_29_fu_2901_p2 = (zext_ln691_25_fu_2897_p1 + zext_ln691_22_fu_2861_p1);

assign add_ln691_2_fu_2647_p2 = (zext_ln691_2_fu_2643_p1 + add_ln691_fu_2631_p2);

assign add_ln691_30_fu_2911_p2 = (zext_ln691_26_fu_2907_p1 + zext_ln691_19_fu_2831_p1);

assign add_ln691_3_fu_2653_p2 = (zext_ln820_27_fu_2531_p1 + zext_ln820_24_fu_2459_p1);

assign add_ln691_4_fu_2663_p2 = (zext_ln820_23_fu_2435_p1 + zext_ln820_26_fu_2507_p1);

assign add_ln691_5_fu_2673_p2 = (zext_ln691_4_fu_2669_p1 + zext_ln691_3_fu_2659_p1);

assign add_ln691_6_fu_2683_p2 = (zext_ln691_5_fu_2679_p1 + add_ln691_2_fu_2647_p2);

assign add_ln691_7_fu_2689_p2 = (zext_ln820_25_fu_2483_p1 + zext_ln820_16_fu_2267_p1);

assign add_ln691_8_fu_2699_p2 = (zext_ln820_15_fu_2243_p1 + zext_ln820_18_fu_2315_p1);

assign add_ln691_9_fu_2709_p2 = (zext_ln691_7_fu_2705_p1 + zext_ln691_6_fu_2695_p1);

assign add_ln691_fu_2631_p2 = (select_ln271_fu_1603_p3 + zext_ln691_fu_2579_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln289_reg_3478 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (out_V_TREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op172_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((icmp_ln248_fu_838_p2 == 1'd0) & (weights_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln289_reg_3478 == 1'd1) & (out_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op172_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((icmp_ln248_fu_838_p2 == 1'd0) & (weights_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln289_reg_3478 == 1'd1) & (out_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op172_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((icmp_ln248_fu_838_p2 == 1'd0) & (weights_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((ap_predicate_op172_read_state2 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((icmp_ln248_fu_838_p2 == 1'd0) & (weights_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln289_reg_3478 == 1'd1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln289_reg_3478 == 1'd1) & (out_V_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_inElem_reg_599 = 'bx;

always @ (*) begin
    ap_predicate_op172_read_state2 = ((icmp_ln252_fu_847_p2 == 1'd1) & (icmp_ln248_fu_838_p2 == 1'd0));
end

assign i_1_fu_832_p2 = (i_reg_588 + 19'd1);

assign icmp_ln248_fu_838_p2 = ((i_reg_588 == 19'd294912) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_847_p2 = ((nf_1_fu_552 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_1597_p2 = ((sf_fu_260 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_2933_p2 = ((sf_1_fu_2927_p2 == 32'd72) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_2963_p2 = ((nf_fu_2957_p2 == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_2986_p2 = ((accu_V_0_0_reg_3473 < zext_ln890_fu_2982_p1) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_2952_p1 = nf_1_fu_552;

assign nf_2_fu_2969_p3 = ((icmp_ln301_fu_2963_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_2957_p2);

assign nf_fu_2957_p2 = (nf_1_fu_552 + 32'd1);

assign out_V_TDATA = result_V_fu_2991_p2;

assign p_Result_10_fu_2127_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd11];

assign p_Result_11_fu_2151_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd12];

assign p_Result_12_fu_2175_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd13];

assign p_Result_13_fu_2199_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd14];

assign p_Result_14_fu_2223_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd15];

assign p_Result_15_fu_2247_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd16];

assign p_Result_16_fu_2271_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd17];

assign p_Result_17_fu_2295_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd18];

assign p_Result_18_fu_2319_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd19];

assign p_Result_19_fu_2343_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd20];

assign p_Result_1_fu_1887_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd1];

assign p_Result_20_fu_2367_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd21];

assign p_Result_21_fu_2391_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd22];

assign p_Result_22_fu_2415_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd23];

assign p_Result_23_fu_2439_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd24];

assign p_Result_24_fu_2463_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd25];

assign p_Result_25_fu_2487_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd26];

assign p_Result_26_fu_2511_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd27];

assign p_Result_27_fu_2535_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd28];

assign p_Result_28_fu_2559_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd29];

assign p_Result_29_fu_2583_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd30];

assign p_Result_2_fu_1911_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd2];

assign p_Result_30_fu_2607_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd31];

assign p_Result_3_fu_1935_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd3];

assign p_Result_4_fu_1959_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd4];

assign p_Result_5_fu_1983_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd5];

assign p_Result_6_fu_2007_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd6];

assign p_Result_7_fu_2031_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd7];

assign p_Result_8_fu_2055_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd8];

assign p_Result_9_fu_2079_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd9];

assign p_Result_s_10_fu_2103_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd10];

assign p_Result_s_fu_1863_p3 = ap_phi_mux_inElem_phi_fu_602_p146[32'd0];

assign result_V_fu_2991_p2 = (icmp_ln890_fu_2986_p2 ^ 1'd1);

assign select_ln271_fu_1603_p3 = ((icmp_ln271_fu_1597_p2[0:0] == 1'b1) ? 12'd0 : accu_V_0_0_1_fu_256);

assign sf_1_fu_2927_p2 = (sf_fu_260 + 32'd1);

assign threshs_m_thresholds_V_0_0_address0 = idxprom2_i_fu_2952_p1;

assign tmp_10_fu_1687_p3 = weights_V_TDATA[32'd10];

assign tmp_11_fu_1695_p3 = weights_V_TDATA[32'd11];

assign tmp_12_fu_1703_p3 = weights_V_TDATA[32'd12];

assign tmp_13_fu_1711_p3 = weights_V_TDATA[32'd13];

assign tmp_14_fu_1719_p3 = weights_V_TDATA[32'd14];

assign tmp_15_fu_1727_p3 = weights_V_TDATA[32'd15];

assign tmp_16_fu_1735_p3 = weights_V_TDATA[32'd16];

assign tmp_17_fu_1743_p3 = weights_V_TDATA[32'd17];

assign tmp_18_fu_1751_p3 = weights_V_TDATA[32'd18];

assign tmp_19_fu_1759_p3 = weights_V_TDATA[32'd19];

assign tmp_1_fu_1623_p3 = weights_V_TDATA[32'd2];

assign tmp_20_fu_1767_p3 = weights_V_TDATA[32'd20];

assign tmp_21_fu_1775_p3 = weights_V_TDATA[32'd21];

assign tmp_22_fu_1783_p3 = weights_V_TDATA[32'd22];

assign tmp_23_fu_1791_p3 = weights_V_TDATA[32'd23];

assign tmp_24_fu_1799_p3 = weights_V_TDATA[32'd24];

assign tmp_25_fu_1807_p3 = weights_V_TDATA[32'd25];

assign tmp_26_fu_1815_p3 = weights_V_TDATA[32'd26];

assign tmp_27_fu_1823_p3 = weights_V_TDATA[32'd27];

assign tmp_28_fu_1831_p3 = weights_V_TDATA[32'd28];

assign tmp_29_fu_1839_p3 = weights_V_TDATA[32'd29];

assign tmp_2_fu_1076_p73 = sf_fu_260[6:0];

assign tmp_30_fu_1847_p3 = weights_V_TDATA[32'd30];

assign tmp_31_fu_1855_p3 = weights_V_TDATA[32'd31];

assign tmp_3_fu_1631_p3 = weights_V_TDATA[32'd3];

assign tmp_4_fu_1639_p3 = weights_V_TDATA[32'd4];

assign tmp_5_fu_1647_p3 = weights_V_TDATA[32'd5];

assign tmp_6_fu_1655_p3 = weights_V_TDATA[32'd6];

assign tmp_7_fu_1663_p3 = weights_V_TDATA[32'd7];

assign tmp_8_fu_1671_p3 = weights_V_TDATA[32'd8];

assign tmp_9_fu_1679_p3 = weights_V_TDATA[32'd9];

assign tmp_fu_1615_p3 = weights_V_TDATA[32'd1];

assign trunc_ln256_fu_1227_p1 = sf_fu_260[6:0];

assign trunc_ln674_fu_1611_p1 = weights_V_TDATA[0:0];

assign xor_ln870_10_fu_1991_p2 = (tmp_5_fu_1647_p3 ^ p_Result_5_fu_1983_p3);

assign xor_ln870_11_fu_1997_p2 = (xor_ln870_10_fu_1991_p2 ^ 1'd1);

assign xor_ln870_12_fu_2015_p2 = (tmp_6_fu_1655_p3 ^ p_Result_6_fu_2007_p3);

assign xor_ln870_13_fu_2021_p2 = (xor_ln870_12_fu_2015_p2 ^ 1'd1);

assign xor_ln870_14_fu_2039_p2 = (tmp_7_fu_1663_p3 ^ p_Result_7_fu_2031_p3);

assign xor_ln870_15_fu_2045_p2 = (xor_ln870_14_fu_2039_p2 ^ 1'd1);

assign xor_ln870_16_fu_2063_p2 = (tmp_8_fu_1671_p3 ^ p_Result_8_fu_2055_p3);

assign xor_ln870_17_fu_2069_p2 = (xor_ln870_16_fu_2063_p2 ^ 1'd1);

assign xor_ln870_18_fu_2087_p2 = (tmp_9_fu_1679_p3 ^ p_Result_9_fu_2079_p3);

assign xor_ln870_19_fu_2093_p2 = (xor_ln870_18_fu_2087_p2 ^ 1'd1);

assign xor_ln870_1_fu_1877_p2 = (xor_ln870_fu_1871_p2 ^ 1'd1);

assign xor_ln870_20_fu_2111_p2 = (tmp_10_fu_1687_p3 ^ p_Result_s_10_fu_2103_p3);

assign xor_ln870_21_fu_2117_p2 = (xor_ln870_20_fu_2111_p2 ^ 1'd1);

assign xor_ln870_22_fu_2135_p2 = (tmp_11_fu_1695_p3 ^ p_Result_10_fu_2127_p3);

assign xor_ln870_23_fu_2141_p2 = (xor_ln870_22_fu_2135_p2 ^ 1'd1);

assign xor_ln870_24_fu_2159_p2 = (tmp_12_fu_1703_p3 ^ p_Result_11_fu_2151_p3);

assign xor_ln870_25_fu_2165_p2 = (xor_ln870_24_fu_2159_p2 ^ 1'd1);

assign xor_ln870_26_fu_2183_p2 = (tmp_13_fu_1711_p3 ^ p_Result_12_fu_2175_p3);

assign xor_ln870_27_fu_2189_p2 = (xor_ln870_26_fu_2183_p2 ^ 1'd1);

assign xor_ln870_28_fu_2207_p2 = (tmp_14_fu_1719_p3 ^ p_Result_13_fu_2199_p3);

assign xor_ln870_29_fu_2213_p2 = (xor_ln870_28_fu_2207_p2 ^ 1'd1);

assign xor_ln870_2_fu_1895_p2 = (tmp_fu_1615_p3 ^ p_Result_1_fu_1887_p3);

assign xor_ln870_30_fu_2231_p2 = (tmp_15_fu_1727_p3 ^ p_Result_14_fu_2223_p3);

assign xor_ln870_31_fu_2237_p2 = (xor_ln870_30_fu_2231_p2 ^ 1'd1);

assign xor_ln870_32_fu_2255_p2 = (tmp_16_fu_1735_p3 ^ p_Result_15_fu_2247_p3);

assign xor_ln870_33_fu_2261_p2 = (xor_ln870_32_fu_2255_p2 ^ 1'd1);

assign xor_ln870_34_fu_2279_p2 = (tmp_17_fu_1743_p3 ^ p_Result_16_fu_2271_p3);

assign xor_ln870_35_fu_2285_p2 = (xor_ln870_34_fu_2279_p2 ^ 1'd1);

assign xor_ln870_36_fu_2303_p2 = (tmp_18_fu_1751_p3 ^ p_Result_17_fu_2295_p3);

assign xor_ln870_37_fu_2309_p2 = (xor_ln870_36_fu_2303_p2 ^ 1'd1);

assign xor_ln870_38_fu_2327_p2 = (tmp_19_fu_1759_p3 ^ p_Result_18_fu_2319_p3);

assign xor_ln870_39_fu_2333_p2 = (xor_ln870_38_fu_2327_p2 ^ 1'd1);

assign xor_ln870_3_fu_1901_p2 = (xor_ln870_2_fu_1895_p2 ^ 1'd1);

assign xor_ln870_40_fu_2351_p2 = (tmp_20_fu_1767_p3 ^ p_Result_19_fu_2343_p3);

assign xor_ln870_41_fu_2357_p2 = (xor_ln870_40_fu_2351_p2 ^ 1'd1);

assign xor_ln870_42_fu_2375_p2 = (tmp_21_fu_1775_p3 ^ p_Result_20_fu_2367_p3);

assign xor_ln870_43_fu_2381_p2 = (xor_ln870_42_fu_2375_p2 ^ 1'd1);

assign xor_ln870_44_fu_2399_p2 = (tmp_22_fu_1783_p3 ^ p_Result_21_fu_2391_p3);

assign xor_ln870_45_fu_2405_p2 = (xor_ln870_44_fu_2399_p2 ^ 1'd1);

assign xor_ln870_46_fu_2423_p2 = (tmp_23_fu_1791_p3 ^ p_Result_22_fu_2415_p3);

assign xor_ln870_47_fu_2429_p2 = (xor_ln870_46_fu_2423_p2 ^ 1'd1);

assign xor_ln870_48_fu_2447_p2 = (tmp_24_fu_1799_p3 ^ p_Result_23_fu_2439_p3);

assign xor_ln870_49_fu_2453_p2 = (xor_ln870_48_fu_2447_p2 ^ 1'd1);

assign xor_ln870_4_fu_1919_p2 = (tmp_1_fu_1623_p3 ^ p_Result_2_fu_1911_p3);

assign xor_ln870_50_fu_2471_p2 = (tmp_25_fu_1807_p3 ^ p_Result_24_fu_2463_p3);

assign xor_ln870_51_fu_2477_p2 = (xor_ln870_50_fu_2471_p2 ^ 1'd1);

assign xor_ln870_52_fu_2495_p2 = (tmp_26_fu_1815_p3 ^ p_Result_25_fu_2487_p3);

assign xor_ln870_53_fu_2501_p2 = (xor_ln870_52_fu_2495_p2 ^ 1'd1);

assign xor_ln870_54_fu_2519_p2 = (tmp_27_fu_1823_p3 ^ p_Result_26_fu_2511_p3);

assign xor_ln870_55_fu_2525_p2 = (xor_ln870_54_fu_2519_p2 ^ 1'd1);

assign xor_ln870_56_fu_2543_p2 = (tmp_28_fu_1831_p3 ^ p_Result_27_fu_2535_p3);

assign xor_ln870_57_fu_2549_p2 = (xor_ln870_56_fu_2543_p2 ^ 1'd1);

assign xor_ln870_58_fu_2567_p2 = (tmp_29_fu_1839_p3 ^ p_Result_28_fu_2559_p3);

assign xor_ln870_59_fu_2573_p2 = (xor_ln870_58_fu_2567_p2 ^ 1'd1);

assign xor_ln870_5_fu_1925_p2 = (xor_ln870_4_fu_1919_p2 ^ 1'd1);

assign xor_ln870_60_fu_2591_p2 = (tmp_30_fu_1847_p3 ^ p_Result_29_fu_2583_p3);

assign xor_ln870_61_fu_2597_p2 = (xor_ln870_60_fu_2591_p2 ^ 1'd1);

assign xor_ln870_62_fu_2615_p2 = (tmp_31_fu_1855_p3 ^ p_Result_30_fu_2607_p3);

assign xor_ln870_63_fu_2621_p2 = (xor_ln870_62_fu_2615_p2 ^ 1'd1);

assign xor_ln870_6_fu_1943_p2 = (tmp_3_fu_1631_p3 ^ p_Result_3_fu_1935_p3);

assign xor_ln870_7_fu_1949_p2 = (xor_ln870_6_fu_1943_p2 ^ 1'd1);

assign xor_ln870_8_fu_1967_p2 = (tmp_4_fu_1639_p3 ^ p_Result_4_fu_1959_p3);

assign xor_ln870_9_fu_1973_p2 = (xor_ln870_8_fu_1967_p2 ^ 1'd1);

assign xor_ln870_fu_1871_p2 = (trunc_ln674_fu_1611_p1 ^ p_Result_s_fu_1863_p3);

assign zext_ln691_10_fu_2735_p1 = add_ln691_11_fu_2729_p2;

assign zext_ln691_11_fu_2745_p1 = add_ln691_12_fu_2739_p2;

assign zext_ln691_12_fu_2755_p1 = add_ln691_13_fu_2749_p2;

assign zext_ln691_13_fu_2771_p1 = add_ln691_15_fu_2765_p2;

assign zext_ln691_14_fu_2781_p1 = add_ln691_16_fu_2775_p2;

assign zext_ln691_15_fu_2791_p1 = add_ln691_17_fu_2785_p2;

assign zext_ln691_16_fu_2801_p1 = add_ln691_18_fu_2795_p2;

assign zext_ln691_17_fu_2811_p1 = add_ln691_19_fu_2805_p2;

assign zext_ln691_18_fu_2821_p1 = add_ln691_20_fu_2815_p2;

assign zext_ln691_19_fu_2831_p1 = add_ln691_21_fu_2825_p2;

assign zext_ln691_1_fu_2627_p1 = xor_ln870_63_fu_2621_p2;

assign zext_ln691_20_fu_2841_p1 = add_ln691_22_fu_2835_p2;

assign zext_ln691_21_fu_2851_p1 = add_ln691_23_fu_2845_p2;

assign zext_ln691_22_fu_2861_p1 = add_ln691_24_fu_2855_p2;

assign zext_ln691_23_fu_2871_p1 = add_ln691_25_fu_2865_p2;

assign zext_ln691_24_fu_2887_p1 = add_ln691_27_fu_2881_p2;

assign zext_ln691_25_fu_2897_p1 = add_ln691_28_fu_2891_p2;

assign zext_ln691_26_fu_2907_p1 = add_ln691_29_fu_2901_p2;

assign zext_ln691_27_fu_2917_p1 = add_ln691_30_fu_2911_p2;

assign zext_ln691_2_fu_2643_p1 = add_ln691_1_fu_2637_p2;

assign zext_ln691_3_fu_2659_p1 = add_ln691_3_fu_2653_p2;

assign zext_ln691_4_fu_2669_p1 = add_ln691_4_fu_2663_p2;

assign zext_ln691_5_fu_2679_p1 = add_ln691_5_fu_2673_p2;

assign zext_ln691_6_fu_2695_p1 = add_ln691_7_fu_2689_p2;

assign zext_ln691_7_fu_2705_p1 = add_ln691_8_fu_2699_p2;

assign zext_ln691_8_fu_2715_p1 = add_ln691_9_fu_2709_p2;

assign zext_ln691_9_fu_2725_p1 = add_ln691_10_fu_2719_p2;

assign zext_ln691_fu_2579_p1 = xor_ln870_59_fu_2573_p2;

assign zext_ln820_10_fu_2123_p1 = xor_ln870_21_fu_2117_p2;

assign zext_ln820_11_fu_2147_p1 = xor_ln870_23_fu_2141_p2;

assign zext_ln820_12_fu_2171_p1 = xor_ln870_25_fu_2165_p2;

assign zext_ln820_13_fu_2195_p1 = xor_ln870_27_fu_2189_p2;

assign zext_ln820_14_fu_2219_p1 = xor_ln870_29_fu_2213_p2;

assign zext_ln820_15_fu_2243_p1 = xor_ln870_31_fu_2237_p2;

assign zext_ln820_16_fu_2267_p1 = xor_ln870_33_fu_2261_p2;

assign zext_ln820_17_fu_2291_p1 = xor_ln870_35_fu_2285_p2;

assign zext_ln820_18_fu_2315_p1 = xor_ln870_37_fu_2309_p2;

assign zext_ln820_19_fu_2339_p1 = xor_ln870_39_fu_2333_p2;

assign zext_ln820_1_fu_1907_p1 = xor_ln870_3_fu_1901_p2;

assign zext_ln820_20_fu_2363_p1 = xor_ln870_41_fu_2357_p2;

assign zext_ln820_21_fu_2387_p1 = xor_ln870_43_fu_2381_p2;

assign zext_ln820_22_fu_2411_p1 = xor_ln870_45_fu_2405_p2;

assign zext_ln820_23_fu_2435_p1 = xor_ln870_47_fu_2429_p2;

assign zext_ln820_24_fu_2459_p1 = xor_ln870_49_fu_2453_p2;

assign zext_ln820_25_fu_2483_p1 = xor_ln870_51_fu_2477_p2;

assign zext_ln820_26_fu_2507_p1 = xor_ln870_53_fu_2501_p2;

assign zext_ln820_27_fu_2531_p1 = xor_ln870_55_fu_2525_p2;

assign zext_ln820_28_fu_2555_p1 = xor_ln870_57_fu_2549_p2;

assign zext_ln820_29_fu_2603_p1 = xor_ln870_61_fu_2597_p2;

assign zext_ln820_2_fu_1931_p1 = xor_ln870_5_fu_1925_p2;

assign zext_ln820_3_fu_1955_p1 = xor_ln870_7_fu_1949_p2;

assign zext_ln820_4_fu_1979_p1 = xor_ln870_9_fu_1973_p2;

assign zext_ln820_5_fu_2003_p1 = xor_ln870_11_fu_1997_p2;

assign zext_ln820_6_fu_2027_p1 = xor_ln870_13_fu_2021_p2;

assign zext_ln820_7_fu_2051_p1 = xor_ln870_15_fu_2045_p2;

assign zext_ln820_8_fu_2075_p1 = xor_ln870_17_fu_2069_p2;

assign zext_ln820_9_fu_2099_p1 = xor_ln870_19_fu_2093_p2;

assign zext_ln820_fu_1883_p1 = xor_ln870_1_fu_1877_p2;

assign zext_ln890_fu_2982_p1 = threshs_m_thresholds_V_0_0_q0;

endmodule //StreamingFCLayer_Batch_6_Matrix_Vector_Activate_Stream_Batch_2304u_256u_32u_1u_Recast_XnorMul_Slice_ap_uint_1_1u_Identity_ap_uint_1_ap_uint_32_ap_uint_1_ThresholdsActivation_256u_1u_1u_ap_uint_12_ap_uint_1_0_less_equal_ap_uint_12_ap_resource_lut_s
